Building Complete Collaborative Filtering Method 
System 
 
Li Yu 
Information School 
Renmin University of China 
Beijing, PR. China 
buaayuli@ruc.edu.cn 
Xiaoping Yang 
Information School 
Renmin University of China 
Beijing, PR. China 
yang@ruc.edu.cn
 
 
Abstract—Collaborative filtering (CF) is a key technique in 
recommender system. Recently, general neighborhood problem 
existing in collaborative filtering is identified in our previous 
work, which could result into fatal wrong under multi-
community or multi-interest case. In order to overcome it, 
collaborative filtering based on community (CFC) is presented. 
Unfortunately, CFC suffers from severer sparsity, which could 
result into worse performance. Various improved methods are 
proposed to enhance it. Based on a series of above methods, a 
complete and hierarchical Collaborative Filtering Method System 
(CFMS) is build. CFMS extend collaborative filtering, adapting 
to various different cases. Experiments are made to empirically 
valuate and compare various methods of CFMS.  
Keywords: Collaborative Filtering, General Neighborhood, 
Recommender System, Personalized Recommendation,  
 
I. INTRODUCTION 
In recent years, collaborative filtering has attracted a 
considerable amount of research attention resulting in the 
proposal of a large variety of CF approaches [4-10]. Recently, 
a fatal issue in collaborative filtering, general neighborhood 
problem, is identified in our previous work [11]. In fact, in the 
almost cases, the problem often could result into wrong 
recommendation. In order to avoid the problem, Collaborative 
Filtering based on Community (CFC) is presented. Although 
CFC make essential improvement for CF, unfortunately, it 
suffers from severer sparsity, more techniques are used to 
enhance it. Pre-filling is widely used, including vertical pre-
filling (VPF for short) and horizontal pre-filling (HPF for 
short). Pre-filling based on user-community pair (PUC) is 
suggested to improve them by combing VPF and HPF. But, it 
still could suffer from sparsity which results into disability to 
pre-filling when all items from a certain category (community) 
are null for active user. So, pre-filling based on association 
rule is presented to improve when PUC suffer from sparsity.  
Based on a series of above methods, a complete and 
hierarchical Collaborative Filtering Method System (CFMS) is 
build. CFMS extend simple collaborative filtering, adapting to 
various different situations. Experiments are made to 
empirically valuate and compare various methods of CFMS. 
The rest of the paper is organized as follows. The next 
section provides a review on related literature. In section 3, 
collaborative filtering based on community is presented. In 
section 4, pre-filling based on user-community pair (PUC) is 
proposed for limitation of CFC. In section 5, pre-filling based 
on community association (PCA), and CFC based on PCA 
(CAN) is presented to overcoming limitation of PUC. In 
section 6, a complete and hierarchical collaborative filtering 
methods system is build, including tree structure and flowing 
chart of methods. Finally, experimental evaluation is 
empirically made. Some concluding remarks and directions 
for future research are provided. 
 
II. RELATED WORK 
Tapestry is one of the earliest implementations of 
collaborative filtering-based recommender systems. The 
GroupLens research system provides a pseudonymous 
collaborative filtering solution for Usenet news and movies [1, 
2]. The method of selecting nearest-neighbors is an important 
issue for the nearest-neighbor CF approach. Sparsity problem 
in CF recommender system has been addressed in [2, 3, 6]. 
The problems associated with high dimensionality in 
recommender systems have been discussed and application of 
dimensionality reduction techniques to address these issues 
has been investigated in [6]. 
In [12] it is found that highly correlated neighbors can be 
exceptionally more valuable to each other in the prediction 
process than low correlated neighbors. Herlocker et al. [13] 
have systematically studied various design issues for the 
nearest-neighbor CF approach. In [14], Wang et al. proposed a 
generative probabilistic framework to exploit more of the data 
available in the user-item matrix by fusing all ratings with a 
predictive value for a recommendation to be made. Xue et al. 
[15] proposed a framework for collaborative filtering which 
combines the strengths of memory-based approaches and 
model-based approaches by introducing a smoothing-based 
method, and solved the data sparsity problem by predicting all 
the missing data in a user-item matrix. In [3], Zhang & Pu 
present a recursive prediction algorithm, which allows those 
nearest-neighbor users to join the prediction process even if 
they have not rated the given item.  

___________________________________ 
978-1-4244-6793-8/10/$26.00 ©2010 IEEE  
  
Lin et al. (2002) proposed an Adaptive-Support 
Association Rule Mining (ASARM) algorithm for 
collaborative filtering [10]. ASARM mines rules for one target 
item at a time, and automatically adjusts the minimum support 
value to mine a user-specified number of rules. The MAR 
approach proposed in Kim and Kim (2003) applied association 
rules between categories in multiple-level product taxonomies 
to address data sparseness [16].  
Although a lot of works contribute to collaborative 
filtering, to my best knowing, there is no previous work 
showing that classical collaborative filtering is not suit to 
multi-interests recommendation or multi-community 
recommendation due to general neighborhood problem. We 
present collaborative filtering based on community in previous 
work. Unfortunately, CFC suffers from severer sparsity. In 
this paper, after various improvements are made for CFC, 
based on the series of methods, a complete and hierarchical 
collaborative filtering method system is build.  
 
III. CF BASED ON COMMUNITY 
A. General Neighborhood Problem in CF 
Collaborative filtering (CF) rely on the fact that each 
person belongs to a larger group of similar behaving 
individuals (Neighborhood). Neighborhood is determined the 
user’s General Similarity which is based on all co-rated items. 
The neighborhood is called as General Neighborhood. They 
share general similar interest in various interest domains with 
active user. However, they could not share the most similar 
interest in a certain special interest field (community) with 
active user. So, to predict preference of user for a target item, 
general neighborhood should not be used to produce 
recommendation since they do not share the similar interest in 
target item. But traditional collaborative filtering does so. We 
call the problem as general neighborhood problem.  
B. CF Based on Community  
The ‘community’ has two meanings. One means category 
of items, where a community is a category of items whose 
have similar content characteristics and attributes. Another 
means group of users whose share common interest in a 
certain special field or have similar preference for a category 
of items. The former is called as Item Community while the 
latter is called as User Community. In this paper, ‘community’ 
means Item Community.  
General neighborhood is based on co-ratings for all 
communities. If neighborhood is determined based on co-
ratings for a special item community, to which the target item 
belongs, the general neighborhood could be avoid. We call 
neighborhood determined by co-ratings of users for a special 
community as Community Neighborhood, as shown in Figure 
1. In order to overcome general neighborhood in CF, 
community neighborhood should be used to generate 
recommendation. Collaborative filtering based community 
(CFC) is described as in Figure 2. It is easy to find that CFC 
suffers from heavier sparsity. Effective method must be 
employed to enhance the CFC by overcoming sparsity. 
 
Figure 1. General Neighborhood and Community Neighborhood 
____________________________________________________ 
1 Community set C={C1,C2,..,CK} GeneratingCommunity 
(Item_set); 
2 for each item Ij  do 
3    C(j)TransferingItemToCommunity(Ij); 
4 for each item Ij  do 
5    {If Ratingaj=null then  
6         CN(Ua,C(j))   
FindingCommunityNeighborhood(Ua,C(j)); 
7     PredictedRatingaj GeneratingPredict(Ua, j, 
CN(Ua,C(j))); 
8    } 
9 RISa  Items with Top_N max { PredictedRatingaj } 
__________________________________________________ 
Figure 2. CFC Algorithm 
 
IV. PRE-FILLING BASED ON USER-COMMUNITY FOR 
IMPROVING CFC 
In order to overcome the sparsity, the pre-filling method is 
employed to pre-fill null rating before producing community 
neighborhood. The method is widely used to deal with sparsity 
issue in many fields. In this section, two pre-filling methods, 
vertical pre-filling (VPF) and horizontal pre-filling (HPF) 
respectively, are first analyzed. Based on them, pre-filling 
based on user-community pair is proposed. 
A. Vertical and Horizontal Pre-filling 
The vertical pre-filling (VPF for short) method is done by 
averaging the ratings of all users for a fixed item vertically. By 
the method, missing rating is pre-filled with average value of 
ratings of all users for corresponding item. The horizontal pre-
filling (HPF for short) method is done by averaging the 
ratings of a fixed user for all items horizontally. That is to say, 
null rating is pre-filled with average value of ratings of 
corresponding user for all other items. The two method have 
their limitations.  
B. Pre-filling based on User-Community Pair (PUC) 
In order to overcome the limitations of HPF and VPF, pre-
filling based on user-community pair (PUC) is proposed. For 
PUC, it is supposed that a user has similar interest in items 
from same item community and missing rating could be pre-
filled with average rating of current user for items from same 
community with filled item. Detail PUC method is described 
as Figure 3. 
 
General Neighborhood 
          Active User
Community 
Neighborhood
Community 
Neighborhood 

____________________________________________________ 
1 Community set C={C1,C2,..,CK} GeneratingCommunity 
(Item_set), K is number of communities 
2 for each item Ij  do 
3    C(j)TransferingItemToCommunity(Ij); 
4  
5 for each user Ui  do 
6    { for each item Ij  do 
7         if Rijnull  then {Sum iC(j)  Sum iC(j)+RiC(j);  Count 
iC(j)++;} 
8      for each community Ck  do 
9         CRik  Sumik / Count ik; 
10    } 
11 for each user Ui  do 
12 for each item Ij  do 
13    {if Rij=null and CR iC(j)null  then PFVij CR iC(j);} 
____________________________________________________ 
Figure3. PUC Method 
For example, in Table 1, it is supposed that we need to 
pre-fill R33 for CFC algorithm in order to overcome sparsity. If 
both VPF method and HPF method are exploited to pre-fill 
R33, pre-filled value are respectively 2 and 3. If PFC method is 
exploited to done, then pre-filled value will be 
(3+4+1+5)/4=3.25 by averaging R31, R35, R37 and R39 because 
item I1, I3, I5, I7 and I9 are from same item community, English 
community and R31, R33,R35, R37 and R39 are preference value 
of user U3 for same community items. It is reasonable that R31, 
R33, R35, R37 and R39 are close. 
It is obvious that PUC is better than simple VPF and HPF 
since ratings used to pre-fill are more related to pre-filled 
rating. It only focuses ratings of a user on the items from same 
community. But it could often happens that ratings of a user 
on all items from a certain community are missing, which 
make PUC method invalid. For example, in Table 1, R22 
cannot be pre-filled by PUC because ratings of user U2 for 
item I4, I6, and I8 from Football community are missing. In this 
case, in next section, CAN method is suggested. 
Table 1. A sample on pre-filling based on community 
User 
/Item 
I1 
(E) 
I2 
(F) 
I3 
(E) 
I4 
(F) 
I5 
(E) 
I6 
(F) 
I7 
(E) 
I8 
(F) 
I9 
(E)
I10 
(E)
U1 3   1 4    5  
U2 3  3  3  2  5 4 
U3 3 2 ?  4  1  5  
U4   1 5   4    
U5 1 4  5 2   4 2 2 
U6     1      
U7 3 1 2 5 5  4  2 1 
In the above, three pre-filling methods are proposed to 
improve CFC by overcoming its severe sparsity. In practice, 
CFC is executed after pre-filling method is performed to 
weaken the sparsity. So, each pre-filling method could be 
corresponding to a CFC recommendation method. 
Recommendation methods corresponding to three pre-filling 
methods, VPF, HPF and PUC respectively, are called as CFC-
VPF, CFC- HPF and CFC-PUC. 
 
V. CF BASED ON COMMUNITY ASSOCIATION AND 
COMMUNITY NEIGHBORHOOD (CAN) 
For CAN, association degree between different 
communities is firstly analyzed. It is supposed that although 
interests of users in different community items are different, 
some communities may be associated. The hypothesis shows 
that interests of user in a community could still give us some 
information on his interests in other community, such as like 
association of beer with diaper. Helping from the view, we can 
pre-fill the rating though association of current community to 
other communities and ratings of user for items from other 
community. As shown in Fig.4, if we want to pre-fill R22, and 
ratings of user U2 for other items from community C1whihc I2 
belong to are null, then simple PFC method cannot be 
exploited to pre-fill R22. For this case, if we find that 
community C1 is associated to community C2, then rating of 
user U2 for item I2 can be pre-filled though ratings of U2 for 
items from community C2. Apart from ratings of U2 for items 
from community C2, association degree between community 
C1 and community C2 should be considered when pre-filling. 
In order to mining association rule among different 
communities, ratings of users for all community items will be 
used. Since rating is not binary, sharp boundary problem will 
happen when traditional association rule mining method is 
exploited and much preference information will be lost when 
rating data is directly transferred into binary data. In order to 
employ association rule method for binary data, but litter 
preference information is lost, fuzzy association rule method is 
often exploited [19, 20]. In order to find association rule 
between communities based on rating matrix, Fuzzy 
association rule mining (FAR) is employed. The CAN 
algorithm is described as Figure 5. 
 
 
Figure 4. Pre-filling based on community association 
 
VI. COMPLETE COLLABORATIVE FILTERING METHOD 
SYSTEM 
Based on above series of methods, we can build a 
complete collaborative filtering method system which contains 
traditional Collaborative Filtering (CF), Collaborative 
Filtering based on Community (CFC), CFC base on VPF 

(CFC-VPF), CFC base on HPF (CFC-HPF), CFC base on 
PUC (CFC-PUC), Collaborative Filtering based on 
Community Association and Community Neighborhood (CAN 
for short), as shown in Figure 6. 
____________________________________________________ 
Input: 
(1) User_set: {Ui} ; Item_set: {Ij} ;  
Ratings of users for items:{Rij}, (i=1,2,…,M; j=1,2,..,N) 
(2) Number of communities: K ; 
(3) Number of recommended items: Top_N; 
(4) minConf, minSupp; 
(5) Active user-- Ua ; 
Output: Recommended item set for user Ua --RISa 
CAN Algorithm 
1 //Determining community 
2  C={C1,C2,..,CK} GeneratingCommunity (Item_set); 
3 //Computing rating of each user for each community 
4  for each user and community  do 
5     {CRik} ComputingCommunityRating(R,C ); 
6 //Generating association rules among communities 
7  ruleset GeneratingCommunityRule(R, C, minConf, 
minSupp ) ; 
8 //Pre-filling rating matrix 
9  for each ratingij=null then 
10     PFVij  Pre-filling(ratingij)  
11 // Generating prediction of rating based on community 
neighborhood 
12  for each item Ij  do 
13     { If Ratingaj=null then  
14          CN(Ua,C(j)) 
FindingCommunityNeighborhood(Ua,C(j)); 
15      PredictedRatingaj GeneratingPredict(Ua, j, 
CN(Ua,C(j))); 
16     } 
17 RISa  Items with Top_N max { PredictedRatingaj } 
____________________________________________________ 
Figure 5. CAN algorithm 
 
Figure 6. Collaborative Filtering Method Tree 
Traditional CF is most simple recommendation algorithm 
which only adapt to situation where all recommended items 
belong to alone interest title or domain. If the condition can 
not be satisfied, CFC algorithm is considered. But only when 
rating is enough dense, community neighborhood of every 
user in each community can be determined. Otherwise, CFC 
based on pre-filling is used. Although there are many pre-
filling method, generally, PUC is suggested to be exploited. 
But if there is no enough data, VPF and HPV are alternative. 
In order to use CFC-PUC, rating data should be enough dense 
so rating of each user-community can be computed, otherwise, 
CAN should be performed. The flow chart of various methods 
is shown in Figure 7. 
 
Figure 7.  Collaborative Filtering Method Flowing Chart 
In the following, various methods are evaluated through 
experiments. 
 
VII. EXPERIMENT EVALUATION 
A. Dataset 
Datasets employed in our experiment are from EachMovie 
collaborative filtering service. The EachMovie service was 
part of a research project at the Systems Research Center of 
Digital Equipment Corporation. The service was available for 
a period of 18 months and was shut down in September 1997. 
During that time the database grew to a fairly large size, 
containing ratings from 72,916 users on 1,628 movies. User 
ratings were recorded on a numeric six-point scale (0.0, 0.2, 
0.4, 0.6, 0.8, and 1.0). The data set is publicly available and 
can be obtained from Digital Equipment Corporation [20]. 
Although the data from 72,916 users is available, we restrict 
the analysis to the 450 users in the database. These 450 users 
provided ratings for 300 different movies. In order to test the 
performance of various algorithms under different conditions 
(Dense or Sparse), datasets used in our experiment are 
grouped into group A and group B. Dataset in group A is 
denseness dataset in which users have more ratings, and 
dataset in group B is sparse dataset in which user have little 
ratings. Datasets in group A are named according to its 
number of users. Altogether, five datasets is used in our 
experiment, respectively as A50, A150, A250, A350, A450 in 
which users respectively are the top 50, 150, 250, 350, 450 
users that have the most ratings. Datasets in group B consist of 
ratings of top 50?150?250?350?450 user by userID for 
top 250 movies. They are dataset B50?B150?B250?B350
?B450. Dataset in group B have heavy sparsity comparing 
with datasets in group A. 
Y 
Y 
Y 
N 
N 
N 
Community neighborhood of 
user for a community can not 
be determined 
Rating of user-community can 
not be computed for sparse 
ratings of user-item 
There exist multi-interest or 
multi-domain 
CAN 
 CF 
CFC 
CFC-PUC 
CF  
CFC 
CFC-VPF CFC-PUC 
CAN 
CFC-HPF 

Table 2. Experiment Datasets 
Dataset 
Lowest 
number 
of 
ratings 
Sparsit
y 
A50 59 70.6% 
A150 48 58.6% 
A250 43 52.7% 
A350 40 49.5% 
A450 38 47.3% 
Group A 
Dataset Ratings Sparsity 
B50 409 8.18%
B150 861 5.74%
B250 1196 4.78%
B350 1549 4.43%
B450 1919 4.26%
Group B 
B. Experiment Setup 
In each experiment, we varied user correlation threshold 
(UCT) from 0 to 0.9 with step 0.1 and also varied UCT. So, 10 
experiments are made for each datasets, in where, the best 
result is used to analyze in the following. For each experiment, 
Top-N recommendation tactics is exploited, and number of 
recommended movie is fixed as 30 for comparing the 
performance of various algorithms. 
In the algorithm CAN, movie communities in dataset 
Eachmovie are determined according to the type of movie 
provided by dataset. So, there are ten movie communities in 
our experiment, respectively Action, Animation, Art_Foreign, 
Classic, Comedy, Drama, Family, Horror, Romance, and 
Thriller.  
Mean Absolute Error (MAE) between ratings and 
predictions is a widely used metric. It is exploited in our 
experiment.  
N
qp
MAE
N
i ii =
?
=
1  
   In the experiment, Climentine11.0 is used in association rule 
and Delphi is used to write other part code in all algorithms. 
The algorithm proceeding is run in IBM T60 PC Note.  
0.120
0.140
0.160
0.180
0.200
0.220
0.240
A50 A150 A250 A350 A450
Dense DataSet
M
A
E
CAN CFC-PUC CFC-VPF
CFC-HPF CFC CF
 
Figure 8. Comparing of Performance under dense dataset 
0.120
0.145
0.170
0.195
0.220
0.245
B50 B150 B250 B350 B450
Sparse DataSet
M
A
E
CAN CFC-PUC CFC-VPF
CFC-HPF CFC CF
 
Figure 9. Comparing of Performance under sparse dataset 
C. Experiment Result 
In this section, several findings though experiment are 
given. Detail experiment result is shown in Figure 8 and 9. 
First, it is shown in Figure 8 and 9 that all five methods 
based on community, CAN, CFC-PUC, CFC-VPF, CFC-HPV 
and CFC respectively, generally achieve better performance 
than CF. It is explained that there exist general neighborhood 
problem in traditional collaborative filtering and that 
community neighborhood is effective to overcome the general 
neighborhood in CF.  It is noticed that CFC has no advantage 
over CF, especially under sparsity. As shown in Figure 9, CFC 
show worse performance than CF. It is explained that CFC 
suffers from severer sparsity than CF. It tells us that simply 
considering community in collaborative filtering is not always 
good strategy. 
Secondly, as shown in Figure 8 and 9, generally, four CFC 
methods based on pre-filling, CAN, CFC-PUC, CFC-VPF and 
CFC-HPV respectively, have advantage over CFC, especially 
under sparsity situation. By comparing Figure 8 with Figure 9, 
advantage of CAN, CFC-PUC, CFC-VPF and CFC-HPV over 
CFC is more obvious under sparse data (Figure 9) than under 
dense data (Figure 8). It is explained that CFC could suffer 
from severe sparsity, and pre-filling based on community is 
help for overcoming the sparsity.  
Thirdly, it is noticed that CFC-PUC generally has better 
performance than CFC-VPF and CFC-HPV.  It is shown that 
pre-filling based on user-community is better selecting. 
Finally, it also is shown in Figure 8 and 9 that CAN 
generally achieve better performance than CFC-PUC. It is 
explained that it is not enough to pre-fill simply based on user-
community because it is possible that certain user-community 
could be null, and pre-filling could not succeed. In fact, it is 
discovered that CAN has more obvious advantage over CFC-
PUC under sparse data than under dense data. 
VIII. CONCLUSION 
Recommender systems are a powerful new technology for 
extracting additional value for a business from its user 
databases. Collaborative filtering is the most important 

method widely used in recommender systems. In this paper, 
starting from general neighborhood problem, various methods 
are proposed and a complete collaborative filtering method 
system is build. Also, various methods are compared 
empirically each other. Although experiments elementally 
support our ideas, it is still need more experiments to verify 
them with more dataset in the future. More research need to be 
made to enhance CFC by other methods, such as ontology.  
ACKNOWLEDGMENT  
This research was partly supported by National Science 
Foundation of China under grants No.70871115, (Renmin 
University of China) RUC Publishing Plan for International 
Journal under grants No.10XNK090. Special thank is given to 
the System Research Center of Digital Equipment Corporation 
for providing Each-Movie database available for research. We 
also like to thank anonymous reviewers for their valuable 
comments. 
REFERENCES 
[1] Resnick and Varian.(1997). Recommender systems. Communications of 
the ACM, 40(3):56¨C58, 1997. 
[2] Sarwar, B. M., Karypis, G., Konstan, J. A., and Riedl, J. (2000). 
Analysis of Recommendation Algorithms for E-Commerce. In 
Proceedings of the ACM EC’00 Conference. Minneapolis, MN. pp. 158-
167 
[3] Schafer, J. B., Konstan, J. and Riedl, J. (1999), ‘Recommender Systems 
in E-Commerce’. In: EC ’99: Proceedings of the First ACM Conference 
on Electronic Commerce, Denver, CO, pp. 158-166.  
[4] Jiyong Zhang, Pearl Pu (2007), A Recursive Prediction Algorithm for 
Collaborative Filtering Recommender Systems, RecSys’07, October 19–
20, 2007, Minneapolis, Minnesota, USA. 
[5] Ailin Deng, YangYong Zhu, BaiLe Shi (2003), A Collaborative 
Filtering Recommendation Algorithm Based on Item Rating Prediction, 
Journal of Software, Vol.14, No.9 
[6] Badrul M. Sarwar, George Karypis, Joseph A. Konstan, John T. Riedl 
(2000),Application of Dimensionality Reduction in Recommender 
System -- A Case Study,WEBKDDD2000 
[7] Gyenesei A and Teuhola J (2001) Interestingness Measures for Fuzzy 
Association Rules. In Proceedings of the Fifth European Conference on 
Principles of Data Mining and Knowledge Discovery, September 3-5, 
Freiburg, Germany, pp 152-164. 
[8] Cane Wing-ki Leung, Stephen Chi-fai Chan, Fu-Lai Chung (2006), A 
collaborative filtering framework based on fuzzy association rules and 
multiple-level similarity. Knowledge and Information Systems (KAIS), 
Volume 10, Issue 3, October 2006, 357– 381. 
[9] Feng-Hsu Wang, Hsiu-Mei Shao? 2004??Effective Personalized 
Recommendation Based on Time-Framed Navigation Clustering and 
Association Mining?Expert Systems with Applications 27 (2004) 365–
377 
[10] Lin W, Alvarez SA and Ruiz C (2002) Efficient Adaptive-Support 
Association Rule Mining for Recommender Systems. Data Mining and 
Knowledge Discovery, 6(1): 83-105. 
[11] Li Yu, Who is True Neighborhood, Community Neighborhood or 
General Neighborhood? Submitted to ACM SIGIR 2008. 
[12] John s. Breese, David Heckerman, and Carl Kadie (1998). Empirical 
analysis of predictive algorithms for collaborative filtering. In 
Proceedings of the 14th conference on Uncertaintly in Artificial 
Intelligence, pages 43¨C52, 1998. 
[13] Herlocker, J. A. Konstan, and J. Riedl. An empirical analysis of design 
choices in neighborhood-based collaborative filtering algorithms. 
Information Retrieval, 5(4):287?310, 2002. 
[14] J. Wang, A. P. de Vries, and M. J. Reinders. Unifying user-based and 
item-based collaborative filtering approaches by similarity fusion. In 
Proc. of SIGIR, 2006. 
[15] G.-R. Xue, C. Lin, Q. Yang, W. Xi, H.-J. Zeng, Y. Yu, and Z. Chen. 
Scalable collaborative filtering using cluster-based smoothing. In Proc. 
of SIGIR, 2005. 
[16] Kim C and Kim J (2003) A Recommendation Algorithm Using Multi-
level Association Rules. In Proceeding of the IEEE/WIC International 
Conference on Web Intelligence, October 13-17, Halifax, Canada, pp 
524-527. 
[17] Fu X, Budzik J and Hammond KJ (2000) Mining Navigation History for 
Recommendation. In Proceedings of the 2000 International Conference 
on Intelligent User Interfaces, January 9-12, New Orleans, LA, USA, pp 
106-112. 
[18] Mei-Ling Shyu (2006), Collaborative Filtering by Mining Association 
Rules from User Access Sequences?2005 International Workshop on 
Challenges in Web Information Retrieval and Integration (WIRI’05) 
[19] Rashmi S, Kirsten S, Comparing Recommendations Made by Online 
Systems and Friends[R], SIMS, University of California,2001 
[20] McJones, P. (1997). EachMovie collaborative filtering data set. DEC 
Systems Research Center. 
http://www.research.digital.com/SRC/eachmovie/. 
[21] Resnick, P., Iacovou, N., Suchak, M., Bergstrom, P. and Riedl, J.(1994), 
‘GroupLens: An Open Architecture for Collaborative Filtering of 
Netnews’. In: Proceedings of the Conference on Computer Supported 
Cooperative Work, Chapel Hill, NC, pp. 175-186. 
[22] Yiyang Zhang,  Jianxin (Roger) Jiao (2006), An Associative 
Classification-Based Recommendation System for Personalization in 
B2C E-Commerce Applications?Expert Systems with Applications, 
2006 
[23] Hao Ma,  Haixuan Yang,  Irwin King,  Michael R. Lyu, Semi-
nonnegative matrix factorization with global statistical consistency for 
collaborative filtering,CIKM2009, P767-776 
[24] Benjamin Van Roy,  Xiang Yan, Manipulation-resistant collaborative 
filtering systems, 2009 Proceedings of the third ACM conference on 
Recommender systems, P165-172 
[25] Asela Gunawardana,  Christopher Meek, A unified approach to building 
hybrid recommender systems, 2009  Proceedings of the third ACM 
conference on Recommender systems, P117-224 
 
 
 
 
 
 
 
  
 
 
 
 
   
 
 
 
 
 
 
 
 
 
 
 

