A  Sampling Algorithm for Mining Association Rules in Distributed Database  
 
Shi Yue-mei 
Dept. of Computer of Xinzhou Teachers University  
Xinzhou Teachers University, xztc 
Xinzhou, China 
sym_2291@sina.com 
Hu Guo-hua  
Dept. of Computer of Xinzhou Teachers University  
Xinzhou Teachers University, xztc 
Xinzhou, China 
hgh1308@126.com 
 
 
Abstract—This paper introduces SMA, a sampling algorithm 
for mining association rules in distributed database. SMA 
adopts two-way sampling technique in every website and 
amalgamates those local samples into a sampling dataset. In an 
empirical study, SMA was able to accelerate the speed and 
improve the accuracy of mining association rules in distributed 
database. 
Keywords-sampling; association rules; distributed database 
I.  INTRODUCTION 
With the rapid development of database and internet, the 
database is becoming very large, multi-dimensional and 
distributed. The volume of data in distributed database is 
growing faster than the speedup in processing times. And 
data mining is one of effective means to solve these 
problems, in which association rules mining is a hotspot. At 
present, the frequent pattern is still the main task of mining 
association rules in distributed database, and the algorithms 
have FDM [1], DDDM [2], FDMA [3] and so on. In FDMA, 
obtain global-frequent itemsets based on transferring those 
bounded sub-trees, although it can reduce amount of 
communication overhead compared with the FDM and 
DDDM, pretreatment still isn't used in local sites, so the 
efficiency of processing data is still lower. In our study, a 
sampling algorithm, SMA, is proposed. 
A. Association rules mining  
Association rules identify relationships among sets of 
items and can be used to evaluate business trends, identify 
purchasing patterns, and classify customer groups. In brief, 
an association rule is an expression: YX ? ,where X and Y 
are itemsets and ?YX =? . Two measures is support and 
confidence. And the support of the rule is the probability that 
X and Y hold together among all the possible presented 
cases. And the confidence is defined as the percentage of 
transaction containing Y in addition to X with regard to 
overall number of transactions containing X. 
The problem of discovering all association rules can be 
decomposed into two subproblems [4]: 
• Find all frequent sets of items that have transaction 
support above minimum support. 
• Use the frequent itemsets to generate the desired 
rules. 
In distributed database, there are some correlation 
between Local frequent itemsets and global frequent ones 
such as: 
• A global frequent item set is not sure to be a local 
frequent item set; 
• Each global frequent item set is at least a local 
frequent item set in one site. 
  If we obtain the global frequent itemsets by finding 
local frequent itemsets in each local database, it will be need 
for expensive I/O operation cost and the cost of 
communications. But it is inconceivable that we mine global 
frequent itemsets directly in the whole large database which 
is formed by all data in every website. So the size of the data 
sets will be affected to the execution efficiency of 
association rule mining algorithm. This paper introduces a 
new sampling technique, which would be used to process the 
data in every website. Then a whole sampling database 
would be generated, in which we can find the global frequent 
itemsets directly. Therefore, the speed of process the data in 
distributed database will be accelerated. 
B. Sampling thinking 
The Despite a complete data set is very important for 
getting reliable conclusions, but this is not entirely necessary. 
The reason as follows: 
• There is more data redundancy in complete data set 
than in the sample data sets; 
• There is relatively expensive I/O operation cost in 
complete data set; 
• There is some instability in large distributed data set, 
which may affect on discovering the eventual of 
knowledge. 
Sampling is a practical data reduction technique that has 
been applied to a variety of problems in database systems. 
Zaki, et al.[6] use a simple random sample to obtain 
association rules, and John and Langley [7] discuss a 
dynamic sampling method that selects the sample size based 
on the observed behavior.  
Chen, Haas and Scheuermann [8] propose a new two-
phase sampling based algorithm for discovering association 
rules that in phase I, a large initial sample of transactions is 
collected and used to quickly and accurately estimate the 
support of each individual item in the database, and in phase 
II, a small final sample is obtained from the initial sample by 
trimming tactic. 
2009 First International Workshop on Database Technology and Applications
978-0-7695-3604-0/09 $25.00 © 2009 IEEE
DOI 10.1109/DBTA.2009.110
431
II.  SAMPLING MINING ALGORITHM 
A. SMA basic idea 
The SMA algorithm mines association rules as follows: 
a) Obtain an initial random sample Si from Di; 
b) Obtain a reduced sample set by using a two-way 
sampling technique; 
c) Trim those large sample sets based on Minimum 
entropy function; 
d) Generate a whole sampling database; 
e) Run a standard association rules algorithm to mine 
the final association rules with minimum support p and 
confidence c. 
B. Type of sampling 
How to choice initial sample in two-phase sampling is a 
strategic problem, and the method is that such as simple 
random sampling with replacement (SRSWR), simple 
random sampling without replacement (SRSWOR), 
systematic random sampling (SRS) and so on. The SRSWR 
requires that each element has an equal probability of being 
included in the sample. In practice, SRSWOR is carried out, 
because there is no need to collect the information more than 
once from an element. Additionally, SRSWOR gives a 
smaller sampling variance than SRSWR. SRS selects every 
k-th element after a random start (between 1 and k), and if N 
denotes the number of transaction in initial database that 
there will be ? ?KN /  elements to compose initial sample.     
Because the data of original transaction database is random, 
SRS is used to obtain initial sample. 
C. Two-way sampling technique 
In the two-stage sampling process, the goal is to obtain a 
smaller but more representative sample by trimming the 
initial sample at second phase. In other words, those 
unimportant   transactions are cut from the first samples, so 
that the final samples have higher precision. In the procedure 
of the cutting, we cite a distance function. 
Let Di(1?i?n)be a partitioned database located in n 
sites S1,S2 … Sn with their names as D1,D2 … … Dn 
respectively. We denote by Si initial samples obtained from 
Di, and by Ik(Di) the collection of k-itemsets in Di, and by 
FSi the final sample after implementation of the algorithm. 
Let A and T be an arbitrary item set and transaction set 
respectively. We define n(A,T) to be the number of 
transactions in T that contain A and |T| to be the total number 
of transactions in T. Then the support of A in Di and in Si is 
given by Support(A,Di)=n(A,Di)/|Di| and 
Support(A,Si)=n(A,Si)/|Si|, respectively. 
We use a distance function [8]: 
 ?
)(?
)),(-),((),Si(
SiIA k
SiASupportFSiASupportSiFDist =         (1)  
to trim the initial samples based on two properties as 
follows: 
• For a transaction t?Si, compute function Dist(Si-
{t},Si), and choice that transaction t whose value is 
minimum to be trimmed from sample Si. Because 
the function Dist(Si-{t},Si) reflects the importance 
of T in the sample Si, that is the more unimportant 
matters have the smaller value of the function. 
• For a transaction t ? Si but FSit ?  , compute 
function Dist(FSi+{t},Si), and choice that 
transaction t whose value is maximum to be added to 
sample FSi. Because the function Dist(FSi+{t},Si) 
reflects the importance of T in the sample FSi, that is 
the more important matters have the greater value of 
the function. 
This paper introduces SMA(Sampling Mining 
Algorithm), a two-way sampling technique that can trim 
some more unimportant transactions from Si and add other 
more important transactions to FSi based on two properties 
as above in every cycle. It is clear that the algorithm can 
accelerate the speed and reduce the cost of I / O operation in 
distributed database. 
D. The SMA algorithm 
The general structure of the SMA algorithm is given in 
the Fig. 1. 
III. PERFORMANCE STUDY  
In this section we describe an empirical study carried out 
to evaluate the performance of SMA. All experiments were 
performed on Genuine Intel(R) series Windows Server 
multi-user LAN with a processor speed of 173 MHZ. In 
LAN, there are three computers constitute distributed sites, 
and there are equal recorders in every site. 
A. Experimental method 
In order to test the performance of the algorithm, we used 
a synthetic database. The database D was generated using 
data synthesis method [1], then was divided equally to three 
sites. The total numbers of transactions and items are 390K 
and 1000 respectively, the number of maximal potentially 
global-frequent items is 1500, and the average length of 
transactions is 10, and the average length of maximal 
potential frequent itemsets is 4. We used a minimum support 
of 0.75%, at which level there would be neither too many nor 
too few frequent itemsets, and the length of the maximal 
frequent itemsets is 8. 
B. Experimental result 
We performed experiments using SMA, SRS, DDDM 
and FDMA. For each database, we executed algorithms 10 
times, thus each performance data reported below is an 
average of 10 observations, but not be actual value at a time. 
At first, we examined the performance of the different 
algorithms in terms of accuracy in a different sampling rate. 
The measure of accuracy is defined as follows [9]: 
432
input: distributed database Di ,the minimum support p, the 
minimum confidence c, the number of the final 
sample FSi. 
output: global association rules . 
 
obtain a systematic sample Si from Di;   
compute Support(A,Si)for each A?I1(Si);   
while(|Si|>n)and(|FSi |<n)do        
{ 
divide Si-FSi into disjoint groups of min(k,|Si-FSi|) 
transactions each; 
for each group G do 
{ 
for each A?I1(FSi)do  
compute Support(A;FSi); 
for each t?G do  
{ 
compute Dist(FSi+{t},Si); 
compute Dist(Si-{t},Si); 
if Dist(FSi +{t},Si)>maxDist do 
{ 
maxDist=Dist(FSi+{t},Si);   
tp=t; 
} 
if Dist(Si -{t},Si)<minDist do 
{ 
minDist=Dist(Si-{t},Si);   
tm=t; 
} 
} 
FSi=FSi+{tp}; 
Si=Si-{tm}; 
} 
} 
FSiFS
N
1=i
?= ; 
run a standard association-rule algorithm against FS to 
obtain final set of association rules; 
)()(
)(-)()(-)(
1
SLDL
DLSLSLDL
Accuracy
+
+
?=
 .                     (2)  
The sampling ratios chosen are 5%, 10%, 15%, 20% and 
25%. Fig. 2 illustrate the accuracy of SRS and SMA. As 
shown in the Fig. 1, SMA is more accuracy than SRS, and 
can quickly achieve a high level of accuracy at about 96%. 
Figure 1.  SMA algorithm 
75
80
85
90
95
100
5 10 15 20
Sampling Ratio(%)
Ac
cu
ra
cy
(%
)
SMA
SRS
 
Figure 2.  Accuracy vs. sampling ratio 
0
20
40
60
80
100
0.75 1.00 1.25 1.50 1.75 2.00
Minimum support (%)
Ex
ec
ut
io
n 
ti
me
 (
s)
DDDM
FDMA
SMA
 
Figure 3.  Execution time vs. support ratio 
Secondly, we compare the performance of the different 
algorithms in terms of execution time in a different support 
ratio. The execution time includes sampling time and 
implementing time of the general mining algorithm. The 
sampling ratio is 15%, the remaining parameters remain the 
same, and the support ratios chosen are 0.75%, 1%, 1.25%, 
1.5%, 1.75% and 2%. Fig. 3 illustrates the execution time of 
DDDM, FDMA and SMA. As shown in the fig. 2, SMA is 
faster than DDDM, and FDMA. 
IV. CONCLUSIONS 
We have introduced in this paper a sampling algorithm to 
mine association rules in distributed database, SMA adopts 
two-way sampling technique in every website, that is cutting 
out some unimportant transactions from initial samples, as 
well as adding other important transactions to the final 
results of the samples gradually. And trim those large sample 
sets based on Minimum entropy function. In an empirical 
study, it is clear that SMA was able to improve the accuracy 
and accelerate the speed of mining association rules in 
distributed database to a certain extent. 
REFERENCES 
[1] CHEUNG.DW, HAN J W,NG V T, et al. A fast distributed algorithm 
for mining association rules//Proc of IEEE the 4th Int’l Conf Parallel 
and Distributed Information Systems: IEEE Computer Society, 1996, 
pp.31-44. 
[2] HAN J, NG V, et al. Maintenance of discovered association rules in 
large databases: an incremental updating technique//Proceedings of 
the 12th International Conference on Data Engineering. New Orleans, 
Louisiana, USA, 1996, pp.106-114. 
[3] Song Baoli, Qin zheng. Fast Mining Algorithm for Distributed Global 
Frequent Itemsets. Journal of Xi?an Jiaotong University, 2006,40?
8?,pp.923-927. 
433
[4] Agrawal R,Srikant R.Fast algorithms for mining association 
rules//Proc of the 20th Int’l Conf Very Large Data 
Bases(VLDB’94),1994,pp.487-499. 
[5] Shi Zhongzhi. Knowledge Discovery. Tsinghua University Press, 
2002, pp.138-140. 
[6] Zaki M J, Parthasarathy S, Li W, et al. Evaluation of sampling for 
data mining of association rules//Proceedings of the 7th Inter-national 
Workshop on Research Issues in Data Engineering 
(RIDE’97),1997,pp.42-50. 
[7] John G H,Langley P.Static versus dynamic sampling for 
datamining]//Proc Second Intl Conf Knowledge Discovery and 
DataMining,1996,pp.367-370. 
[8] Chen B,Haas P,Scheuermann P.A new two-phase sampling 
basedalgorithm for discovering association rules//Proceedings of 
ACMSIGKDD International Conference on Knowledge Discovery 
and Data Mining,2002:462-468. 
[9] Houdhuri S,Datar M,Motwani R, et al.Overcoming limitations of 
sampling for aggregation queries]//Proceedings of the 17th In-
ternational Conference on Data Engineering,2001,pp.534-542. 
[10] Wu Jian, Li Xingming. An Efficient Association Rule Mining 
Algorithm In Distributed Databases. Knowledge Discovery and Data 
Mining, WKDD 2008.International Workshop on Volume 33,Issue 
23-24 Jan.2008,pp.108-113.. 
 
434
