Generalized Time Related Sequential Association Rule Mining and
Traf?c Prediction
Huiyu Zhou, Shingo Mabu, MemberIEEE Kaoru Shimada, MemberIEEE and Kotaro Hirasawa,
MemberIEEE
Abstract—Time Related Association rule mining is a kind of
sequence pattern mining for sequential databases. In this paper,
we introduce a method of Generalized Association Rule Mining
using Genetic Network Programming (GNP) with time series
processing mechanism in order to ?nd time related sequential
rules ef?ciently. GNP represents solutions as directed graph
structures, thus has compact structure and implicit memory
function. The inherent features of GNP make it possible for
GNP to work well especially in dynamic environments. GNP
has been applied to generate time related candidate association
rules as a tool using the database consisting of a large number
of time related attributes. The aim of this algorithm is to
better handle association rule extraction from the databases in
a variety of time-related applications, especially in the traf?c
volume prediction problems. The generalized algorithm which
can ?nd the important time related association rules is described
and experimental results are presented considering a traf?c
prediction problem.
I. INTRODUCTION
Data mining, the process of extracting hidden and/or
predictive information from large databases, has become
an important ?eld since a large amount of data have been
collected in various applications. Mining these data ef?-
ciently and effectively is too dif?cult and intricate when
using conventional methods, especially for the sequential
database in dynamic systems. Sequence pattern mining is
the analytical process of digging through and exploring the
enormous sets of sequential data for the search of association
patterns and systematic relationships between attributes in
sequential datasets.
For example, “If Section S on the traf?c map has high
traf?c volume, then the Section D also has high traf?c
volume.” is a typical relationship that we will obtain using the
normal data mining methods, however, in dynamic systems
with sequential datasets, we are more interested in the
sequential association patterns such as “If Section S on the
traf?c map has high traf?c volume at time t, then Section D
also has high traf?c volume 10 time units later.”
In order to extract these sequential association patterns
in the time-related databases and represent at what time the
event will happen or how long the event will persist, we have
already proposed a method of time-related association rule
mining [1] using Genetic Network Programming (GNP) to
improve the ef?ciency and effectiveness of the rule extraction
in time related databases. But, in this paper, we generalized
the original time-related association rule mining in terms
Graduate School of Information, Production and Systems, Waseda
University; Email: zhy836@toki.waseda.jp; mabu@aoni.waseda.jp;
k.shimada@aoni.waseda.jp; hirasawa@waseda.jp
of multi-judgements, where there are a good number of
branches in the judgement nodes instead of simple Yes/No-
side branches in the conventional method.
The most popular model in the association rule mining
is Apriori algorithm, in which Agrawal et al proposed the
support-con?dence framework [2]. However, Apriori algo-
rithm may suffer from large computational complexity for
rule extraction when extracting from dense databases. Many
approaches have been proposed to extract association infor-
mation in various directions, including ef?cient apriori-like
mining methods [3], [4]. The variations of Apriori approach
such as the hash-based algorithm have also been studied for
ef?ciency [5], [6].
Genetic Algorithm(GA) [7],[8], proposed by J.H. Holland,
has also been applied to data mining research in order to
deal with dense databases. Holland proposed two kinds of
approaches, Pittsburgh approach and Michigan approach.
However, because a rule is represented as an individual or
part of an individual of GA, it is hard for them to give
us a complete picture of the underlying relationships in
problem domains, thus not easy to extract enough number
of association rules.
Genetic Programming(GP) [9], [10] improved the expres-
sion ability of GA by evolving individuals as tree structures.
Although, GP enables a more explicit representation of
association rules, it may suffer from the problems of loose
structure and bloating, especially in dynamic problems.
Unlike the other methods mentioned above, the main task
of GNP-based data mining is to allow the GNP individuals to
self-evolve and extract association rules as many as possible.
What’s more, it uses evolved individuals(directed graphs of
GNP) just as a tool to extract candidate association rules.
Thus, the structure of GNP individuals does not necessarily
represent the association relations of the database. Instead,
the extracted association rules are stored together in the rule
pool separated from the individuals. As a result, the structures
of GNP individuals are less restricted than the structures of
GA and GP, and GNP-based data mining becomes capable
of producing a large number of association rules.
The basic feature of the proposed mechanism is like the
following:
• The GNP structure of rule representation is generalized
to multiple branches instead of simply “Yes-side” or
“No-side” transitions. Thus it could be applied to gen-
erate candidate association rules in a more generalized
and ef?cient way.
• The database is time-related considering the real-time
2654978-1-4244-2959-2/09/$25.00 c© 2009 IEEE
factor. Thus, the same attribute has different meanings
at different time points.
• The process of searching the data for calculating the
con?dence, support and chi-squared value becomes two
dimensional search.
• We aims at extracting rules to predict the traf?c volume
of all the the sections on the road networks. So Extrac-
tion Mechanism at Stages(EMS) is applied, where all
the sections are considered as the consequent part step
by step.
• Better attributes are also accumulated gradually round
by round in the evolution process using Attribute Ac-
cumulation Algorithm(AAA).
• A simple classi?cation mechanism is combined with the
rule extraction system, thus the time related rules can
be used to predict the future traf?c volume on the traf?c
networks.
• Another feature of our method is that we can predict
not only the traf?c jam of a speci?c section on the road
networks, but also can predict the low, middle and high
traf?c volume of all of the sections on the road network,
which might be useful in future applications.
II. GENETIC NETWORK PROGRAMMING(GNP)
The basic idea of Genetic Network Programming(GNP)
is brie?y introduced in this section. GNP is an extension of
Genetic Algorithm(GA) [7], [8], which represents directed
graph structures as solutions [11], [12], [13]. GNP can
reuse nodes, thus has compact structures and implicit
memory function, which can deal with not only the current
information but also the past information implicitly. Also,
GNP can ?nd solutions of the problems without bloating
compared with Genetic Programming(GP) [9], [10], because
of the ?xed number of nodes in GNP.
The basic expression of GNP node is shown in Fig.1. This
describes the gene of node i, then the set of these genes
represents the genotype of GNP individuals. NTi describe
the node type, NTi = 0 means node i is the start node,
NTi = 1 represents node i is a judgment node and NTi
= 2 represents node i is a processing node. IDi is an
identi?cation number, for example, NTi = 1 and IDi = 1
means node i is J1(Judgment node with ID 1). Ci1, Ci2,...,
denote the nodes connected from node i. di and dij are the
delay times required to execute the processing of node i and
transition from node i to node Cij .
The basic structure of GNP is also shown in Fig.1. The
graph structure of GNP includes three kinds of nodes: start
node, judgment nodes and processing nodes. Judgment nodes
are the set of J1, J2,..., which work as if-then type logical
decision making functions. On the other hand, processing
nodes are the set of P1, P2,..., which work as a certain
kind of action/processsing function. The concrete roles of
these nodes are prede?ned and stored in the library. Once
GNP is started up, ?rstly the execution starts from the start
node; consequently, the next node to execute is determined
: Sta rt Node
: P rocessing Node
: Judgment Node
NTi IDi d i Ci1 d i1 Cij d ij......
n ode
gen e
con n ection
gen e
n ode i
0, 0 ,0 1,0Node 0:
1, 1, 0 2,0Node 1:
2, 2, 0 3,0 4,0Node 2:
2 ,3 ,0 4,0 1,0Node 3:
1 ,4 ,0 1,0Node 4:
Start:0
1
3
2
4
P 1
J2
J3
P 4
D irected G ra ph
Fig. 1. Basic structure of GNP
according to the connection and if-then judgment results of
the current node.
III. GENERALIZED TIME RELATED ASSOCIATION RULE
MINING USING GNP
A. Outline of the Proposed Method
The whole procedure of the proposed algorithm is like
Fig.2. The ?rst step is the time related class association rule
extraction step based on given class type and attribute set to
extract the rules about time related database. In rule extrac-
tion procedure, two kinds of iterations are included, i.e., the
outer iteration represents the class association rule mining,
which means to extract the class rules of all the consequent
attributes with Attribute Accumulation Algorithm, while the
inner iteration represents the basic procedure of the time
related data mining, which uses GNP individuals to generate
the candidate rules, then calculate the support, con?dence
and chi-squared values of the candidate rules based on the
time related databases.
Class type
Time Related
Class Association
Rule Extraction
Attribute set
Time related database
Classification Testing database
Prediction Result Actual Situation
Compare
Accuracy
Fig. 2. Basic steps of proposed algorithm
2009 IEEE Congress on Evolutionary Computation (CEC 2009) 2655
TABLE I
DATABASE BEFORE DISCRETIZATION
Time A1 A2
0001 8 3
0002 4 4
0003 8 1
0004 2 9
TABLE II
DATABASE AFTER DISCRETIZATION
Time A1 A2
Low Middle High Low Middle High
0001 0 0 1 1 0 0
0002 0 1 0 0 1 0
0003 0 0 1 1 0 0
0004 1 0 0 0 0 1
Middle threshold=4; High threshold=7;
The second step is classi?cation stage in which we use the
extracted rules to predict the future events using the degree
of matching between data and antecedent part of the rules in
each class, and the class with the highest degree of matching
will be selected. The selected class is the classi?cation
result. If the classi?cation result is the same with the actual
situation, then the prediction is correct, otherwise incorrect,
and we can obtain the accuracy of the prediction in this way.
B. Structure of Database
When processing the real-time information systems, the
databases are to be designed and developed to satisfy the
time related requirements. These kind of requirements allow
us to predict the occurrence of the critical events in the time
domain. Traf?c prediction is one of these problems. The
traf?c ?ow in each section of the road networks is changing
constantly as time goes on. In order to better predict the
traf?c ?ow of the road networks in the future, the database
should represent at what time the events in the road section
happened or how long the events lasted.
Here, the time unit represent the conceptional time unit,
i.e., it could be one second, one minute or the time for one
episode, therefore, the time unit could be ?exible enough
according to the concrete problem to solve.
According to the range of the continuous values of the
attributes, we divide the continuous values into three cat-
egories, i.e., Low, Middle and High. Supposing that the
Middle threshold is 4 and High threshold is 7, the attribute
A = 9 is ranked as A?High, i.e., (A?Low, A?Middle,
A?High)=(0, 0, 1) as shown in Table 2.
C. Generalized GNP Mining
The proposed generalized method extracts important time
related association rules using GNP supposing the connec-
tions of nodes are represented as association rules. The
generalized time-related association rule mining means that
there a good number of branches in the judgement nodes
in stead of simply “Yes-side” or “No-side” transition in
the previous method. The basic structure of the generalized
GNP network structure for class association rule mining
is shown in Fig.3. The jump mechanism is also used in
order to determine the antecedent part, but we don’t have
to decide the consequent part of candidates rules because
we are considering classi?cation problems. Therefore, we
are now focusing on extracting rules with ?xed consequent
corresponding to each class of the attributes. In order to
do that, all the items of the consequent part are placed
in Consequent Table(CT ) shown in Fig.3. This means that
GNP individuals are evolved to extract the class association
rules for each class of the attributes, i.e., for each traf?c
volume level of each section of the road networks, and this
procedure is repeated for all the consequent items. GNP
individual exclusively extracts the association rules about
one consequent item in CT , which is called the current
consequent item as shown in Fig.3. In addition, a suf?cient
?xed number(Nf ) of rules for each item in CT are obtained
in the proposed method.
From Fig.3, we can see that each judgement node of GNP
is in charge of examining the corresponding attribute, for
example A1, e.g., Low, Middle and High of attribute A1. If
A1 satis?es the ”“High” condition, then, moves to the High-
side of the transition, and “a, b and c” are counts of the moves
to the corresponding judgement result(High/Middle/Low) of
attribute A1. Although the transition of the nodes changes
according to the judgement result of High/Middle/Low, the
transition from the same judgement node shares the same
time delay as shown in Fig.3. The time delays are used for
the two dimensional search related to the time [1], which
will be explained later in more details.
The total number of moving to each branch from the pro-
cessing node at each judgment node is calculated for every
processing node, which is a starting point for calculating
association rules as described above. In Fig.4, N is the
total number of the search, and a, b and c are the numbers
of search moving to A1(Mid), A2(Low) and A3(Mid) at
each judgment node A1, A2 and A3. The measurements are
calculated by these numbers.
For example, as represented in Fig.4, if processing node
P1 jumps from A1 to A3, then the antecedent part of the
candidate rules becomes
“(A1(Mid)(t = 0) = 1) ? (A2(Low)(t = 2) = 1) ?
(A3(Mid)(t = 4) = 1)” and the current item in the Conse-
quent Table(CT ) is, for example, “(Ac(Mid)(t = 6) = 1)”
considering the time delay T = 2, which can also be evolved.
Then, we can also pick up the candidate rules like
“(A1(Mid)(t = 0) = 1) ? (Ac(Mid)(t = 2) = 1)”,
“(A1(Mid)(t = 0) = 1) ? (A2(Low)(t = 2) = 1) ?
(Ac(Mid)(t = 4) = 1)” and
“(A1(Mid)(t = 0) = 1) ? (A2(Low)(t = 2) = 1) ?
(A3(Mid)(t = 4) = 1) ? (Ac(Mid)(t = 6) = 1)”
in the same jumping operation, which we call Multi-Rules
Mechanism(MRM ). During one Jumping of the processing
node, several candidate rules will be generated and the times
of moving to the Low/Middle/High connection are counted.
This count provides the basic data for the evaluation of the
candidates rules. As a result, chi ? squared value can be
2656 2009 IEEE Congress on Evolutionary Computation (CEC 2009)
calculated considering both the antecedent and consequent
part of the candidate rules. We can repeat this like a chain
operation in each generation by jumping the processing
nodes in the class association rule mining with time series
using GNP. Now, we de?ne the important association rules
as the ones which satisfy the minimum chi-squared, support
and con?dence value, i.e., ?2min, supmin and confmin,
respectively.
In this de?nition, if the rule “X ? Y ” is important, then,
X ? ¬Y,¬X ? Y,¬X ? ¬Y, Y ? X,Y ? ¬X,¬Y ?
X and ¬Y ? ¬X” are also important rules. The extracted
important association rules are stored in a pool all together
through generations in order to ?nd new important rules.
A2,Mid
: H igh connection :Midd le connection
: Jumping
T: Time Dela y
: P rosessing Node : Judgmen t Node : moved position
: Low connection
Consequen t
Ta b le
A1,Low
A1,Mid
A1,High
A2,Low
A2,High
...
...
AN,High
Cur r en t
Consequent
N
P 1
N
J umping
A1 A2
A3
a
b
c
d
T= 0
T= u
T= v
P 1
T= 0
A6A5
A4
T= u
T= u
e
f
T= v
T= v
j
k
l
Fig. 3. Basic structure of class association rule mining using GNP
Time
Unit
A1 A2 A3 Ac
Low Middlle High Low Middle High Low Middle High Low Middle High
0000 0 1 0 0 0 1 1 0 0 0 1 0
0001 0 1 0 1 0 0 0 1 0 1 0 0
0002 0 0 1 1 0 0 1 0 0 0 1 0
0003 0 1 0 0 0 1 0 1 0 1 0 0
0004 1 0 0 1 0 0 0 1 0 0 0 1
0005 0 1 0 1 0 0 1 0 0 0 1 0
0006 0 1 0 0 1 0 0 1 0 0 1 0
0007 0 0 1 0 0 1 1 0 0 1 0 0
0008 0 0 1 0 0 1 1 0 0 1 0 0
0009 0 0 1 0 0 1 1 0 0 1 0 0
0010 0 1 0 0 0 1 0 1 0 1 0 0
N
P 1
T= 0
P 1J umping : Low
: Middle
: H igh
c
A1
Cur r en t Consequen t:
Ac, MiddleA2
a b
T= 2 T= 2 T= 2
A3
Fig. 4. Two dimensional searching method
D. Extraction Mechanism at Stages(EMS) and Attribute Ac-
cumulation Mechanism(AAM)
We use Extraction Mechanism at Stages(EMS) here be-
cause our method basically aims at extracting rules of all
of the attributes in the database, i.e., all classes of all the
sections on the road networks. Unlike other conventional
methods, one of the unique points of our methods is to get
class association rules for all of the attributes. Thus, we need
to get enough number(Nf ) of class association rules for each
class of all attributes in order to acquire the high accuracy
of the classi?cation.
If the number of the extracted rules reach a certain ?xed
number Nf for the current class of the consequent attribute,
then the stage for the current class of the consequent attribute
ends and another stage for the next item in the CT will begin,
likewise.
The number of the rules Nf for each class of the at-
tributes should be suf?ciently large enough. But, it might
be possible that there do not exist enough number of rules
for some classes of the attributes when using the current
importance levels, especially in some rare cases when the
instances do not occur frequently enough for the extraction
of class association rules. Thus, in this paper, we introduce
the self-adaptive criteria for the importance levels and they
are adjusted gradually depending on the number of new
class association rules extracted in recent generations. If the
number of new rules generated in recent generations equal
to 0, which means no more important rules can be found for
the current item in Consequent Table(CT ), the criteria for the
importance levels are changed until a certain ?xed number
Nf of rules are obtained using the following equations.
?2min ? ?2min × s1, (1)
supmin ? supmin × s2, (2)
confmin ? confmin × s3, (3)
where, s1, s2 and s3 in [0, 1], represent the step size
decrease for the minimum chi-squared, support and con?-
dence value, respectively. ?2min, supmin and confmin are
initialized for every item of the Consequent Table(CT ).
Attribute Accumulation Mechanism(AAM )[14] is also
combined with Extraction Mechanism at Stages(EMS) to
accumulate better attributes round by round in our algorithm,
thus we can ?nd better and ?tter attributes in GNP in an
exploitative way.
The proposed GNP-based mining method for extract-
ing class association rules for each item in Consequent
Table(CT ) is shown in Fig.5, where GNP based data mining
consists of a sequence of generations.
E. Structure of Rules
Let Ai(?)(t = p) be an attribute in a database at time p and
its value is 1 or 0. Ai(?) represents Ai(Low) /Ai(Middle)
/Ai(High). The general association rule mining with time
series extracts the following association rules:
(Aj(?)(t = p) = 1) ? · · · ? (Ak(?)(t = q) = 1) ?
(Am(?)(t = r) = 1) ? · · · ? (An(?)(t = s) = 1)
Here, p ? q ? r ? s, and the ?rst t always equals 0 and
2009 IEEE Congress on Evolutionary Computation (CEC 2009) 2657
Tota l number of
Con sequen t Attr ibu tes
Consequent
Table
1 A1(Low)
2 A1(Mid)
3 A1(High)
... ...
... ....
M-2 AN(Low)
M-1 AN(Mid)
M AN(High)
S tage 2 :
S tage M :
G et Attr ib ute SetS tart
Data M in ing Ru le pool for
Consequen t 1
Exist Nf
ru les?
S tage 1 :
E nd Next Consequent Y
N
Decr ese Cr iter ia
M : N : Total number of Section
Attributes
N= M/3
Total Rule Pool
Rules are stored consequent item by
consequent item
Fig. 5. Procedure for extracting class association rules
other time points are the relative time shifts from the ?rst
attribute. In the case of class association rules mining, the
structure of rules becomes the following simpli?ed form:
(Aj(?)(t = p) = 1) ? · · · ? (Ak(?)(t = q) = 1) ?
(Ac(?)(t = r) = 1), where Ac(?) indicates the class of the
attributes.
F. Fitness Function and Genetic Operators
We regard the rules containing many different attributes
as important ones in addition to the conventional interest.
Therefore, the ?tness function of the GNP individual is
de?ned as:
F =
?
r?R
{?2(r) + 10(nante(r)? 1) + ?new(r) + ?mult(r)}.
The symbols are as follows:
R : set of suf?xes of important association rules which
satisfy the importance requirements of support,
con?dence and chi-squared value.
?2(r) : chi-squared value of rule r.
nante(r) : the number of attributes in the antecedent of rule
r.
?new(r) : constant de?ned by
?new(r) =
{
?new, if rule r is new
0, otherwise
?mult(r): constant de?ned by
?mult(r) =
?
?
?
?mult, if rule r has many
different attributes
0, otherwise
?2(r), nante(r), ?new(r) and ?mult(r) are concerned
with the importance, complexity, novelty and diversity of
rule r, respectively. In each generation, GNP individuals
are replaced with the new ones by the selection policy and
other genetic operations. We used four kinds of genetic
operators, i.e., uniform crossover, mutation for functions,
mutation for connections and time delays of judgement
nodes, respectively.
G. Classi?cation
Firstly, classify the extracted association rules in the pool
into consequent attribute classes. Every attribute has three
consequent attribute classes, i.e., attribute Ai is classi?ed
into the following consequent attributes, Ai(Low), Ai(Mid),
Ai(High).
Then, the association rules in each class are used to study
whether the testing data satis?es the antecedent items. The
testing data are called satis?ed if they satisfy the antecedent
items of the rules.
The ratio of the number of satis?ed rules to the total
number of rules for every class is calculated considering
con?dence, and the testing data is classi?ed into the class
whose ratio is the highest. The concrete process is like the
following:
(1) Calculate Ck: Calculate the set Ck of the suf?xes of
the rules in class k, whose antecedent items satisfy the
testing data.
(2) Calculate Creditk for every class:
Creditk =
?
j?Ck
confidencej , (4)
(3) Calculate Scorek for every class:
Scorek =
Creditk
Totalk
, (5)
where, Totalk is the total number of rules in class k,
that is, the ?xed number of Nf in this paper.
(4) Compare the Scorek and the class with the highest
value becomes the winner for the corresponding at-
tribute, e.g., if Ai(Low) has the highest score, then Ai
is classi?ed into Low.
IV. SIMULATION
In this section, the effectiveness and ef?ciency of the
proposed method are studied by a simple traf?c simulation.
Unlike other methods in the traf?c prediction of recent years,
we not only aim at predicting the traf?c jam on a speci?c
section of the road networks, but also, we are interested in
providing the whole traf?c prediction for all of the sections
on the road networks so that the navigation system can refer
to this kind of information for the calculation of the Optimal
Route.
For example, we can extract the time related association
rules for classi?cation using a large traf?c database, which
can provide a stable estimation of the traf?c volume. And not
only the traf?c congestion/jam can be predicted, but also the
sections with low traf?c volume can also be predicted, which
could be also interesting since drivers might want to take a
path with few cars. So, the uniqueness of our method is that
2658 2009 IEEE Congress on Evolutionary Computation (CEC 2009)
all of the traf?c volume(High/Middle/Low) are predicted for
all of the sections on road networks.
A. Traf?c Simulator
Each section between two intersections in the road net-
works has two directions, and we assume each direction
of the section represents different literals, i.e., items or
attributes. The traf?c simulator used in our simulations
consists of the road model with 7× 7 roads like Fig.6, i.e.,
each section has the same length, all cars have the same
speed for simplicity, and the shape of the total road is like a
grid network. Time shift in road setting in Fig.6 represents
the time delay of the traf?c lights between neighboring
intersections.
Actually the cars on the road networks do not have the
same speed. Every time unit, all the cars can move forward
by length 1 if and only if there exist spaces before them, thus
the actual speed of all cars are in?uenced by the traf?c lights
or traf?c jams. For example, if a car encounters the red light
or traf?c jam, it has to wait until the red light period passes
or all the hindrances before it are removed. Therefore, the
cars have different speeds depending on the concrete traf?c
situations.
#N1 #N2 #N3 #N4 #N5 #N6 #N7
#S1 #S2 #S3 #S4 #S5 #S6 #S7
#W2
#W1
#W3
#W4
#W5
#W6
#W7
#E2
#E1
#E3
#E4
#E5
#E6
#E7
:r epr esent ca r #** : r ep r esen t O /D name
: r epr esent section fr om inter section W2N4 to W2N5
: r epr esent section fr om inter section W2N5 to W2N4
: r epr esent inter section W3N3
Road Setting
Maximum
number of
cars
10 cars per
section
Car arrival
distribution
exponential
distribution
Red
traffic light
10 time
units
Green
traffic light
7 time units
Yellow
traffic light
3 time units
Time shift
10 time
units
Fig. 6. Road model used in simulations
TABLE III
PARAMETER SETTING FOR EVOLUTION
Items Values
Number of judgment nodes 100
Number of processing nodes 10
Number of attributes 224
Number of attributes including classes 672
Number of time units 800
Number of generations per round 100
Minimum support value 0.1
Minimum con?dence value 0.8
Minimum chi-squared value 6.63
The parameter setting of the proposed data mining is
presented in Table 3. The attributes correspond to the judg-
ment node functions, for example, the class of the attribute
”“W4N6,W4N7(Low)” can be interpreted in such a way
that the section named”W4N6,W4N7” has low traf?c vol-
ume. We have 7 × 8 × 2=112 sections in our simulator
and each section has two directions, so, there exist 112× 2
= 224 sections in total. What’s more, each section has 3
categories (High/Mid/Low), thus we have 224 × 3 = 672
attributes including classes. Time units in Table 3 represents
the number of total time units in our database.
B. Simulation 1
In simulation 1, the number of rules stored in the rule pool
is compared between the proposed method with Generalized
GNP and conventional method with Normal GNP. Each
round has the same number of generations of 50 and the
chosen set size for AAM is 100[14].
0
20000
40000
60000
80000
100000
120000
140000
160000
0 1000 2000 3000 4000
Rounds
T
o
ta
l N
u
m
b
e
r 
o
f 
R
u
le
s
E
x
tr
a
c
te
d
Generalized GNP Conventional GNP
Fig. 7. Total number of rules extracted.
0
100
200
300
400
500
600
0 500 1000 1500 2000 2500 3000 3500
Round
N
u
m
b
e
r 
o
f 
R
u
le
s 
E
xt
ra
ct
e
d
Generalized GNP Conventional GNP
Fig. 8. The number of rules extracted per each round
Fig.7 shows the number of rules obtained in the rule
pool versus round number. In the conventional method
GNP individuals have only the Yes-side connection, while
Generalized GNP individuals have multi-branches like Fig.3
in the proposed method. We can see from Fig.7 that the
proposed method can extract important class association rules
ef?ciently, when compared with the conventional one.
Fig.8 shows the number of rules extracted per each round.
Although in some rounds we can obtain more than 500
rules, the average number of rules extracted per round is
not high. We can see that there exist some rare cases where
2009 IEEE Congress on Evolutionary Computation (CEC 2009) 2659
010
20
30
40
50
60
A
ve
ra
g
e
 n
u
m
b
e
r 
o
f 
ru
le
s 
e
xt
ra
ct
e
d
Generalized GNP Conventional GNP
Fig. 9. Average number of rules extracted per round
the consequent class does not occur so often in the entire
database. In these cases, we can not obtain any association
rules that satisfy the required criteria, so we can gradually
decrease the criteria of interesting rules by the proposed
method. As a result, it is found that in the proposed method
a good number of the rules are obtained per each round.
Fig.9 shows the average number of rules extracted per
round. The reason for Generalized GNP can get larger
number of rules than Normal GNP is that Generalized
GNP provided more exploration ability than Normal GNP,
that is, even when the processing node jumps in the same
way, Generalized GNP can generate different candidate rules
based on its High/Middle/Low transitions, while Normal
GNP has only one-way Yes-side transitions. As a result,
Generalized GNP shows better ef?ciency than Normal GNP.
And also we can see that there are a number of rounds
where no rules are extracted, and in such cases the self-
adaptive mechanism adjusts the criteria of ?2min, supmin and
confmin gradually round by round. As a result, although we
can extract more than 500 rules in some rounds, the average
number of rules extracted per round is not very high, which
is caused by the rare cases we discussed in Section III.D.
C. Simulation 2
In simulation 2, the number of rules stored in the
pool is compared between the method with Multi-Rules
Mechanism(MRM ) and without MRM . Each round has the
same number of generations of 50 and the chosen set size is
100.
Fig.10 shows the number of rules obtained in the rule
pool versus round number. In the conventional method, we
examined the number of candidate rules just using two
dimensional search without MRM . We can see from Fig.10
that the proposed method with MRM can extract important
association rules more ef?ciently, when compared with the
conventional one.
D. Simulation of Prediction
In order to check the effectiveness of the extracted rules,
we tested the accuracy of the classi?cation using the classi?er
described in section III.
0
10000
20000
30000
40000
50000
60000
70000
80000
0 500 1000 1500 2000 2500 3000
Rounds
A
ve
ra
g
e
 N
u
m
b
e
r 
o
f 
 E
xt
ra
ct
e
d
R
u
le
s
case with MRM case without MRM
Fig. 10. Comparison between the method with or without MRM .
A 5-fold cross validation was carried out for 5 different
databases, and we obtained the average accuracy shown in
Table IV, where D represents database. The accuracy is
de?ned in the following: if the traf?c prediction result of the
section at time t is “Low” and the real traf?c of this section
at time t is exactly “Low”, then, the accuracy is 100%. The
low/middle/high accuracy means the accuracy when the real
traf?c is low/middle/high, respectively.
TABLE IV
RESULT OF CROSS VALIDATION
D Overall Low Middle High
1 85.11 72.38 88.17 83.01
2 85.12 72.63 88.48 82.79
3 86.09 74.03 88.25 84.22
4 85.82 73.44 88.80 83.67
5 86.03 74.41 89.14 83.41
V. CONCLUSION
In this paper, a generalized sequential association rule min-
ing has been proposed using Genetic Network Programming
with time series processing mechanism. It is clari?ed from
simulations that the proposed method can extract important
time-related association rules for each class of the consequent
attributes ef?ciently. These rules are used to decide to which
class the time-related data belong. From simulations, we have
also found the proposed method can be used in traf?c predic-
tion problems. We are now studying further improvements
of our method in terms of more ef?cient association rules
mining and classi?cation to deal with rare cases and also
have a plan to apply our method to more realistic and large
databases using real time traf?c datasets.
REFERENCES
[1] H. Zhou, W. Wei, K. Shimada, S. Mabu and K. Hirasawa, “Time Related
Association Rules Mining with Attributes Accumulation Mechanism
and its Application to Traf?c Prediction”, Journal of Advanced Com-
putational Intelligence and Intelligent Informatics, Vol. 12, No. 5, pp.
467-478, 2008/7.
[2] R. Agrawal and R. Srikant, “Fast Algorithms for Mining Association
Rules”, In Proc. of the 20th VLDB Conf., pp.487-499, 1994.
2660 2009 IEEE Congress on Evolutionary Computation (CEC 2009)
[3] M. Klemettinen, H. Mannila, P. Ronkainen, H. Toivonen and A.I.
Verkamo, “Finding Interesting Rules from Large Sets of Discovered
Association Rules”, In Proc. of the Third Int’l Conf. on Information
and Knowledge Management, pp.401-408, Nov.1994.
[4] A. Savasere, E. Omiecinski and S. Navathe, “An Ef?cient Algorithm
for Mining Association Rules in Large Databases”, In Proc. of the 1995
Int’l Conf. on Very Large Data Bases, pp. 432-443, Sept.1995.
[5] J. S. Park, M. S. Chen and P. S. Yu, “An Effective Hash-Based
Algorithm for Mining Association Rules”, In Proc. of the 1995 ACM
SIGMOD Conf., pp.175-186, 1995.
[6] X. Wu, C. Zhang and S. Zhang, “Ef?cient Mining of Both Positive
and Negative Association Rule”, ACM Transactions on Information
Systems, Vol.22, No.3, pp.381-405, 2004.
[7] J. H. Holland, “Adaptation in Natural and Arti?cial Systems. Ann
Arbor: University of Michigan Press”, 1975.
[8] D. E. Goldberg, “Genetic Algorithm in search, optimization and ma-
chine learning”, Addison-Wesley, 1989.
[9] J. R. Koza, “Genetic Programming, on the programming of computers
by means of natural selection”, Cambridge, Mass., MIT Press, 1992.
[10] J. R. Koza, Genetic Programming II, Automatic Discovery of Reusable
Programs, Cambridge, Mass.: MIT Press, 1994.
[11] S. Mabu, K. Hirasawa and J. Hu, “A Graph-Based Evolutionary
Algorithm: Genetic Network Programming(GNP) and Its Extension
Using Reinforcement Learning”, Evolutionary Computation, MIT press,
Vol. 15, No.3, pp.369-398, 2007.
[12] T. Eguchi, K. Hirasawa, J. Hu and N. Ota, “A study of Evolutionary
Multiagent Models Based on Symbiosis”, IEEE Trans. on Syst., Man
and Cybernetics - Part B -, Vol.36, No.1, pp.179-193, 2006.
[13] K. Hirasawa, T. Eguchi, J. Zhou, L. Yu and S. Markon, “A Double-
Deck Elevator Group Supervisory Control System Using Genetic Net-
work Programming”, IEEE Trans. on Systems, Man and Cybernetics,
Part C, Vol. 38, No. 4, pp. 535-550, 2008/7.
[14] H. Zhou, W. Wei, K. Shimada, S. Mabu and K. Hirasawa, “Time
Related Association Rules Mining with Attributes Accumulation Mech-
anism and its Application to Traf?c Prediction”, In Proc. of the IEEE
Congress on Evolutionary Computation, pp. 305-311, 2008/6.
2009 IEEE Congress on Evolutionary Computation (CEC 2009) 2661
