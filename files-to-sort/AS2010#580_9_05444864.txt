MelT 2010
Extracting Membership Functions by ACS Algorithm without Specifying
Actual Minimum Support
E. Vejdani F. Saadatmand M. Niazi
Young Researchers Department of Department of
Club, Islamic Azad computer Engineering, computer Engineering,
University, Mashhad Islamic Azad UniversityIslamic Azad University
Branch, Mashhad, Iran - Mashhad Branch, - Mashhad Branch,
e.vejdani@mshdiau.ac.ir Mashhad, Iran Mashhad, Iran
fsaadatmand@gmail.com niazi@ mshdiau.ac.ir
M.H. Yaghmaee
Department of
computer Engineering,
Ferdowsi University of
Mashhad, Mashhad,
Iran
yaghmaee@ieee.org
Abstract
Ant Colony Systems (ACS) have been successfully
utilized to optimization problems in recent years.
However, few works have been done on applying ACS
to data mining. This paper proposes an ACS-based
algorithm to extract membership functions in fuzzy
data mining. The membership functions are first
encoded into binary bits and then given to the ACS to
search for the optimal set of membership functions.
With the proposed algorithm, a global search can be
performed and system automation is implemented,
because our model does not require the user-specified
threshold of minimum support. We experimentally
evaluate our approach and reveal that our algorithm
significantly improve membership functions and
reduce the computation costs.
Keywords:
Ant colony system, Data mining, Fuzzy set, Membership
function, Association rule, Threshold setting.
I.Introduction
Recently, the fuzzy set theory has been used more
and more frequently in intelligent systems because of
its simplicity and similarity to human reasoning [1]. As
to fuzzy data mining, Hong and Kuo proposed a
mining approach that integrated fuzzy-set concepts
with the Apriori mining algorithm [2].
Currently, Ant Colony Systems (ACS) has been
successfully applied to several difficult NP-hard
problems, such as Traveling Salesman Problem (TSP),
978-1-4244-7003-7/10/$26.00 ©201 0 IEEE 13
Job Schedule Problem (JSP), Vehicle Routing
Problems (VRP), etc. [3, 4, 5]. They are a heuristic
approach inspired from the behavior of social insects.
Ants deposit their chemical trails called "pheromone"
on the ground for communicating with others.
According to the pheromone, ants can find the shortest
path between the source and the destination.
Han, Wang, Lu, and Tzvetkov [6] have pointed out
that setting the minimum support is quite subtle, which
can hinder the widespread applications of these
algorithms. Our own experiences of mining transaction
databases also tell us that the setting is by no means an
easy task.
In particular, our approach does not require users to
specify the minimum-support threshold. This approach
leads to (1) effectiveness and efficiency for global
search; and (2) system automation, because our model
does not require the user-specified threshold of
minimum support.
Numerical experiments on the proposed algorithm
are also performed to show its effectiveness.
The remaining parts of the paper are organized as
follows. Section 2 presents An ACS-based mining
framework. The proposed algorithm based on the
above framework is described in Section 3. Numerical
simulations are shown in Section 4. Conclusion and
future work are given in Section 5.
2.The ACS-based fuzzy mining framework
The proposed framework modified the ACS-based
Framework for Fuzzy Data Mining in [7]. The
framework is divided into two phases. The first phase
searches for an appropriate set of membership
functions for the items by the ACS mining algorithm.
Having searched for the solutions in the first phase, we
use the best membership functions for fuzzy data
mining in the second phase.
The ACS algorithm plays an important role in
extracting the membership functions. In the past,
Parpinelli et al. proposed the AntMiner to discover
association rules [8]. They worked on categorical
attributes and discrete values. They proved that the
ACS algorithm performed well on handling discrete
values in a solution space. In this work, we assume the
parameters of membership functions as discrete values
and thus try to use the ACS algorithm to find them. We
transform the extraction of membership functions into
a route-search problem. A route then represents a
possible set of membership functions. The artificial
ants, which refer to virtual ants that are used to solve
this problem, can then be used to find a nearly optimal
solution.
3.The ACS_based fuzzy data mining
algorithm
3.1. Initializations
As revealing membership functions of all items
result in a long code, we will encode the membership
function of each item into a binary code. We use the
coding algorithm which was represented in [7].
Furthermore, we utilize some rules called State
transition rule, Pheromone updating rule, Local
updating rule, Global updating rule which were defined
in [9].
In this work, each item will have a set of isosceles-
triangular membership functions. The membership
function stands for the linguistic terms such as low,
middle, high. Transforming these quantitative values
into linguistic terms requires a feasible population of
database. Therefore, we need to initialize and update a
population during the evolution process. In this work,
we use the fitness function proposed by Hong et al.
[10] to obtain a good set of membership functions.
3.2. ACS-based fuzzy data mining algorithm
In spite of proposed algorithm in [9, 10] which
considered one constant minimum support for all
items, we use specified minimum support for each
item; because, in real world applications, like
applications which work on transactional data of chain
stores, items have different quantities. Hence, using
different minimum supports for each item in order to
extracting membership functions is an efficient idea. In
this work, despite the previous ones that user specified
14
minimum supports; minimum supports are achieved by
a preprocessing on all items. Finally, minimum support
for each item is automatically set as a value correspond
with the quantity of the item.
In addition to the parameters defined in the
previous sections, the following parameters will be
used: the number of artificial ants, the minimum
pheromone ratio of an ant, the evaporation ratio of
pheromone, the local updating ratio, and the global
updating ratio. The proposed ACS-based algorithm for
mining membership functions and fuzzy association
rules are given as follow.
INPUT:
(1 ) n quantitative transaction data,
(2 ) a set of m items, which is with I predefined
linguistic terms,
(3 ) a maximum number of iterations G.
OUTPUT :An appropriate set of membership functions
for all items in fuzzy data mining.
Step 1: Let p = 1, where p is used to keep the
identity number of the items to be processed.
Step 2: Let the multi-stage graph for the fuzzy mining
problem be (N} E), where N is the set of nodes
and E is the set of edges. Also denote the j-node
in the i-th stage asNij' and the edge from Nij to
N(i+l)k as N ij k. Initially set the pheromone on
every edge N ij k as 0.5.
Step 3: Let the initial generation 9 = 1.
Step 4: Sets up the complete route for each artificial
ant Antq by the following sub steps.
Step 4.1: Selects the edges from start to end according
to the state transaction rule.
Step 4.2: Update the pheromone of the edges passed
through by Antq according to the local updating
rule.
Step 5: Evaluate the fitness value of the solution
(membership functions) obtained by each artificial
ant according to the following sub steps.
Step 5.1: For each transaction datum Di , i = 1 to n,
transfer its quantitative value vp for item Ip into a
fuzzy set fp according to the membership
functions obtained from the ant. That is, fp is
represented as :
{pi + {P2 + ...+ {pi + ...+ {pl
Regionpi Regionp2 Regionpk Regionpl
Where Regionpk is the k-th fuzzy term of iteml.;
fpk is vp's fuzzy membership value in the region,
and 1 is the number of fuzzy membership
functions.
Step 5.2: The scalar cardinality of each region in the
transactions is calculated as follows:
n
'\' (i)
countpk = L fpk
i=l
Where f~~ is the fuzzy membership value of
region Rpkfrom the i-th datum.
Step 5.3:Check for each R pk whether its countpk In
is larger than or equal to the minimum support
threshold a. If Rpk satisfies the above condition,
put it in the set oflarge I-itemsets (L l ) .
Step 5.4:Calculate the fitness value of the solution
from the ant by dividing the number of large
itemsets in L1 over the suitability. That is,
. ILll[itness = . bilisuita L icy
Step 6: Once all the artificial ants find their entire
routes, the one holding the highest fitness
value will be used to update the pheromone
according to the global updating rule.
Step 7: If the generation g is equal to G, output the
current best set of membership functions of
item I for fuzzy data mining; otherwise, g =g
p
+ I and go to s 4.
Step 8: If p f=- m, set p =p +1 and go to Step 2 for
another item; otherwise, stop the algorithm.
number of generations. In addition, we used smaller
numbers for generation with the aim of illustrating the
difference between our model and the existing one that
has static constant minimum support in Figure 2. It is
obviously represented that our model reached the best
fitness in 100 number of generations, whereas the
existing one reached its best fitness in 400 number of
generations.
.....ACS with dynamic minimum support
.....ACS with constant minimum support
3.5 -r-------------
~ 3 la'
~ 2.5 +---------------
~ 2 +-- - - - - - - - - - - - - -OJ
s
<;::
o +--.---.---.---.---,---,-
o 1000 2000 3000 4000 5000 6000
Generations
Figure 1. The average fitness values along
with different numbers of generations
.....ACS with dynamic minimum support
.....ACS with constant minimum support
Figure 2. The average fitness values along
with different numbers of generations (in
smaller scale)
The numbers of large l-itemsets along with
different generations are shown in Figure 3. The curve
of the existing method stabili zes after about three
thousand generations while the curve of our approach
remained constant after one thousand generations.
Besides, as our model uses dynamic minimum support
»: .....

.,
500200 300 400
Generations
100o
~ 3
:::J
~ 2.5
~ 2
OJ
c
t;:: 1.5
OJ
OJ
~
>
« 0.5
o
3.5
We experimentally evaluate our approach to show
the performance of the proposed algorithm. The
experiments were implemented in C/C++ on a
computer with AMD Athlon(tm) 64 Processor 1900
and 2 GB RAM. There were a total of 64 items and
10,000 transactions used in the experiments. The initial
size of ants was set at 10. The parameters in the ACS
algorithm were set as follows: the initial ratio of
pheromone was 0.05, the minimum pheromone of ants
was 0.2, the evaporation ratio was 0.9, the local
updating ratio was 0.1 and the global updating ratio
was 0.9. The average fitness values of the artificial ants
along with different numbers of generations are shown
in Figure 1.
It can be vividly seen from Figure I that in our
approach, because of using specified minimum
supports, average fitness values increased sharper than
the previous one, thus became stable within less
4. Numerical Experiments
The final set of membership functions output in
step 7 and the 1-itemsets obtained are then used to
mine fuzzy association rules from the given database.
15
O +-- .-- -.-- ---r- --,- - ..--- ....
References
[1] Kandel , "F uzzy expert system s", CRC Press, Boca
Raton, pp 8-19, 1992.
[2] T. P. Hong, C. S. Kuo, S. C. Chi, "Trade-off between
time complexity and number of rules for fuzzy mining
from quantitative data", International Journal of
Uncertainty, Fuzziness, and Knowledge-Based
Systems, Vol. 9, No. 5, pp 587-604, 2001.
[3] Colorni, M. Dor igo, V. Man iezzo and M. Trubian, "Ant
system for job-shop scheduling", Belgian Journal of
Operations Research, Statistics and Computer Science,
Vol. 34, pp. 39-53,1994.
[4] M. Dorigo, L. M. Gambardella, "Ant colony system :a
cooperative learning approach to the traveling salesman
problem", IEEE Transactions on Evolutionary
Computation, Vol. I, No. I , pp. 53-66,1997.
[5] A. Wade and S. Shalhi, "An ant system algorithm for
the mixed vehicle routing problem with backhauls", in
Metaheuristics :Computer Decision-Making, Norwell,
MA :Kluwer, pp 699-719, 2004.
[6] \-Ian, 1., Wang , 1., Lu, Y., & Tz vetkov, "Mining top-k
frequent closed patterns without minimum support". In
Proceedings of the 2002 IEEE international conference
on data mining, pp 211-218, ICDM 2002 .
[7] T. P. Hong, Y.F . Tung, S.L. Wang, M.T. Wu, Y.L. Wu,
"An ACS-based Framework for Fuzzy Data Mining" ,
Expert Systems with Applications vo1.36, Issue 9, pp
11844-11852, Nov. 2009 .
[8] R. S. Parpinelli , H. S. Lopes, A. A. Freitas, "An Ant
Colony Based System for Data Mining: Appli cation to
Medical Data", The Genetic and Evolutionary
Computation Conference, pp.791-798, 2001.
[9] T. P. Hong, Y.F . Tung, S.L. Wang, M.T. Wu, Y.L. Wu,
"Extracting membership functions in fuzzy data min ing
by Ant Colony Systems", Proceedings of the Seventh
International Conference on Machine Learning and
Cybernetics, Kunming, pp 12-15, Jul. 2008.
[10] T. P. I-long, C. H. Chen, and V. S.Tseng, "Cluster-
Based Evaluation in Fuzzy-Genetic DataMining" IEEE
Trans. Fuzzy Syst., vol. 16,no. I , pp . 249-262, 2008.
computation time. However, more work needs to be
done in the future. For example, using parallel methods
in order to increase performance and decrease
execution time, applying Fuzzy Rules for computing
coverage and overlap factors which result in more real
fitness values.
The most important difference between our
algorithm and existing ACS algorithms to extract
membership functions is that our model does not
require the minimum-support threshold. The experi-
mental results of our approach encourage us to
improve and apply this strategy in real-world
applications.
1000 2000 3000 4000 5000 6000
Generations
o
'0 50 -1-- - - - - - - - - - - - - - -Qi
.0
E
::::l
Z
o 1000 2000 3000 4000 5000 6000
Generatoins
.....ACS with dynamic minimum support
_ ACS with constant minimum support
~ 200 t"'~.~;;;;;;;;~;;;;;;;;;;;;;;;jjp;;;;;;;;;;;;;~;;;;;;;;.(/) 1M""E
'* 150 +---------------
..--
14000 -r-------------
12000 +----------~y:=-
~ 10000 +--------~~
"0
§ 8000 +----------::~----­
o
! 6000 +-------::01~"------­
OJ
E 4000 +---_ IiIF---------
f=
2000 +---".-----------
0 ....--..-----,-----,--.,..-----.-----.-
Figure 3. The numbers of large 1-itemsets
along with different numbers of generations
Figure 4. The execution time of the ACS
mining algorithm
.....ACS with dynamic minimum support
.....ACS with constant minimum support
the number of large I-itemsets of our approach is
markedly higher.
Figure 4 then reveals the execution time of the ACS
mining algorithm for different numbers of generations.
Although, the average execution time increased along
with generations within both line graphs .our approach
represent ed the same execution time for smaller
number of generation but decreased a little for large
numbers.
5.Conclusion and future work
In this paper, we have looked into the issues of
applying the ACS algorithm to extract membership
functions for fuzzy data mining and have proposed an
algorithm to achieve the purpose. Our approach has
delivered two benefits: (1) using dynamic minimum
supports; (2) system automation. Computation results
show that our work can be taken as an alternative for
effective association rule mining. It also requires less
16
