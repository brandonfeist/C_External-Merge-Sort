20IO 3rd International Conference on Advanced Computer Theory and Engineering (ICACTE) 
An Multi-process Association Rules Mining Algorithm Based on Message Queue 
Xu Ruzhi 
Department of Computer& Information Engineering 
Shandong University of Finance 
linan, Shandong Province, 250014, China 
xrz@sdfi.edu.cn 
Yang Sai 
Department of Computer 
Nanjing University of Science& Technology 
Nanjing, liangsu Province 2100941 
yangsaiI66@126.com 
Yang Chao, Jiang Junwei, Liu Cheng 
Department of Computer& Information Engineering 
Shandong University of Finance 
linan, Shandong Province, 250014, China 
yangcha0890@163.com 
Abstract-The issue of association rules mining is deeply 
discussed in this paper. An association rules mining algorithm 
based on message queue is presented after summarizing the 
advantages and disadvantages of current mining algorithms. 
This method firstly uses process management corn ponent to 
create the processes of mining association rules and then uses 
the message queue to communicate the frequent itemsets of 
every process to im prove the parallel processing capability. 
The principle and steps of this method are given, the 
experimental results show that the algorithm is efficient and 
effective. 
Keywords- Message Queue; Data Mining; Association Rules; 
Process Management 
I. INTRODUCTION 
In recent years, the data mining technology has caused 
great interest in academia and information industry, the main 
reason is that mass data is widely available, and we 
have the urgent need to convert data into useful information 
and knowledge. Among them, association rules mining is an 
important data mining issues, and has been widely concerned. 
It is mainly used for discovering the interesting association 
or correlation of items in large data set. Currently, with the 
expansion of the data scale, although the traditional serial 
algorithm has been made many improvements, it still can't 
change the times of database scanning, as well as the 
workload and the computing time of single-processor, which 
can't meet the performance requirements of the large data set. 
In this case, the parallel association rules mining technology 
emerged. 
Parallel algorithm is a set of various processes that 
execute simultaneously, these processes interact and 
collaborate to solve the given problem. At present, compared 
with the Serial processing model, the parallel association 
rules mining has considerable advantages, Literature[2] first 
proposed a method of parallel association rules mining, 
which put the sequential mining problems of association 
rules into parallel mining problems under the condition of 
multi-CPU sharing memory and external memory. 
Subsequently, Agrawal et.proposed three parallel association 
rules mining algorithm[3], these algorithms adopt a different 
strategy to calculate the frequency of the candidate set, the 
first is counting distribution (CD) algorithm, the second is 
data distribution (DD) algorithm, and the third is candidates 
set distribution (CaD) algorithm. These parallel processing 
algorithms have advantages and disadvantages, the amount 
of data exchanged by CD algorithm is less, and the memory 
is not utilized; the utilization rate of DD algorithm is higher, 
but there are a great deal of communication among the 
processors; the CaD algorithm realizes asynchronous 
computation, but needs to redistribute database. In order to 
reduce traffic between the various regional problems, 
D.W.Cheung proposed Fast Distributed association rules 
Mining(FDM) algorithm in 1996, which improved the CD 
algorithm, but the complexity of traffic in each scan is O(n). 
Partition algorithm[l] is a highly parallel algorithm, which 
can allocate each block to the same processor to generate 
frequency. However, the candidate itemsets generated in the 
second phase is decided by the size of local data set of each 
processor. So the number of candidate itemsets generated is 
lager than ones of CD algorithm. 
The paper presents a multi-process parallel association 
rules mining algorithm based on message queue. first of all, 
uses process management to generate the various processes 
of mining association rules needed; then uses the message 
queue to complete the communication among the frequent 
item sets of the transaction database formed, and 
experimental analysis show that the algorithm can adapt to 
data mining of large data sets. 
II. RELATED CONCEPTS OF ASSOCIATION RULES MINING 
Association rules mining is used to excavate the implicit 
rules and the relation of data. The model of association rules 
is declarative knowledge, and the algorithm is unsupervised 
learning method. Let I={I1 ,I2,"',In} be a set of items, Let D 
be a set of database transactions, where each transaction T 
is a set of items such that T S; I. An association rule is an 
implication of the form A => B, where A, B is itemset, 
A S; I, B S; I and A (1 B =<1>. The attributes of association 
rules are described as follows. 
978-1-4244-6542-2/$26.00 © 20ID IEEE V3-572 
2010 3rd International Conference on Advanced Computer Theory and Engineering (ICACTE) 
(1) Support: in the transaction database D if s is the 
percentage of transactions in 0 containing A which also 
contains B, that is s%=Support(A? B), which expresses the 
frequency of the rules. A minimum support threshold is 
Minsup. 
(2) Conjidence: in the transaction database D if c is the 
percentage of transaction in A containing B, that is c%= 
Conjidence(A ? B), which expresses the strength of the 
rules. A minimum confidence threshold is Minconf. 
(3) Frequent itemset: An itemset satisfies minimum 
support if the occurrence frequency of the itemset is greater 
than or equal to Minsup in the transaction database D. If an 
itemset satisfies minmum support, then it is a frequent 
itemset. 
Association rules mining is to find out the association 
rules that satisfy both a minimum support threshold(Minsup) 
and a minimum confidence threshold(Minconf) in the 
transaction database D. Association rules mining is a 
two-step process: 
Step 1: Find all frequent itemsets in transaction database. 
Step 2: Generate association rules from the frequent 
itemsets that found in step 1, for each frequent itemsets A, if 
B ? A, B * ([J and Conjidence (B ? (A-B)) ? Minconf, 
then these constitute an association rule B ? (A-B). 
III. ASSOCIA nON RULES MINING ALGORITHM BASED ON 
MESSAGE QUEUE 
A. Message Queue 
Unix System V provides a series of process 
communication mechanism that IPC(interprocess 
communication) mechanism, which greatly enhances the 
Unix interprocess communication. The IPC mechanism 
includes three types: message queue, semaphore and shared 
memory. Message queue as one way of interprocess 
communication that the Unix operating system kernel 
provides had been widely used. Algorithm realizes 
communication between the main process and the child 
process using message queue technology. 
In message queue, the communication of process is an 
asynchronous mode that established based on message queue, 
the process can send or receive data of some kind of format[5l, 
the message queue by the order of arrival, for the same type 
of message, the first to reach, the first to be recevied. The 
length of message can be variable, and the maximum length 
determined by the system constant MSGMAX. So the sender 
of the message needn't wait the receiver to check its message. 
While sending the message, the sender can engage in other 
work, and the recipient needn't have to wait for the arrival of 
the message. The principle of message queue is shown in 
Figure 1. 
send send 
Process A 
receive Message Queue receive Process B 
Figure I The principle of message queue 
The operating system kernel, such as the creation of 
message queue, sending or receiving message, the control 
and revocation of message queue, has been achieved by the 
C function, but the structure of various applications is poor 
in usability, and the interface is more complex. Therefore, 
the paper will package the various operations of message 
queue as a public component. The component integrates the 
various operations, such as create and delete a message 
queue, receive message, the Class diagram of message queue 
is shown in Figure 2. 
CMessage 
#m_MsgKey : long 
+CMessage(in IMsgKey long) 
+CreateMsgO : int 
+DeleteMsgO : int 
+GetMsgNumO : int 
+SndMsg(in data: void·, in size: int, in flag : int) : int 
+revMsg(in data: void·, in size: int, in flag : int) int 
? 
CAssociationMsg 
+CAssociationMsg(in IMsgKey : long) 
+sndltemMsg(in task: stltems .) : int 
+revltemMsg(in task: stltems *) : int 
+setMsgkey(in IMsgKey : int) : int 
+sndFlagMsg(in stTaskFlag : char", in flag: int): int 
+revFlagMsg(in strTaskFlag : char·, in flag: int) : int 
FIgure 2 the Class dIagram of message queue 
Class CMessage is a basic class that provides various 
public operations for message queue. It abstracts message 
content of message queue, which achieves to put any type of 
data as a message to be sent or received. Using class 
CAssociationMsg inherits the basic class of message queue. 
The function of this class provides methods to operate the 
message queue, such as sending a set of frequent itemsets to 
message queue, receiving the frequent itemsets from 
message queue, receiving and sending finish or exit message, 
which takes "flag" as a symbol to distinguish the different 
types of message. 
In this way, each process of the algorithm can call the 
message queue to send or receive message. that is, owning 
the message queue is equivalent to achieving the 
communication between the various processes. 
B. Process Management 
Process management is the first called module of parallel 
association rules mining in process. Generate all the 
processes needed when algorithm starts, and record the 
related information of each process to the process control 
table to monitor. Execution as follows: 
Step 1: Read the number of child processes that 
configured in advance and the signal values from parameter 
table of the database. 
Step 2: Judge signal of the value whether it has been 
created in the operating system. If not created denotes that 
the system hasn't been started before, need to create the 
signal and jump to Step 3. If the signal already exists that 
means the program has been launched, check the status of 
each process in the process control table, pad out the 
process(Fork operation) that has been quited according to the 
process status, set the corresponding process serial number 
and jump to Step 5. 
V3-573 
20 I 0 3rd International Conference on Advanced Computer Theory and Engineering (ICA CTE) 
Step 3: Calculate the unique identifier between the child 
process and the main process, which is the key value of 
message queue. Put a pre-defined fixed value plus 1 as key 
value of message queue. After completing key value, call 
message queue component to establish the appropriate 
message queue. 
Step 4: Set the process serial number according to the 
number of Fork process in order to distinguish the child 
processes, so that the child process can enter into their own 
process while handling the tasks. 
Step 5: Write the related information of each process 
generated by Fork operation into the process control table. 
including process ID, process generate time, process state 
and process serial number. process serial number 0 indicates 
the primary process. 
C. Mining Algorithm 
The algorithm uses the child processes generated by 
process management to scan the transaction database, so that 
it splits the candidate sets of large items. Each child process 
calculates Support of the candidate itemsets respectively. 
The algorithm generally described as follows. 
(1) Call process management, and put it into the main 
process according to the process serial number, then 
scan the transaction database and calculate all frequent 
itemsets Ll that meet the minimum Support. That K = I. 
(2) When K> 1, the main process is candidate frequent 
itemsets Ck containing K items that generated by Lk.1 the 
itemsets are average divided into X, where X is
' 
the 
number of child process, distribute the itemsets divided 
to each child process through message queue. 
(3) According to the process serial number, access to the 
child process pi through interface provided by process 
management. p
i 
get candidate itemsets Ci
k 
containing K 
items correspondingly. Compute Support of itemsets Cik 
by scanning the transaction database, and obtain K items 
of frequent itemsets Lik that the corresponding child 
process i greater than minimum Support. Then send it as 
message to the main process through message queue. 
(4) The main process get the frequent itemsets sent by each 
child process through message queue, merge these 
frequent itemsets received and obtain global K items of 
frequent itemsets Lb and calculate the candidate 
frequent itemsets Ck+]' then determine whether to 
terminate or continue to search for the next step to 
complete the whole process of association rules mining. 
The pseudo-code of algorithm described below. 
Input:transactions Database; minimum support threshold 
Output: L, frequent itemsets in D. 
Method: 
(1  )processMgt. DeteProcess(D)I ICall 
management component to 
process and record information 
(2)LJ=find _ frequent_l-itemsets(D) 
the process 
generate the 
(3)if(processMgt.m_Msglnfo.msgNum == 0) IIEnter into 
the main process according to the process serial number 
(4){ 
if(Lk_1 "* l/J)then 
Ck=apriori...Een(Lk_J ,MinThreshold) 
SpiltCandidateItems(Ck ,processMgt.m _ Msglnfo.pro 
Count) 
for(x=l; x<=proCount; x++) 
cAssoMsg.sndItemMsg(Ch 
end 
cAssoMsg.sndExitFlagOllsend exit sign after disposed 
processMgt.UpdateControIToExit(getpidO,msgNum) 
(5)}else llEnter into the child process 
(6){ cAsso M sg.rev ItemMsg( ch 
Frequent_gen(Ct,MinThreshold, Lhllgenerate frequent 
itemsets 
cAssocMsg.sndItemMsg(Lk) 
(7)} 
IV. EXPERIMENTAL ANALYSIS 
To verifY the effectiveness of the algorithm, the hardware 
environment used is the operating system Aix5.3, memory 
lOG, 4CPU, OraclelOg, and C++ language is used to 
implement the algorithm. The data used in the paper is the 
product ordered of mobile phone user of 
telecommunications industry, the number of data is 10 
million, some examples of data sets are shown in TABLE 1. 
The first column is user ID, the second column is the user's 
business, set the minimum Confidence is 40%, and compared 
with the Apriori algorithm in different Support, the results 
are shown in Figure 3, and some association rules through 
the parallel mining algorithm are shown in TABLE 2. 
TABLE I SOME EXAMPLES OF DATA SETS 
userID The order business 
10872 Mobile chat, Mobile purse, Mobile video 
39808 WAP, GPRS, Mobile newpaper 
67362 RBT, Mobile chat, Mobile newpaper 
85699 RBT, MMS, Mobile chat 
300 
250 
I1l 200 "-... 
I1l 
150 8 . ,.; 
+-' 100 
50 
0 
O. 5 1 2 3 4 5 
Figure 3 Experimental Comparison 
TABLE 2 SOME ASSOCIA nON RULES 
Rule Support(% Confidence( ) %) 
W AP, Mobile newpaper ->GPRS 2.767 70.425. 
Mobile video, W AP-> Mobile 1.132 64.444 newpaper 
Mobile chat, MMS -> Mobile cartoon 1024 57.692 
The expenmental results show that the algOrIthm IS 
feasible to mine large data sets. 
V3-574 
2010 3rd International Conference on Advanced Computer Theory and Engineering (ICACTE) 
V. CONCLUSION 
The paper introduces the message queue and the 
implementation of process management, designs a parallel 
association rules mining algorithm based on message queue 
and process management, and describes the mining process 
of algorithm. The experimental results verifY the algorithm 
feasible for mining large date sets, 
REFERENCES 
[I] Han Jiawei, Kamber M. Data Mining Concepts and Techniques [M]. 
China Machine Press, Morgan Kaufmann Publishers, 2001 
[2] Savasere A, Omiecinski E, Navathe S. An efficient algorithm for 
mining association rules in large database. In Proc of 21th Conf on 
Very Large Databases. Zurich, Swizerland, 1995:432-444. 
[3] Agrawal, Sharfer J Parallel Mining of Association Rules [A]JEEE 
Trans. Of Knowledge and Data Engineering.1996 962-969. 
[4] Cheung D W, Han Jiawei. Efficient Mining Association Rules in 
Distributed Database. IEEE Transactions of Knowledge and Data 
Engineering.1996:910-921 
[5] Li Xiaoqun,Zhao Huibin,Sun Yufang. Inter-process Communication 
Mechanism Analysis and Comparison [J]. Computer Science, 
2002,29(11 ) 
[6] Jin, Agrawal. A Middleware for Developing Parallel Data Mining 
Application[J]. CiteSeer Home, 2001,32(1),16-33 
[7] Liu Tiantian,Yang Shengchun,Ou Zhonghong. Research and 
Implementation of Parallel Process Migration based on Message 
Passing [J]. Computer Science,2009,36(4) 
V3-575 
