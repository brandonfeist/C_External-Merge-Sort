Research and Design for Intrusion Detection System 
with Hybrid Detector and Apriori Algorithm 
Duanyang Zhao, Qingxiang Xu, Zhilin Feng 
Zhijiang College of Zhejiang University of Technology 
Hangzhou, Zhejiang Province, 310024, China 
{sunny, xqx, fengzl}@zjc.zjut.edu.cn 
 
 
Abstract—Network and host Intrusion Detection Systems (IDS) 
have become a standard component in security infrastructures. 
As the action of intrusion represents variable, complicated, and 
uncertainty characteristic, they face so many problems to resolve 
for intrusion detection. Each approach has its strengths and 
weaknesses. We propose a hybrid IDS, which combines network 
and host IDS, with anomaly and misuse detection mode, utilizes 
auditing programs to extract an extensive set of features that 
describe each network connection or host session, and applies 
data mining programs to learn rules that accurately capture the 
behavior of intrusions and normal activities. We use an 
association rule to track all relevant data dependency rule sets 
for different access roles using a hierarchical structure. We 
identify malicious transactions from the transaction logs in the 
database using the data dependency rule sets. These rule sets are 
continuously updated and stored in a repository. The optimized 
algorithm actually improves the performance of IDS. Our 
approach is shown to reduce data access bottlenecks, and ensures 
minimal manual intervention for maintaining a secure database. 
Keywords-intrusion detection; hybrid ids; data mining; analysis 
engine; apriori algorithm 
I.  INTRODUCTION 
Apriori algorithm in data mining can show that the 
attribute-values frequently appear together in a given data set. 
It can mine the relationships between attribute values from a 
database table, and is more suitable method for intrusion 
detection system. 
The most representative of the research in the world is 
Wenke Lee Research Group in Columbia University [1], [2], 
1998. They were supported by the Defense Advanced Research 
Projects Agency (DARPA) and the National Natural Science 
Foundation (NSF) funding, and focused on the research in this 
area. Since then, the IDS Research Group of the Department of 
Computer Science, under the leadership of Professor Salvatore 
J. Stolfo, carried out extensive study on data mining-based IDS. 
They have been divided their research into twelve sub-topics. 
Their research is on top in the world. The SANS (System 
Admin, Audit, Network, Security) has outstanding 
performance in this area [3].  
In recent years, both the Chinese Academy of Sciences 
(CAS) and key universities and colleges in China are actively 
carrying out researches in this area [4], [5]. With the help of the 
Development Project of National Key Basic Research and the 
Major Projects Fund of CAS Knowledge Innovation Project, 
PhD Xu Jing, in Computing Center, Research Institute of High 
Energy Physics of CAS, made a preliminary implementation 
for Intrusion Detection System based on data mining. With the 
help of the National Natural Science Fund, doctoral students of 
Department of Computer Science at Nanjing University of 
Science, Wuhan University, Northern Jiaotong University, and 
other key universities carried out similar researches. 
Intrusion Detection Systems (IDS) have been developed to 
identify any unauthorized attempts or successful attacks on any 
type of monitored data or resources available as part of a 
network or host system. Most IDSs detect such malicious 
activity either at the transaction level or at the operating system 
(OS) level. It is also shown that transaction level attacks take 
care of most OS level attacks. But there are many attacks 
which occur internal to the network such as by a user with 
lesser privileges accessing data that requires more access rights. 
Such attacks can be identified by analyzing the transaction logs, 
which contains all the transactions made on a database. 
By analyzing the characteristics of hacker programs with 
back door, by which hackers control target hosts, networks 
may cause unexpected connection records. Because of huge 
amount of data in the network processing, the number of 
connection records after filtered is also very impressive. While 
establishing a connection, it will increase a record. Therefore, 
we can not simply compare the connection records to achieve 
intrusion detection. 
In recent years, the use of data mining knowledge for 
intrusion detection system has won more and more attention, 
but there are a lot of problems. For examples, it is difficult to 
have a clear standard in the selection of test data, there are 
large amounts of useless information in the results of mining 
out of the experiment data, and how we express the rules mined 
from the experiment data for intrusion detection system.  
In [6], malicious writes are the major security threats and 
simple approach is given to identify malicious writes using 
data dependencies. The paper does not identify illegal reads. 
Our approach identifies all types of illegal accesses. Data 
mining is required to identify hidden data dependencies which 
might cause security threats and using triggers and stored 
procedures, we can only prevent expected loop holes. A 
possible solution is using dynamic stored procedures to 
maintain changing database data dependencies for intrusion 
detection but this an inflexible approach especially for a 
database which is accessed using a web based application. 
978-1-4244-5895-0/10/$26.00 ©2010 IEEE
Our approach deals with illegal transactions submitted to 
the DBMS via some mechanism using a user id with lower 
access rights using a web based application. Also it will 
prevent those intruders who bypassed the access control 
mechanism as the data dependency rule set will still track the 
valid sequence of reads and writes required for each transaction. 
The remaining section of this paper is organized as follows. 
In the second section, the paper describes the framework of 
hybrid intrusion detection system. In the third section, we show 
the experimental design and results of apriori algorithm in data 
mining. Finally, we draw a conclusion and exhibit a prospect. 
II. THE FRAMEWORK OF HYBRID IDS 
Intrusion detection technology is a new security support 
mechanism, and monitors the network system without affecting 
the network performance to prevent internal and external 
attacks and misuse. Intrusion detection systems have a variety 
of classifications. In accordance with the objects of the system 
detection, they are divided into the host-based, the network-
based, and the hybrid IDS; in accordance with system 
architecture, they are divided into centralized and distributed 
IDS; and finally in accordance with the detection type, they can 
be divided into anomaly-based model and misuse-based model 
IDS. 
The hybrid IDS in the paper is a combination of intrusion 
detection engines of misuse and anomaly detection, uses data 
mining algorithms as the data processing for vast amounts of 
security audit data, and generates detection models and test 
models separately from the network data and host system calls, 
as shown in Fig. 1: 
 
Figure 1.  Intrusion Detection System with Hybrid Detector and 
Apriori Algorithm 
The hybrid IDS consists of four parts: data warehouse, 
sensors, analysis engine and alarm system. 
A. Data warehouse  
Data warehouse technology has the following functions: to 
manage decision-making process, subject-oriented, integrated, 
and time-related data collection, to support multi-process and 
multi-threading technology. Many commercial DBMS have the 
function. The project uses SQL Server 2005 data warehouse 
technology, which includes Analysis Services. It can easily set 
up a data warehouse, achieve distributed computing, and 
provide OLE DB Controls and ADO (ActiveX Data Objects) 
technology, and has a flexible data model, etc. Obviously, the 
features can improve the speeds of the data mining and the 
analysis engine.  
Data warehouse technology is beneficial that the different 
components asynchronously handle the same piece of data 
stored in a database. Therefore, it is the heart of the data and 
models in the whole system. 
B. Data Collectors 
Sensors are closely related with the network operating 
system, usually to discuss Windows system or UNIX/Linux 
systems. This paper sets out technical means of sensors as an 
example of Windows system, as Fig. 2 shows. 
 
Figure 2.  Data collector diagram 
1) Host Sensors 
They gather information in monitored hosts with a variety 
of methods, such as application logs, security logs and event 
logs, running applications and registry changes.  
After set up audit features, Windows Server will monitor 
various states of the system, and write them to logs. With the 
help of Windows API functions, we develop programs to 
monitor the system logs, running applications and registry 
changes, and to send them to the host sensor manager of the 
analysis engine to be analyzed.  
We use the hook function to intercept API calls.  
Hook is an important technology of Windows message 
processing mechanism. With installing a variety of hooks, the 
application can set the appropriate subroutines to monitor the 
system messaging. Before messages reach their destinations, 
subroutines intercept them and make some analysis according 
to the user requirement. Hook is divided into thread-specific 
hooks and global hooks. Thread-specific hooks monitor the 
specified thread, and the global hooks monitor all the threads in 
the system. For the global hooks, hook functions must be 
included in a separate dynamic-link library (DLL) so that they 
can be called by a variety of associated applications.  
Hook function is a mechanism for application programs to 
monitor message flows and to process some type of the 
messages that have not yet reached the purpose window in the 
system. 
2) Network Sensors 
With the netstat tool of Windows system, network sensors 
collect the network connection information established 
between computers. Netstat command can collect all the open 
port information on the computers. We may design a program 
to run netstat command at a regular interval, and to output the 
results. But this way will add to the burden on the system. In a 
relatively busy system, the records of a day may go up to some 
Data 
Warehouse 
Data 
Collectors 
Analysis 
Engine 
Alarm 
System 
 
… 
Network Sensors 
Sensor-1 Sensor-2 Sensor-m 
 
… 
Host Sensors 
Sensor-2 Sensor-1 Sensor-n 
Network Sensor Manager 
Host Sensor Manager 
Data 
Warehouse 
Analysis Engine 
GB in size.  
Therefore, we can optimize the program to capture easily 
the network connection information. It first lists all open ports, 
monitors the port whether it is a new open and when it is 
closed, records the port information only updated, and outputs 
records to Network Sensor Manager in Analysis Engine. The 
records include port services, port number, activation time, and 
time stamp and so on.  
C. Analysis Engine  
Analysis Engine consists of three parts: Network/Host 
Sensor Manager, Misuse and Anomaly Detector, Mining 
Algorithm Library and Pattern Mining, as Fig. 3 shows.  
 
Figure 3.  Analysis enginen diagram 
1) Sensor Manager receives data from sensors, then 
analyse the data, translate them into the form of database 
records, and store them into the data warehouse.  
2) Misuse and Anomaly Detection detects intrusions based 
on the matching patterns stored in the data warehouse.  
Traditional IDS is divided into two separate types: misuse 
detection and anomaly detection. Anomaly detection is known 
as behavior-based detection, which sets up the behavioral 
models for users under normal circumstances in the learning 
phase, then compares the current user behavior with the 
existing behavioral models, and founds an intrusion if the 
deviation is greater than the threshold of the credibility. The 
basic principle is that intrusion comes out if any behavior is not 
consistent with the known behaviors.  
Misuse detection is also called knowledge-based intrusion 
detection, which sets up intrusion patterns for the known 
intrusions, then matches the current user behaviors and system 
status with the existing intrusion behavior patterns. The basic 
principle is that intrusion comes out if any behavior is 
consistent with the known behaviors.  
We integrate these two models into the hybrid IDS, thus 
format new basic principles of intrusion detection: any 
behavior is a normal behavior if it is consistent with normal 
behavior model, any behavior is a intrusion behavior if it is 
consistent with anomaly behavior model, and others are added 
to the detection models in data warehouse by the Pattern 
Mining module based on Mining Algorithm Library to generate 
a new detection model. While comparing an unknown behavior 
with normal/anomaly behavior model, the detectors determine 
a normal/anomaly behavior by comparing support and 
confidence level of calculated results with a given minimum 
support and confidence level. 
3) Mining Algorithm Library and Pattern Mining for 
mining unknown intrusions.  
Point of view from the data warehouse, data mining can be 
regarded as an advanced stage of online analytical processing 
(OLAP). We apply data mining technology to IDS, use its 
algorithms of association analysis and sequential pattern 
analysis to extract safety-related characteristic properties, 
generate classification models based on them, and identify 
automatically security incidents. The analytical methods of 
data mining can be divided into three parts:  
The Apriori algorithm has become a well known standard 
for identifying patterns using association rules. Its main 
disadvantage is that, if a pattern of length n is needed, then n 
passes are needed through the items. This can become a large 
overhead for our current application.  
The approach in this paper is a variation of the Apriori 
algorithm which identifies frequent rule sets using a pattern 
repository in linear time. The main advantage of this approach 
is the ease of updating the rule set and scaling. New frequent 
rule sets added to the database can be used immediately. Our 
problem requires rule sets which identify all relevant patterns 
and not only the frequent ones. The rule set should be complete 
and all dependencies that may cause a security threat need to be 
identified. Also the problem requires an algorithm that can 
quickly adjust the rule sets rather than completely redefining 
them depending on changing items and itemsets.  
We use a pattern repository to keep track of valid data 
dependencies, and modify the Apriori algorithm to reflect all 
relevant data dependencies, using pseudo-code described 
below. 
Input: Transaction database D; minimum support threshold 
min_sup. 
Output: D in the frequent itemsets L. 
L1= {large 1-itemsets}; 
for (k=2; Lk-1?Ø; k++) { 
 Ck=apriori_gen(Lk-1, min_sup);  
 //To generate the next candidate itemsets; 
 for all transactions t?D { 
  Ct = subset (Ck, t); 
  For all candidates c?Ct; 
  c.count++; 
 }; 
 Lk={c?Ck| c.count ? min_sup}; 
}; 
return L=?Lk? 
The algorithm calls the function apriori_gen (Lk-1, min_sup), 
which generates k candidate sets by k-1 frequent itemsets and 
uses the following properties: (1) If X is a frequent itemsets, 
then any non-empty subsets of X are frequent itemsets; (2) If X 
are non-frequent itemsets, then any supersets of X are non-
frequent itemsets. Its pseudo-code of the algorithm is described 
as follows: 
Data 
Warehouse 
Alarm 
System 
Misuse Detector 
Anomaly Detector 
Network Sensor 
Manager 
Host Sensor 
Manager 
Pattern Mining Mining Algorithm Library
Alarm Message
for each itemset l1?Lk-1 
 for each itemset l2?Lk-1 
  if (l1[1] = l2[1])?(l1[2] = l2[2])?…?(l1[k-1] = l2[k-1]) 
  then { 
   //To merge: generating candidate itemsets 
   c=l1?l2;  
   if has infrequent_subset (c, Lk-1) then delete c; 
   else insert c to C; 
  } 
return C; 
The function of infrequent_subset (c, Lk-1) is to determine 
whether c adds to the k candidate itemset: 
for each itemsets (k-1) subset s of c 
 If s?Lk-1 then return TRUE; 
return FALSE; 
D. Alarm system 
The main functions of alarm system are to build the 
emergency measures based on alarm strategies, such as the 
appropriate system protection, archiving, intrusion tracing 
when necessary, as Fig. 4 shows.  
 
Figure 4.  Alarm system diagram 
III. THE EXPERIMENT FOR ASSOCIATION ANALYSIS 
A. The design of associational rule detector  
Association analysis in data mining is divided into two 
parts: the learning phase of the rules and the detecting phase of 
the application of the rules learnt.  
1) In the learning phase: the Analysis Engine applys 
association analysis to connection records from Network 
Sensor Manager, to mine out the associations between the 
values of data items under the normal state of networks, and 
obtaine the associational rule set, which are filtered by some 
artificial rules so as to be suitable for detection rule set. 
2) In the detecting phase: the Analysis Engine gets the 
connection records from Network Sensor Manager, and 
matches with detection rule set to determine whether intrusion 
takes place. The process matching detection rule is that of the 
association analysis in the detecting phase.  
The detection rule set made in the learning phase is the core 
of the Analysis Engine. Their validity has a direct impact on 
the accuracy of detection results. 
B. The experimental results for associational rules  
The number of associational rules of classical and improved 
Apriori algorithm with different parameters is as Table I 
showed. The parameter Smin stands for the minimum support 
and Cmin for the minimum confidence. 
TABLE I.  THE NUMBER OF ASSOCIATIONAL RULES 
Items Different parameters 
Parameters (Smin=Cmin) 0.1 0.2 0.3 0.4 0.5 0.6 
Classical Apriori algorithm 13610 3420 1712 907 508 145 
Improved Apriori algorithm 5627 1390 785 677 290 68 
From Table 1, we can see that, in the same parameter, the 
effective number of rules of improved algorithm is less than 
that of classical algorithm; and in the different parameters, the 
higher the value of parameters, the fewer the number of 
effective rules. Therefore, the optimized algorithm is useful for 
improving the accuracy of the rules in data mining. 
IV.   CONCLUSIONS 
The hybrid IDS is efficient to detect known and unknown 
intrusions. The research on intrusion detections based on data 
mining is one of the hot study topics at home and abroad. 
There are still a series of theoretical and practical problems to 
be resolved, and a number of key technologies are required to 
make further deep study. The experiment shows that the design 
and implementation of an efficient and accurate IDS based on 
data mining is a large, complex project.  
The experiment gives an efficient approach to deal with 
intrusion detection in large databases. Our Apriori algorithm 
reduces the computational time for identifying and maintaining 
effective rule sets. It provides an ability to detect malicious 
activity when it occurs within existing or past users of the 
database without slowing the database transactional activity. 
In the future, we will focus the study on how to select 
appropriate and representative original data and to filter 
precisely useless rules. 
ACKNOWLEDGMENT 
The work has been supported by the Natural Science 
Foundation of Zhejiang Province, China (No. Y1080343). 
REFERENCES 
[1] W. Lee and S. J. Stolfo. "Data mining approaches for intrusion 
detection." In Proceedings of the 7th USENIX Security Symposium, San 
Antonio, TX, January 1998. 
[2] W. Lee and S. J. Stolfo. "A data mining framework for building 
intrusion detection models." In Proceedings of the 1999 IEEE 
Symposium on Security and Privacy, Oakland, CA, May 1999 
[3] http://www.sans.org/resources/idfaq/data_mining.php?printer=Y,2003.4 
[4] Chinese Academy of Sciences (CAS). "Network IDS technology in CAS 
reached the international advanced level." (in Chinese) Retrieved from 
http://www.cas.cn/jzd/jcx/jcxlc/200204/t20020403_1034832.shtml 
[5] Xu Jing, Liu Baoxu and Xu Rongsheng. "Design and implementation of 
data mining-based IDS." (in Chinese) Computer Engineering, Beijing. 
2002, 28(6), pp9-10,169 
[6] Yi Hu and Brajendra Prasad, "A Data Mining approach for Database 
Intrusion Detection", ACM Symposium on Applied Computing, 2004, 
pp. 711-716.
 
Alarm 
Manager 
Intruder Tracing 
System Protection 
Strategy 
Archive Information 
Alarm Strategy 
Misuse 
Detector 
Anomaly 
Detector 
Alarm 
Message 
Alarm 
Message 
