2010 3rd International Conference on Advanced Computer Theory and Engineering(ICACTE) 
Privacy Preserving Based on Association Rule Mining 
Tinghuai Ma, Sainan Wang 
School of Computer & Software 
Nanjing University of Information Science & 
Technology 
Nanjing, China 
thma@nuist.edu.cn 
Abstract-Privacy has become an important issue in Data 
Mining. Many methods have been brought out to solve this 
problem. This paper deals with the problem of association rule 
mining which preserves the confidentiality of each database. In 
order to find the association rule, each participant has to share 
their own data. Thus, much privacy information may be 
broadcast or been illegal used. These issues can be divided into 
two categories: data hiding and knowledge hiding. This paper 
reviews the major method of privacy preserving on each 
category and choose some of them to complete our system. At 
the end, an improvement of sensitive rules hiding is proposed 
to make it more accuracy and security. 
Keywords-Associationrule; data mining; privacy preserving; 
data hinding; knowledge hiding 
I. INTRODUCTION 
Association rule mining, as a very important technique, 
has already been applied in a wide range of areas. However, 
it breaks out many privacy issues. From a general point of 
view, we may classifY privacy issues into two broad 
categories. The first is related to the data perse and is known 
as data hiding, while the second concerns the information ,or 
else the knowledge, that a data mining method may discover 
after having analyzed the data , and is known as knowledge 
hiding. 
Data hiding tries to remove confidential or private 
information from the data before its disclosure. In this case, 
many randomization methods have been addressed. The 
randomization method has been traditionally used in the 
context of distorting data by probability distribution. The 
miner uses the perturbation data to get the association rule. 
In this case, the data miner does not know the raw data and 
also can get the similar result. Which the key point for data 
miner is how to reconstruct the raw data distribution. 
Agrawal R gave out a method bayes reconstruction method 
[1]. 
Randomization method will change the raw database, 
there will be many negative impacts, just can be classifY into 
two parts: 
• Useful rules have been lost; 
• New rules have been produced artificially. 
In fact, there will be a contradiction between accuracy 
and security. In other word, if we perturb the raw data so 
much that the mining result will tum to poor. In the same, if 
we perturb it so little that the hacker will get the data they 
ZhongLiu 
Sichuan College of Architectural Technology 
Deyang, China 
liuzhong@scac.edu.cn 
want more easily. To solve this problem, Secure mUlti-party 
computation [2] is addressed, it use security communication 
protocols and cryptography, make it possible to mining rules 
on the raw data, this can reduce the negative impact. But this 
will cause huge communication costs and complex 
cryptography, which will make the algorithm low-efficiency. 
Knowledge hiding, on the other hand, is concerned with 
the sanitization of confidential knowledge from the data. As 
a result of association rule mining, many useful association 
rules will be discovered, but at the same time, many privacy 
rules will also be exposed which do not want others to know. 
To solve this, we have to limit the mining process, in order to 
keep these sensitive rules being hidden. There are so many 
methods to solve this problem. Which we used is just one 
kind of them, called support-based and confidence-based 
blocking schemes [3, 4, 5]. 
The main disadvantage of a blocking algorithm is the fact 
that the dataset, apart from the blocked values, is not 
distorted. Thus, an adversary can disclose the hidden rules by 
identifYing those generating item sets that contain question 
marks and lead to rules with a maximum confidence that lies 
above the minimum confidence threshold. If the number of 
these rules is small then the probability of identifYing the 
sensitive ones among them becomes high. Chris Clifton 
presents a method to avoid this problem [6]. 
II. ApPROACHES 
In this section, the main approaches used in our system 
are presented. Apriori algorithm is adopted to find the 
frequent item sets, then in order to get the global support and 
confidence without privacy disclosure, secure computation is 
used. For the knowledge hiding, an improved algorithm is 
mentioned to get satisfY result. 
A. Secure computation 
The history of the multi-party computation problem is 
extensive since it was introduced by Yao [7] and extended 
by Goldreich et al. [8] and many others. The basic idea of 
secure multiparty computation (SMC) is that a computation 
is secure if at the end of the computation, no party knows 
anything except its own input and the results. 
Security sum [6, 9] is a very simple and useful method 
which base on SMC. It is used for get the sum of data from 
the different site. It works as follow: 
978-1-4244-6542-2/$26.00 © 2010 IEEE VI-637 
2010 3rd International Conference on Advanced Computer Theory and Engineering(ICACTE) 
Assume that the value v = sumt=lv/ to be computed is 
known to lie in the range [0, n]. One site is designated as the 
master site, numbered 1. The remaining sites are numbered 
2···s. Site 1 generates a random number R, uniformly chosen 
from [0, n]. Site 1 adds this to its local value Vj, and sends 
the sum R+vj mod n to site 2. Since the value R is chosen 
uniformly from [1, n], the number R+vj mod n is also 
distributed uniformly across this region, so site 2 learns 
nothing about the actual value ofvj. For the remaining sites i 
= 2 . . .  s -1, the algorithm is as follows: 
j-I 
Site receives V=R + ?>j modn then 
j=l 
j 
computes V = R + L Vj modn = (Vj + V)modn and 
j=l 
send to site i+ 1 
At last each site do the steps above, and sends the final 
result back to the site 1, the site 1 minus R and get the sum. 
B. Association rule hiding 
Wang and Jafari [3] propose two modification schemes 
that incorporate unknowns and aim at the hiding of 
predictive association rules, i.e., rules containing the 
sensitive items on their LHS (left-hand-side). Both 
algorithms rely on the distortion of a portion of the database 
transactions to lower the confidence of the association rules. 
Compared to the work of Say gin et al. [4, 5], the algorithms 
presented in [3] require a reduced number of database scans 
and exhibit an efficient pruning strategy. However, by 
construction, they are assigned the task of hiding all the rules 
containing the sensitive items on their LHS, while the 
algorithms in the work of [4, 5] can hide any specific rule. 
The first strategy, called ISL, decreases the confidence of a 
rule by increasing the support of the item sets in its LHS. 
The second approach, called DSR, reduces the confidence of 
the rule by decreasing the support of the item sets in its RHS 
(left-hand-side). Both algorithms experience the item 
ordering effect under which, based on the order that the 
sensitive items are hidden, the produced sanitized databases 
are different. Moreover, the DSR algorithm seems to be 
more effective when the sensitive items have high support. 
III. OUR ALGORITHMS 
A. The Association rule mining System 
Fig.1 gives a general structure of out system which can 
be divided into three steps: 
First step: Security sum is used to get the global support 
and confidence, which keep the participant don't know the 
local support of each sit. 
Second step: SMC is adopted to send all item sets from 
different sit to one center, without data leakage. 
Third step: In this step system the sensitive rules will be 
hidden. It's a very important step, building up a Sensitive 
rules Database, Which contain the rules should be hidden. 
Then something should do to hide these rules, which is 
discussed in next section. 
The first two steps are belonging to the data hiding 
process and the third step is the knowledge hiding process, a 
detailed description is given in the next section. 
)----I-----+---- PISlIlCP 
?--- TlunlOl<p 
Fig.l.association rule mining system 
B. Data hiding 
Center M produce a random data matrix, which meet the 
average distribution, then send this matrix to sit A, follow the 
Security Sum method, we can get the global support and 
confidence of each item from the local support and 
confidence on each sit. 
Assume the items on Sit A which have a support matrix 
XA , center M will produce a random matrix Y which have the 
same order with X, and Y can be distribution-free . Sit A get 
Y and send ZA= X+ Y to Sit B, Sit B with its own support 
matrix XB, make ZB=ZA+XB . At the end of this process, M 
will get the global support by minus Y. each sit can't know 
the local support on the other sit. 
The RSA encrypt algorithm is used, Data miner produce 
the center encrypt key which denoted C-e and the key-pair of 
each sit denoted as (ej,dJ ej is encryption key and dj is 
decryption key .Data miner will send dj to Disturb Center 
and send ej and C-e to each Sit .Disturb Center will produce 
a JD for each sit .while, each sit will use the JD, ej and C-e to 
encrypt their own frequent itemset and send the result JD 
e/C-e(frequent itemset)) to Disturb Center. The Disturb 
Center deletes use the dj and the ID decrypt the data from 
different sit. After this step, Disturb Center will change the 
data to C-e(frequent itemset) and disrupts the order then 
sends C-e(frequent itemset) to Data miner. Data miner 
decrypts the itemsets and use the Apriori algorithm and the 
global support and confidence form M to analyze the 
itemsets and get the association rules. The detail of the 
method is described as follow: 
Encrypt step: 
1) Data Miner produce public encryption key : C-e 
2) Data Miner produce key-pair of each sit (ej,dJ 
3) Send ejto each sit, dj to Disturb Center 
4) Disturb Center send JD to each sit 
5) Each sit Encrypt their frequent itemset to ID e/C­
e(frequent itemset)) 
Decrypt step: 
1) Each sit send their data ID e/C-e(frequent itemset)) 
to Disturb Center 
Vl-638 
2010 3rd International Conforence on Advanced Computer Theory and Engineering(ICACTE) 
2) Disturb Center use di decrypt the data from each sit 
and remove the ID 
3) Disturb Center disrupts the order of the data ,send 
C-e(frequent itemset) to Data Miner 
4) Data Miner decrypts the data, getting frequent 
itemsets. 
C. Know/edge hiding 
In traditional methods, to hide a sensitive rule, some item 
should be deleted or use an unknown data to change the raw 
data. In terms of Association rule mining, rule A=>B will be 
discovered, as long as satisfY these two conditions: 
1. Support(A=>B)=P(A and B) '?:.Min_sup ; 
support(A u B) 
2. Confidence(A=>B)=P(AIB)= ----"'--"'------'----'-
support(A) 
'?:.MinJonf, 
Properly, decrease the support of B or decrease the 
support of A U B or increase the support of n, all of them can 
realize hiding the rule. But there is a conflict, when a support 
of items is changed some other insensitive rule will be 
hidden at the same time or other new forgery rule will be 
produced. 
S.-L.Wang [3] proposes two data mining algorithms for 
hiding informative association rules, namely Increase 
Support of LHS (lSL) and Decrease Support ofRHS (DSR). 
The first algorithm tries to increase the support of left hand 
side of the rule. The second algorithm tries to decrease the 
support of the right hand side of the rule. The detail of the 
ISL algorithm is described as follow. 
Algorithm ISL 
Input: 
(1) a source database D, 
(2) a min_support, 
(3) a min_confidence, 
(4) a set of predicting items X 
Output: a transformed database D', where rules 
containing X on LHS will be hidden 
1. Find large I-item sets from D; 
2. For each predicting item xE X 
3. If x is not a large I-itemset, then X = X-{x}; 
4. If X is empty, then EXIT; 
II no rule contains X in LHS 
5. Find large 2-itemsets from D; 
6. For each xE X { 
7. For each large 2-itemset containing x { 
8. Compute confidence of rule U, where U is a rule like 
x-y; 
9. If conf(U} < min_con/, then 
10. Go to next large 2-itemset; 
11. Else {IIIncrease Support of LHS 
12. Find TL = {t in Dlt does not support U}; 
13. Sort TL in ascending order by the number of items; 
14. While {conf( U) '?:. min _ conf and TL is not empty }{ 
15. Choose the first transaction t from TL; 
16. ModifY t to support x, the LHS( U); 
17. Compute support and confidence of U; 
18. Remove and save the first transaction t from TL; 
19. }; II end While 
20. }; II end if conf(U) < min_cmif 
21. If TL is empty, then { 
22. Can not hide x-y; 
23. Restore D; 
24. Go to next large-2 itemset; 
25. } II end ifTL is empty 
26. } II end of for each large 2-itemset 
27. Remove x from X; 
28. } II end of for each xE X 
29.0utput updated D, as the transformed D' 
Through the above method, the sensitive rules will be 
hidden, but some insensitive rules may have been hidden 
also and many new rules may have been produced 
artificially. To solve this problem, system should use the 
mining results to restraint the choosing process (which 
choose item to modifY).our method like this: 
NO 
y 
T 
( end 
) 
Fig 2 sensitive rules hiding process 
In the modifY the choose process, we choose other item 
as sacrifice item, in order to get a better results. Then we add 
some noise rules to increased security. 
In the ISL, the short itemset is chosen as sacrifice item, 
because it has least item, negative impact cause by modifY it 
may be the smallest. Our method first step is the same with 
ISL or DSR, then check the mining result, in this step, using 
privacy quantifY to measure the result, if it's dissatisfied, 
return to change the choose policy. check the whole 
database, classifY the items with their support, the items with 
support more close to Min_sup as "unsettled itemsets" the 
other is "settled itemsets", when choose the sacrifice item, 
the item in "settled itemsets" will be chosen first. 
Vl-639 
2010 3rd International Conference on Advanced Computer Theory and Engineering(ICACTE) 
As the main disadvantage of a blocking algorithm is the 
fact that the dataset, apart from the blocked values, is not 
distorted. So create some noise rules is necessary, to make 
the dataset distortion, which can be deleted in prune step. 
IV. CONCLUSIONS 
In this work, we have reviewed some approach about 
privacy preserving when doing association rule 
mining,construction a system for data mining ,which 
consider the main hidden danger when the mining running. 
Using Secure computation and RSA encryption technology, 
avoid data leakage which cause by data sharing. On the side 
of knowledge hiding, using ISL and DSR achieve Sensitive 
rules hiding, and present an optimization method to get a 
better result, with smaller negative impact. For the mass data, 
the method may be low impact and secure computation will 
cause huge communication costs and complex cryptography 
will make the algorithm low-efficiency. 
ACKNOWLEDGEMENT 
This research was supported by Natural science fund for 
colleges and universities in Jiangsu Province 
(08KJD520018), Natural Science Foundation from Nanjing 
University of Information & Science Technology 
(20080302). 
REFERENCES 
[I] Agrawal R., Srikant R. Privacy-Preserving Data Mining. Proceedings 
of the ACM SIGMOD Conference, 2000. 
[2] Chris Clifton, Murat Kantarcioglou,Xiadong Lin. Tools for privacy 
preserving distributed data mining. SIGKDD Explorations , 
2003,4(2):28-34. 
[3] S.-L.Wang and A. Jafari. Hiding informative association rule sets. 
Expert Systems with Applications 33 (2007) 316-323 
[4] Y Saygin, V. S. Verykios, and C. Clifton. Using unknowns to 
prevent discovery of association rules. ACM SIGMOD Record, 
30(4)45-54, 2001. 
[5] Y Saygin, V. S. Verykios, and A. K. Elmagarmid. Privacy preserving 
association rule mining. In Proceedings of the 2002 International 
Workshop on Research Issues in Data Engineering: Engineering E­
CommercelE-Business Systems (RIDE 2002), pages 151-163, 2002. 
[6] Chris Clifton ,Murat Kantarcioglou,Xiadong Lin. Tools for prvacy 
preserving distributed data mining SIGKDD 
Explorations,2003,4(2):28-34. 
[7] A.C. Yao, How to generate and exchange secrets, in: Proceedings of 
the 27th IEEE Symposium on Foundations of Computer Science, 
1986, pp. 162-167. 
[8] O. Goldreich, S. Micali, A. Wigderson, How to play any mental 
game--a completeness theorem for protocols with honest majority, 
in: Proceedings, 19th ACM Symposium on the Theory of Computing, 
1987, pp. 218-229. 
[9] Wenliang Du and Zhijun Zhan A Practical Approach to Solve Secure 
Multiparty Computation Problems Proceedings of the 2002 workshop 
on New security paradigms: Securing information,Pages 127 -
135, Year of Publication,2002. 
[10] R. Agrawal, R. Srikant, Fast algorithms for mining association rules, 
in: Proceedings of the 20th International Conference on Very Large 
Data Bases, Santiago, Chile, September 12-15, 1994. 
VI-640 
