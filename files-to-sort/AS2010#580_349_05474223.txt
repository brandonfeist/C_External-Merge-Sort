Alert Correlation Model Design based on Self-regulate 
 
Li Yang  
Anyang Institute of Technology  
Anyang, China 455000 
e-mail: ay1ly@163.com 
Dong Xinfa  
Yellow River Conservancy Technical Institute 
Kaifeng,China 475000 
e-mail: kaifengqzh@163.com
 
Abstract—The multi-step attack is one of the primary forms 
of the current network intrusions. How to detect these 
attacks is an important aspect of IDS (Intrusion Detection 
System) research. The correlation research in intrusion 
detection performs mainly on the following aspects: 
reducing the false alert rate and omission rate; detecting 
unknown attacks; attack forecasting. Especially the 
development of the third point perhaps improves the passive 
detection to the active protection. Through the study on 
patterns of the multi-step attack, a model of alert correlation 
which is based on self-regulate is designed. This paper 
describes the definition and classification of alert 
correlation. Also it introduces the association rules. To 
improve efficiency of IDS,the paper applies data mining 
technology to IDS In the paper we present a method of how 
to acquire the intrusion knowledge from the logs and detect 
the intrusion behaviors based on the improved Apriori 
algorithm. 
Keywords-intrusion detection; alert correlation; self-
regulate; Apriori algorithm  
 
I.  INTRODUCTION   
Study on the network intrusion detection system began 
in the 20th century, 80's, has been more than 20 years, 
however, the development of intrusion detection 
technology, is far from the objectives and expectations[1]. 
The current intrusion detection system still face the 
following problems: (1) lack of capacity for the accurate 
description of the attack (2) The IDS does not recognize 
the relevance of alert information, (3) lack of visualization 
for the study of alert information. 
Therefore, it is necessary to make correlation and 
adjustment analysis on IDS alert information, to reduce 
false alert rate and omission rate; to concise alert 
information, and provide these higher-level security 
information such as the strategy and process of the 
intrusion in a visual form to the security administrator, and 
predict the next possible attack, so that administrators may 
take timely measures to put an end to the ongoing and 
imminent attacks. 
II. COMPARISON AND ANALYSIS OF SEVERAL EXISTING 
CORRELATION METHODS 
The current commonly used correlation methods are: 
the probability correlation method, alert correlation model 
of machine learning method, alert correlation methods 
based on the prerequisites and method based on 
aggregation and correlation component. 
However, these methods have their shortcomings. 
Probability correlation method can not find the associated 
information from the alert information with fewer 
characteristics and can not reflect the cause-and-effect 
relationship of the alerts.  for the Alert Correlation Model 
of machine learning methods, the data that does not exist 
in thread could not be associated with and this affects the 
accuracy of the final results of the analysis; The method 
based on the aggregation and correlation component has 
difficult in predicting intruder's behavior. Alert 
information associated method based on Prerequisites is 
only an off-line detection method, and it needs well 
understand for a variety of attack methods.[2] 
III. DESIGN OF THE ALERT CORRELATION MODEL 
BASED ON SELF-REGULATE 
Through the discussion of the correlation methods 
mentioned above, here we present an improved model: the 
alert correlation model based on Self-regulate. The 
improved model incorporates advantages of the associated 
component-based approach and alert information 
correlation based on pre-conditions. 
A.   Theoretical Foundation 
1) The definition of alert correlation 
For distributed intrusion detection systems, alert 
information typically includes the following contents 
[3][4]: AID:Annunciator ID;TS:Time Stamp;AL:Alert 
Level; SI;Source;TI:Target.Where SI and TI are the 
structure types, containing the IP and PORT two domains.  
Commonly forms of the alert correlation [5][6][7] are : 
a) Repetitive 
Definition 1: For the two alert information A1 
(AID,TS,AL,SI,TI) ,and A2 (AID,TS,AL,SI,TI) , If the 
properties satisfy the following conditons: 
A1.AL=A2.AL,A1.SI=A2.SI,A1.AID=A2.AID,A1.TI.IP=
A2.TI.IP or A1.TI?A2.TI and |A1.TS-A2.TS|<?(? is a 
setted threshold),we claim that the relationship between 
A1 and A2 is “Repetitive”or “Duplication” . 
b) Causal Relation Correlation 
Definition 2: The attack a has certain conditions to 
take place, which is called attack premise (Prerequisite), 
isdenoted as Pre (a), the consequence effect of attack a,is 
denoted as Con (a). 
Definition 3: For any two alert information Al (AID, 
TS, AL, SI, TI), and A2 (AID, TS, AL, SIC, TI), if the 
A1.SI = A2.SI, A1.TI = A2.TI, and the collection Con (A1)  
corresponds to the consequences effect set of A1, and 
collection of Pre (A2) corresponds to premise set of the 
attack A2 ,and exists the following relationship: Con (A1) 
2010 Second International Conference on MultiMedia and Information Technology
978-0-7695-4008-5/10 $26.00 © 2010 IEEE
DOI 10.1109/MMIT.2010.60
274066
?Pre (A2), we claim that A1 and A2 has a causal 
relationship. 
c) Clustering Relations 
Definition 4: For any two alert information Al (AID, 
TS, AL, SI, TI), and A2 (AID, TS, AL, SI, TI), if the 
A1.SI = A2.SI, A1.TI = A2 .TI, we claim that the 
relationship between Al and A2 is the “Clustering 
Relations”. It also includes: 
• Source IP association: According to the attacks 
source IP address, the alerts are divided into some 
groups, the analyst can know which attack source 
is the most active, and if an IP address is reported 
by several IDS alert (or implicitly inclusive) as the 
attack source IP address, then this IP addresses 
has great possibility to be used by an attacker. 
Especially when the same source IP address 
triggered a number of different security alert 
events. 
• Destination IP association: the destination IP 
association is useful in identifying attack targets, 
if a system is constantly to be reported as a target, 
it is likely that it is actually really an attack 
destination. 
• Attack type / name association: If the attacker uses 
multiple source IP addresses, then the IP 
addresses association may be invalid. At this time, 
association with attack name or type is still very 
valuable. 
• Time-based association: if the data analyst has 
data of several days, he may implement time-
based association. If the analysts find a peak 
period from the time that the alerts happens, 
which appears at a certain period of time of each 
day, it means that hackers maybe attack at this 
period of time these days.  
2) The Definition of Association Rules 
Definition 5: Let I = (i1, i2, ..., im) ,is a collection of 
items. Task-related data set D is a collection of database 
transactions, where each transaction T is a collection of 
items, and satisfies that T?I. set A is an item set, 
transaction T contains A, if and only if A?T, there exist: 
• The association rules are like implication formula 
A?B, which A?I, B?I, and A?B = ?; 
• Rules A?B  in the transaction set D ,with a 
support degree s, where s is a percentage of D 
containing A?B, that is, the probability P (A?B); 
• Rules A?B in the transaction set D, with a 
confidence degree c, if the ration of contains A to 
D contains B is c, the conditional probability is P 
(B | A). That is:support(A?B)=P(A?B), 
confidence(A?B)=P(B|A) 
The support and confidence are two metrics, 
respectively, reflect the usefulness and certainty of the 
rules. The rules that satisfy the minimum supports 
threshold (min_sup, can be expressed as Smin) and the 
minimum confidence thresholds (min_conf, can be 
expressed as Cmin) at the same time are called strong rules. 
A collection of items called item sets. If it meets the 
minimum support itemset, call it frequent item sets. 
B. Algorithm Idea 
Mining association rules algorithm [8][9] has two main 
steps to go: 
1) To Identify All the Frequent Item Sets.  
Through the user given minimum support to find all 
frequent item sets, that is, the item set which meet the 
support degreer of no less than min_sup. When the 
frequent item sets may have including relationships, to 
identify item sets that are not included in other frequent 
item set, and name it large item sets (Frequent Large Item 
Set). 
2) To Generate Association Rules From the Frequent 
Item Sets.  
With the user given minimum degree of confidence 
(min_con), looking for association rules no less than 
min_con confidence in each maximum frequent set. 
For the extraction of frequent item sets we use the 
Apriori algorithm. The core of it is recursive algorithm 
based on a two-stage frequent set. The basic idea is that: 
firstly, generate candidate frequent item sets Lk +1from 
the smaller frequent item sets Lk So again and again, until 
all the frequent sets are found, and the appear frequency of 
these items set has at least the same value as the 
predefined minimum support degree. And then, to 
generate association rules by the frequent set and these 
rules must meet the minimum support degree and 
minimum confidence degree. 
The core of Apriori algorithm is how to generate all 
the frequent item sets [10], which uses an iterative layer 
by layer approach, and we describe it in pseudo-code as 
follows: 
Input: transaction database D; minimum support 
threshold min_sup. 
Output: the frequent itemsets L in D. 
L1={large 1-itemsets}; 
for(k=2;Lk-1??;k++){ 
Ck =apriori_gen(Lk-1,min_sup); 
//Generate the next candidate itemsets to be mined 
for all transactions tD { 
Ct=subset(Ck,t); 
For all candidates cCt; 
c.count++;} 
Lk={cCk|C.count>=min_sup};} 
return L=?Lk; 
Algorithm calls the function apriori_gen (Lk-1, 
min_sup) in order to generate k candidate sets from K-1 
frequent item sets. It uses the following properties: (1)If X 
is a frequent item sets, then any non-empty subset X are 
frequent item sets; (2) If the X is not a frequent item set, 
then any superset of X are not frequent item sets. Pseudo-
code described as follows: 
for each item set LiLk-1{ 
for each item set LjLk-1{ 
if((Li[1]=Lj[1])&&(Li[2]=Lj[2])&&…&&(Li[k-2]= 
Lj[k-2])&&( Li[k-1]< Lj[k-1])){ 
c= Li join Lj;// Merge to Generating candidate item 
sets 
if has infrequent-subset(c,Lk-1){ 
delete c;// Pruning process 
} 
else insert c to C:} 
} 
}return C; 
275167
we call infrequent_subset (c, L) is to determine 
whether the c is needed to be added to candidate set k .the 
algorithm is as follows: 
for each item sets(k-1) subset s of c 
if(s?Lk-1){ 
return TRUE;} 
return FALSE; 
Due to the high complexity of the classic Apriori 
algorithm ,for n item sets, if n is large, an alerting number 
of candidate item set will be generated when merging, 
then a lot of pruning operations will be needed , and result 
in large memory cost  Therefore, it is necessary to 
optimize the algorithm. Since this raw data is based on the 
host log, therefore, the destination IP address is a fixed IP 
address of the server. Using the Apriori algorithm for IP 
addresses of different users, firstly, the set of logical log 
records are divided into disjoint blocks, consider one 
block once separately and generates all the frequent sets of 
it. Finally, calculate the final degree of support and 
confidence. This algorithm can be highly concurrent 
executed, the corresponding record for each IP address is 
allocated to a processor to generate the frequency set, 
produce the rules, and finally merge all the rules, filtering 
out the valid set of rules. This method greatly improves 
the speed of handling mass data. [11][12] 
C. Construction of Function Modules 
Based on the above algorithm and filtered rules set 
we design the relevant function modules, as shown in 
Fig.1. 
 
1) Alert Information Pre-processing Module 
Different Underlying types of IDS will package set of 
the original alert message and sent it to the alert 
information pre-processing module, and alert information 
pre-processing module will convert different IDS alert 
information to uniform format (AID, TS, AL, SI, TI, 
StartTime, EndTime). The parameters are stated as 
following:  
AID is for the IDS number;TS is for the alert time 
stamp; AL is numbered corresponding to the vulnerability 
of attack type number, using CVE numbers to unify the 
representation of attack type ;SI is for the attack source 
address information, including IP address and port two 
properties, TI is as the target address information, 
including IP address and port two properties; StartTime is 
start time of the attack, is initialized with the value of the 
assignment for of the TS, EndTime is end time of the 
attack, is initialized as the value of the assignment for the 
TS. 
After processing large number of the original alert 
information set, this module will convert the standard 
information to establish the standard pattern data structure, 
and save them into the files, waiting for the alert 
information merge module to process.  
2) Alert Information Merge Modules 
Alert information merge module [13][14] is 
responsible for re-merging the alert information that have 
duplicate relations and concurrent relations into new alert 
information. 
Firstly, the alert information merge module read 
information from the outcome document of pre-processing 
module, and they are classified into different target sub-
block according to the IP attributes of destination address 
information, and then are written into different files with 
IP as file name, respectively. And the following operations 
operate on each file separately. 
The theoretical basis of this step is that the raw data is 
according to host-based alert logs, so the destination IP is 
the server IP, it is a small number. At the same time, due 
to the high complexity of Apriori algorithm, if all the 
information to be handled, the memory overhead is very 
large, we use disjoint sub-blocks to increase the speed of 
mass data processing. Because it is based on host alert 
logs, the distributed intrusion is less, we basically deem it 
as invasion from different hosts. Therefore, we improve 
the efficiency of algorithms at the same time did not 
significantly reduce the accuracy of results. 
Then, we merge each alert log files. On the first ,we 
repeat the merge operation. For the two Alert information 
A1 (AID, TS, AL, SI, TI, Start Time, End Time), A2 
(AID, TS, AL, SI, TI, Start Time, End Time), if (AID, AL, 
SI, TI) has the same value, and the | A1.TS-A2.TS | <?1 
(?1 is a set duplicate threshold value ), then delete the alert 
information A2, and set properties in the A1 as following 
:A1.StartTime = min (A1.StartTime, A2.TS), 
A1.EndTime = max (A1.EndTime, A2.TS).The second 
step is to do concurrent merge operation. For the two Alert 
information A1 (AID, TS, AL, SI, TI, Start Time, End 
Time ),A2(AID, TS, AL, SI, TI, Start Time, End Time ), if 
(AL,SI,TI) has the same value , and | A1.TS-A2.TS | <?2 
(?2 is set concurrency threshold value), then remove the 
warning letter A2, and make A1.StartTime = min 
(A1.StartTime, A2.StartTime), A1.EndTime= max 
(A1.EndTime, A2.EndTime), A1.TS = (A1.StartTime + 
A2.StartTime) / 2. 
The theoretical basis of this step is the previously 
mentioned definition of classification of the alert 
associated form. Since the original alert messages has a 
large number of redundant alert information, which 
reducing the computing efficiency of the model and the 
time is wasted on redundant alert information processing, 
on the other hand, the important attack alert is submerged 
in the redundant alerts . 
3) Alert Information Association Module 
Network intrusion behavior is often a series of attacks, 
or combination attacks, these attacks are not isolated, but 
the performance of the different stages and the previous 
stage is to prepare for a later stage. Therefore, processes 
should be carried on the alert information to make the 
overall analysis. For example, if a hacker is going to attack 
a server, he would first locate the host, and launch 
IPSweep attacks, to determine whether there is such a host 
 
Figure 1.  alarm correlation model based on the automatic adjustment 
276268
(IP); and then launch Sadmind_Ping attacks to see if this 
server has Sadmind loopholes, if yes, he can take 
advantage of this loophole to launch Sadmind_BOF buffer 
overflow attacks to gain Root access. He may also have 
further use of the Root permissions on the server to place 
Trojan horses, leaving the back door and so on. In the 
course of hacker attacks, IDS may generate a series of 
alert at each stage, but it can not know the relationship 
between the alerts, that is to say, attack strategy can not be 
revealed. This module is completed to show that the 
correlation between the warning information, and to point 
out the attackers characteristic sequences. 
This module deals with alert information that has been 
processed by the two modules above, using the Apriori 
mining algorithm. In the process, the alert message 
sequence within each unit time T is deemed as an event, 
and be calculated with AL as the primary key. Different 
from the usual Apriori algorithm, this algorithm divides 
the alert information into several disjoint subsets, with 
destination IP as a unit, mining separately, and then 
associate the correlation rules set to generate the results-
correlation rules set. 
IV. EXPERIMENTAL RESULTS AND ANALYSIS 
In the experiment, we use a laboratory host as the 
target machine which is setup with SNORT intrusion 
detection system, and then using other hosts to launch X-
Scan scanning to it. The SNORT alert log within 40 
minutes received is used as a sample. . Since the alert logs 
are based on the same IP, so we ignore the first step in the 
alert message merge module operation. Total number of 
alert information is 84, after the merge module merging 
redundant information, the number of the generated quasi-
alert information is 30, and then using 300 seconds as the 
event separation time, 9 alert events are produced. For the 
different levels of support and confidence, the generated 
rule sets at last are different. As shown in table I. 
 
Through the numbers in table I, we can see that the 
support degree has great impact on the number of rules 
that generated, .For the samples in this experiment, 
support degree among 0.23 to 0.27 generate the relatively 
stable number of rules, in further experiments, we can 
select the degree of support = 0.25 as the initial support for 
instructions. 
V. EXPERIMENTAL RESULTS AND FUTURE WORK 
In this Paper, we propose an alert correlation model 
based on Self-regulate, aiming at solving the problems in 
the existing alert correlation technology. The model 
introduces the data mining technology into the alert 
correlation, and makes improvements on alert correlation 
technology using Apriori algorithm. By using sub-block 
techniques, we not only adapt to the application of alert 
association and also are able to significantly reduce the 
algorithm complexity with small affect on the accuracy of 
results. 
The essence of alert correlation is to process a large 
number of audit log. The purpose of data mining is to 
identify potential, unknown knowledge from the vast 
amounts of data, so it has great application advantages in 
alert correlation field. How to use the available attack 
mode to adjust the appropriate mining parameters and then 
to select the appropriate number of representative original 
audit data, and how to find a better algorithm for mining, 
these are the Future work. 
 
REFERENCES 
[1] Fayyad U,Piatesky-Shapiro G,Smyth P.The KDD Process for 
Extracting Useful Knowledge Form Volumes of Data 
[J].Communications of the ACM,1996. 
[2] A grawal Retal.Mining association rules between sets of item s in 
large databases[A].In:Proceedings of ACM SIGMOD Conference 
on anagement of Data[C],Washington,DC,May 1993:207-216. 
[3] Rakesh Agrawal,Ramakrishnan Srikant.Fast Algorithm for Mining 
Association Rules[A].Proceedings of 20th Int.Conf[C].Very Large 
Data Bases(VLDB),Jorge B.Bocca,Matthias Jarke and Carlo 
Zaniolo,eds.Morgan Kaufmann Press,1994:487-499. 
[4] Jiawei Han,Jian Pei,Yiwen Yin.Mining Frequent Patterns without 
Candidate Gerneration[A].Proceedings of ACM SIGMOD 
Intl.Conference on Management of Data[C],Weidong Chen,Jeffrey 
Naughton,Philip A.Bernstein eds.ACM Press,2000:1-12. 
[5] A.Savasere,E.Omiecinski,S.Navathe.An Efficient Algorithm for 
Mining Association Rules in Large Databases[A].Proceedings of 
21th Int’1 Conf.Very Large Data Bases[C].San Francisco:Morgan 
Kaufmann,1995.432-444. 
[6] Joog Soo Park,Ming-Syan Chen,Philip S.Yu.An Effective Hash 
Based Algorithm for Mining Association Rules[A].Proceedings of 
ACM SIGMOD International Conference on Management of 
Data[C].Michael J.Carey and Donovan A.Schneider eds.San 
Jose,Califormia,1995,175-186. 
[7] Shi Zhizhong.Knowledge Discovery [M]. Beijing:Tsinghua 
University Press,2003. 
[8] Chen An,Chen Ning,Data Mining Technology and Applicatio [M]. 
Beijing:Science Press,2006. 
[9] Zhu Yuquan ,Sun Zhihui,,I Xiaojun. Incremental Updating 
Algorithm Based on Frequent Pattern Tree for Mining Association 
Rules [J]. Chinese Journal of Computers,2003,26(1):91-96. 
[10] H.Mannila,H.Toivonen,and A.Verkamo.Efficient algorithm for 
discovering association rules[A].AAAI Workshop on Knowledge 
Discovery in Databases[C].1994.181-192. 
[11] Pi Dechang,Qin Xiaolin,Ning Sheng. Mining Association Rule 
Based on Dynamical Pruning [J]. MINI-MICRO 
YSTEMS,2004,2510):1850-1852. 
[12] Zhu Yuquan. Fast Updating Frequent Itemsets [J].Journal of 
Computer Research and Development2003,40(1):94~99. 
[13] Zhou Lijuan. The Development Research on the Spatial Data 
Mining [J]. Computer Engineering and Applications(11):186-188. 
[14] Sun Janxun,Chen Mianyun. Mining Quantitative Association 
Rules with Fuzzy Method [J]. Computer Engineering and 
Applications,2003. 
[15] Wang jianping Development and Research of Data Mining 
Technology[J] JOURNAL OF INFORMATION 2007,06 
Li Yang is with Anyang Institute of Technology, 
AnYang, China. Lecturer, master of engineering, Research 
field: Information Security.  
Dong Xinfa is with Yellow River Conservancy 
Technical Institute Kaifeng,475000,China, Master Degree 
in Engineering. 
TABLE  I   TEST  RESULT 
D N NofQ 
NofR 
C 
=0.5 C =0.6 C =0.7 
0.2 84 30 1897 1897 1897 
0.23 84 30 43 43 43 
0.25 84 30 43 43 43 
0.27 84 30 43 43 43 
0.3 84 30 2 2 2 
D:Degree of support    N:Number of samples alarm information    NofQ:The number of quasi-alarm 
information  C:Confidence  NofR:The number of generated rules 
277369
