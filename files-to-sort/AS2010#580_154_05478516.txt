  
 
Intelligent Computational Argumentation for Evaluating Performance Scores in 
Multi-Criteria Decision Making 
 
 
Xiaoqing (Frank) Liu, Rubal Wanchoo, Ravi Santosh Arvapally 
Department of Computer Science, Missouri University of Science and Technology, Rolla, Mo-65401, USA 
 { fliu, rwtyf, rsamb6 }@mst.edu 
 
 
ABSTRACT 
 
Multi-Criteria decision making (MCDM), is a discipline 
aimed at assisting multiple stakeholders in contemplating 
a decision paradigm in an uncertain environment. The 
decision analysis to be performed involves numerous 
alternative positions assessed under varied criterion. A 
performance score is assigned for each alternative in 
terms of every criterion and it represents satisfaction of 
the criteria by that alternative. In real applications, 
performance scores are sometimes hard to determine and 
they are often subjective. We have developed an 
intelligent computational argumentation approach for 
dealing with the problem of uncertainty in resolving the 
subjective scores. In this approach, an argumentation tree 
is developed to assess a performance score for an 
alternative under a criterion. The argumentation takes 
into consideration the strength of an argument i.e. the 
degree of support or attack for that argument, and 
priorities of stake-holders. A set of fuzzy argumentation 
rules in a fuzzy association matrix is used to assess the 
indirect impact of an argument on alternatives. 
Aggregation of strengths of supporting and attacking; 
direct and indirect arguments represents a performance 
score of an alternative for a criterion in the decision 
making domain. A decision making case study for 
developing a mine detection simulator is used to illustrate 
the method.  
 
 
KEYWORDS: Computational Argumentation, Multi-
Criteria Decision Making, Priority based Reassessment, 
Conflict Resolution, Performance Scores. 
 
 
1.  INTRODUCTION 
 
Multi-Criteria decision making techniques and models 
assist in the process of searching for decisions which best 
satisfy a magnitude of conflicting objectives in an 
absolute or an uncertain environment. Criterion outcomes 
for decision alternatives are represented through a 
performance chart, also called a decision matrix. The 
decision matrix contains performance scores of different 
alternatives, which represent their satisfactions for 
different criteria. The quality of decision is directly 
related to that of the performance scores. Performance 
scores are sometimes hard to determine. There is a wide 
range of different opinions about their values from 
different stakeholders and they might become 
controversial in these situations.  They need an in depth 
analysis of different views and concerns of the 
stakeholders. As an example, consider a decision problem 
in which we have three car models from which we need to 
find the most favorable model in terms of cost, mileage 
and looks. While it is easy to find performance scores of a 
car model for cost and mileage, the quantitative 
evaluation of car models under the third criteria looks is 
difficult since different stakeholders may have different 
views about the looks of a car. A consensus may not be 
easily achieved in this case and a more rigorous approach 
is needed to find these objective scores.  
 
To deal with the issue of uncertainty in the evaluation of 
performance scores, many methods make use of linguistic 
variables in fuzzy logic [9]. Several fuzzy logic based 
multi-criteria decision making methods are developed 
using linguistic variables for representing performance 
scores. They either aid in finding the most favorable 
alternative from among a set of various alternatives as 
illustrated in [4] [16] or they determine the alternative 
with the nearest match to an ideal solution [17]. However, 
these methods do not resolve the issue; that different 
stakeholders have different opinions about a performance 
score and do not help stakeholders to give objective 
evaluation of performance scores. Actually, many scores 
given by stakeholders may not be justifiable. This is why 
stakeholders need to provide rationales for their 
performance scores. In this paper, we propose to use 
intelligent argumentation to capture rationale of 
performance scores from stakeholders. 
 
Intelligent Computational Argumentation is an effective 
technique for quantifying and measuring subjective 
factors involved in multi-criteria decision making because 
143978-1-4244-6622-1/10/$26.00 ©2010 IEEE
  
 
it stresses the need for reaching conclusions through 
logical reasoning. Argumentation based decision making 
allows stakeholders to provide arguments and 
justifications as a part of decision process, which in turn 
increases the speed of agreements being reached. 
Arguments are intended to support or attack other 
arguments or decision alternatives. Indeed, an 
argumentation based approach for collaborative decision 
making has the advantage of letting a stakeholder specify 
his views and beliefs along with reasons supporting the 
same. These reasons may lead their receivers to change 
their preferences. Consequently, an agreement may be 
more easily reached with such approaches, when in other 
approaches (where stakeholder’s preferences are fixed) 
consensus may be more difficult to achieve.  
 
This paper is aimed at evaluating the subjective 
performance scores in an MCDM framework using 
intelligent computational argumentation. The paper is 
organized as follows: Section 2 presents a review of 
related work. Section 3 gives a brief overview of our 
previous research. Section 4 explains the technique 
involved in determining the performance scores through 
argumentation. Section 5 demonstrates a case study in 
which we make use of the proposed technique to select a 
platform for the development of mine detection training 
software.   
 
2. RELATED WORK 
 
For the purpose of this research, two paradigms had to be 
reviewed. Firstly, the existing techniques for the 
evaluation of subjective scores in Multi-Criteria decision 
making had to be studied. Secondly, various 
argumentation approaches for decision making developed 
so far had to be reviewed. The following sections provide 
some insight into the work already done in this regard. 
 
2.1. Current State-Of-The-Art Techniques For        
       Evaluating Performance Scores In MCDM 
 
Multi-Criteria decision making paradigm has been 
supported by many mathematical models in the past. 
These models evaluate performance scores for 
alternatives with respect to different criterion. Tsaur, 
Chang and Yen [16] use the fuzzy MCDM framework for 
evaluating airline service quality. Their implementation 
integrates the use of Analytic Hierarchy process (AHP) 
for evaluating the weights of criteria and fuzzy theory for 
finding out the performance scores. Wang and Lee [17] 
develop a fuzzy TOPSIS (Technique for Order preference 
by Similarity to Ideal Situation) approach based on 
subjective and Objective weights. They extend the 
Shannon’s entropy method to measure weights in 
MCDM. The Shannon entropy is a measure of uncertainty 
in information formulated in terms of probability theory. 
Chen, Tzeng and Ding [4] also make use of fuzzy MCDM 
approach to ‘Select a service provider’. They use the pair 
wise comparison technique for assessing the criteria, and 
a set of fuzzy linguistic terms for calculating the 
favorability of the alternatives. 
 
2.2. Current State-Of-The-Art Techniques For  
       Aiding Decision Making Using Arguments  
 
Philosopher Stephen Toulmin developed a very influential 
model for argumentation that has guided the development 
of software tools and systems intended to support the 
detection and resolution of conflicts in many knowledge 
domains. Amgoud and Prade [1] extended the 
argumentation framework to define mathematical models 
for epistemic and practical arguments. gIBIS (graphical 
IBIS), represents the design dialog as a graph [5]. While 
being capable of representing issues, positions, and 
arguments, gIBIS did not support representation of goals 
(requirements) and outcomes. IBE [8] extended gIBIS by 
integrating a document editor. HERMES [14] is a system 
that aids decision makers to reach a decision by 
structuring arguments and evidences together in a 
hierarchy. The evidences are also arguments that are 
targeted to particular arguments which are in conflict or 
have contrasting views. The system assigns weights to the 
arguments and then evaluates those weights to find the 
closest alternative to an ideal solution. HERMES is a 
collaborative system which allows a real time decision 
making environment for participation among multiple 
stakeholders.    
 
3. INTELLIGENT COMPUTATIONAL     
    ARGUMENTATION SYSTEM  
 
We have previously developed an intelligent 
computational argumentation system that allows 
stakeholders to determine the concerning issue, enumerate 
the available alternatives, and specify the arguments for 
those alternatives. The issue signifies a point, matter, or 
dispute, the decision of which is of special importance to 
the stakeholders. Alternative positions represent possible 
choices for dealing with the issue. An argument 
symbolizes a statement, reason, or fact for or against 
another argument or an alternative. The decision to be 
made can also be referred to as ‘Strategic Decision’. 
                          
In the following sub-sections, we provide a brief 
description of the underlined argumentation system and 
fuzzy intelligence techniques applied on it. 
 
 
 
 
144
  
 
3.1. Background 
 
We have developed an intelligent collaborative 
engineering design system based on argumentation 
[11].The design environment supports client-server 
architecture. On the client side, the system provides user 
interfaces for solid modeling, annotation, whiteboards for 
design alternatives, argumentation based conflict 
resolution, and a chat feature for real time information 
exchange. On the server side, it manages client 
communication, concurrent access to design objects, and 
argumentation network. 
  
The argumentation structure is organized as a weighted 
directed graph also called a dialog graph [5], as shown in 
figure 1.  The node denoted by circle is a Position or an 
Alternative and the nodes denoted by rectangles are 
Arguments. Arrows depict relationship either between two 
argument nodes or between an argument node and 
position. The relationship can be either an Attack or a 
Support. The strength of an argument is realized by the 
weight assigned to it. This weight symbolizes the degree 
of attack or support to an argument or position. The 
weight value is real number between -1 and 1. A positive 
weight value implies support and a negative weight value 
expresses attack. A weight of zero exhibits indecision. 
For the purpose of implementing the methodology in our 
current system, we let the stakeholders decide the score of 
an argument by discussions and reaching a general 
agreement. 
 
 
Figure 1. Position Dialog Graph 
 
Strengths of arguments are viewed as a fuzzy set and are 
represented using a set of five linguistic labels. We use 
Strong Support, Medium Support, Indecisive, Medium 
Attack and Strong Attack as our linguistic labels. 
 
A fuzzy associative matrix is developed and used 
alongside a fuzzy inference engine, which deal with 
reducing arguments to a single level and incorporating 
priority based reassessment for weights of an argument. 
The two approaches have been discussed in the following 
sections. 
 
3.2. Argumentation Reduction Using Fuzzy  
       Inference Engine   
 
The structure of the argumentation tree may become too 
large and complex to be easily understood and dealt with. 
A fuzzy inference engine [11] is therefore developed to 
deal with this problem. It comprises of a set of 25 fuzzy 
rules which deal with the task of reducing the arguments 
to a single level. These rules assess the impacts of indirect 
arguments on alternative positions using fuzzy logic. The 
argument reduction follows a set of four general heuristic 
rules: 
  
Argument Reduction Rule 1: If argument B supports 
argument A and argument A supports position P, then 
argument B supports position P.  
 
Argument Reduction Rule 2: If argument B   attacks 
argument A and argument A supports position P, then 
argument B attacks position P. 
 
Argument Reduction Rule 3: If argument B supports 
argument A and argument A attacks position P, then 
argument B attacks position P. 
 
Argument Reduction Rule 4: If argument B   attacks 
argument A and argument A attacks position P, then 
argument B supports position P. 
 
Based on the above set of heuristic rules, twenty-five 
fuzzy argumentation inference rules are generated. These 
rules are specified in a matrix called as fuzzy association 
memory matrix (FAM); which takes into account the five 
linguistic variables already defined. The fuzzy inference 
engine uses the fuzzy association matrix and takes two 
inputs to produce one output. One of the inputs is the 
strength of argument to be reduced and the other input is 
the strength of argument right above it. The output is the 
reduced strength of the argument. Details of the Fuzzy 
Association Matrix are provided in [11] and are left to the 
reader for further understanding. 
 
Figure 2 shows the argumentation tree in its initial form 
as put in by the stakeholders and its reduced form after 
applying the fuzzy association rules. The labels with 
prefixes ‘O’ in the figure represent different stakeholders. 
The detailed process for argumentation reduction via the 
fuzzy inference engine is explained in [11]. 
145
  
 
 
 
 
Figure 2. Argumentation Reduction 
 
3.3. Inclusion Of Priority Of Stakeholder In     
       Intelligent Argumentation  
 
Priority of a stakeholder represents an authoritative rating 
that establishes precedence of a stakeholder over other 
stakeholders. Every stakeholder is assigned a priority [10] 
which is nothing but a value between 0 and 1. The higher 
the value of the priority for the stakeholder, the higher is 
his importance in the argumentation system. Priority is 
incorporated into the decision making either through 
weighted summation method or through priority based 
reassessment of argument’s strength using fuzzy logic 
[10]. We allow the priority of a stakeholder to be decided 
by the stakeholders themselves, same way as the weights 
of arguments are decided. 
 
3.3.1. Weighted Summation 
After reducing the argumentation tree to a single level 
using fuzzy association matrix as explained in [11], the 
favorability factors of an alternative are calculated using 
the weighted sum of strengths of arguments and priority 
as follows: 
Favorability =  



m
i
ii wp
1
 
In the equation above ‘wi’ is the strength of an argument 
at the highest level achieved after reduction and ‘pi’ is the 
priority of the stakeholder who raises the argument. 
 
3.3.2. Reassessment Of Argument’s Strength Based 
On Stakeholder’s Priority 
Reassessment of an argument’s weight using priority of a 
stakeholder follows a set of priority reassessment 
heuristic rules [10]: 
 
General Priority Re-assessment Heuristic Rule 1: If 
the stakeholder specifying an argument A has a higher 
priority, the strength of the argument should be higher 
than it is. 
 
General Priority Re-assessment Heuristic Rule 2: If 
the stakeholder specifying an argument A has a lower 
priority, the strength of the argument should be lower than 
it is. 
 
A set of 3 linguistic variables are used to represent the 
priorities of a stakeholder. The linguistic variables used 
are high (H), medium (M), low (L) [10]. These 3 
linguistic variables are combined with 5 linguistic 
variables stated in figure 2 to produce a set of 15 new 
heuristic rules. The detailed process for reassessment of 
arguments weight using priority is given in [10]. 
 
4.  ARGUMENTATION BASED  
     PERFORMANCE SCORE   
     EVALUATION IN MULTI 
     CRITERIA DECISION MAKING  
 
Argumentation can be exclusively used for evaluating 
those performance scores in a multi criteria decision 
framework for which the objective interpretation is 
debatable among various stakeholders. These scores are 
controversial in nature and require deep analysis and 
rigorous discussions before they can be developed into a 
quantifiable value. Argumentation between stakeholders 
provides a logical way to figure out these subjective 
performance scores and the scores thus obtained represent 
a consensus.  
 
4.1. Argumentation Framework For Evaluating  
      Performance Scores 
 
The argumentation framework for multi criteria decision 
making involves multiple stakeholders who establish an 
issue to be dealt with. Issue here symbolizes a point, the 
decision of which determines a matter. The issue serves as 
a decision problem for which various considerations are 
laid. The Stakeholders decide the criteria set upon which 
the alternatives are to be analyzed. The alternative 
positions are evaluated against the entire criteria set and 
their respective performance scores are given in the 
decision matrix. The argumentation framework for 
evaluating performance scores is illustrated in figure 3. 
The rectangle boxes describe the objects involved in the 
decision making framework whereas the tilted rectangle 
boxes show the input and output associated with the 
system. The diamond shaped box shows the possible 
branching condition and the arrows exhibit the possible 
transition between various objects.  
 
146
  
 
 
 
Figure 3. The Framework 
 
As can be deduced from the figure, we can make use of 
the argumentation system whenever the stakeholders 
cannot reach a consensus in deciding the performance 
scores. Figure 3 shows the criteria specific argumentation 
that takes place once the need for deriving performance 
scores through argumentation arises. Every alternative is 
scored against criteria in the decision matrix. The 
arguments are entered in to the system by the stakeholders 
target a specific criterion for an alternative. The 
argumentation input itself consists of four inputs i.e. the 
name of the stake holder, the argument specification, the 
weight of the argument and the priority of the stakeholder. 
The name of the stake holder specifies the identity of the 
person specifying the argument. The argument is a 
sentence in English language which portrays the views 
and opinions of the stakeholder. The weight of the 
argument represents the degree of attack or support of that 
argument for that criterion. 
 
 
 
Figure 4. Argumentation Input 
 
Figure 4 demonstrates how the addition of an argument is 
handled in our present system. The input for ‘Group 
Name’ and ‘User Name’ correspond to a specific user and 
his group. The rest of the entries i.e. priority and weight 
are the same as discussed previously. The terms 
‘Alternative’ and ‘Position’ are synonymous in the 
system. 
 
4.2. Multi-Criteria Argumentation Tree  
       Structure 
 
Table 1 shows a sample decision matrix in which various 
alternatives are evaluated against different criterion. The 
scores specified in the decision matrix can be either 
‘Easily Determined’ or ‘Controversial’. Figure 5 shows 
argumentation tree that will be developed for evaluation 
of subjective scores for the decision matrix in Table 1. 
 
Table 1. Sample Decision Matrix 
 
 
 
Every criterion in Table 1 has an alternative as a child 
node. A detailed argumentation tree is developed for this 
alternative. In this way, the arguments are stated targeting 
this very criterion. This pin-points the arguments being 
stated to the highlighted matter and can extract the finer 
details of the concerning issue. 
 
147
  
 
 
 
Figure 5. Sample Argumentation Tree 
 
Using the above sample tree approach, we can evaluate 
the performance score of every alternative using the 
techniques of fuzzy association matrix to derive the 
impact of indirect arguments and aggregating the scores 
derived from the argumentation sub-tree with the weight 
of the criteria to derive the performance scores in the 
decision matrix.  
 
5. CASE STUDY 
 
As a part of our investigation, we took a project which 
was being implemented at the Mechanical and Aerospace 
Engineering Department of Missouri University of 
Science and Technology, Rolla. The project served as an 
ideal platform for us to test our proposed technique 
because the issue involved a decision problem which was 
under review of concerned research team. The issue had 
certain evaluation criteria which were laid down by the 
team members themselves. Every criterion in the criterion 
set had a favorability factor or weight which represented 
the role that criteria played in deciding the winning 
alternative. We decided to use Analytical Hierarchy 
Process (AHP) for prioritizing the criteria due to its wide 
use and acceptability. The alternatives to be evaluated 
were also proposed by the team members or more so; the 
stakeholders. The nature of the issue involved selecting 
the most favorable alternative from the set of underlined 
alternatives. The alternative positions were first evaluated 
on the specified criteria. Each alternative was given a 
quantified value which indicated its degree of satisfaction 
for the given criterion. This score was given by 
stakeholders after rigorous discussions and reviews. The 
values were then put in the decision matrix and the 
favorability of all the alternatives was calculated using the 
sum of products of the weights of criteria and the score of 
an alternative with respect to that criteria. The alternative 
with the highest favorability score was selected. The 
following sections describe the steps taken to resolve the 
issue for this research project.  
 
5.1. Description 
 
The artifacts presented at the time of decision making 
were; the issue, the criterion set, a set of alternatives and 
concerned stakeholders. The subsections describe how 
and why the artifacts were important for decision making. 
 
5.1.1. The Issue 
The issue deals with selecting a suitable software platform 
for developing a Mine Detection Training Software. The 
development of mine detection training tool is a research 
project supported by the US army. The project deals with 
simulating the real world conditions while detecting 
mines; into a system which could be used for training 
purposes. The development of this kind of a simulated 
tool has a lot of advantage over the previously developed 
systems. The systems already present for mine detection 
and training purposes are very basic and do not have 
much flexibility in terms of customization. The simulated 
environment for such an environment will require an 
efficient software tool which can display the performance 
of a trainee on a real time basis. The system will also 
support some very important functionalities like 
recognizing different intensities of sound generation on 
identification of different kinds of mines, a control panel 
for customizing the simulated mine field and generation 
of reports showing quantitative summary performance in 
terms of coverage rate statistics, covered area statistics 
and mine target location.   
   
5.1.2. The Stakeholders 
The stakeholders involved in the decision process are two 
students from the ‘Mechanical and Aerospace 
Engineering department’ who are responsible for 
developing the sound detection algorithm. Another 
stakeholder is a ‘Computer Science’ student responsible 
for developing the software tool. This software tool will 
help the trainer evaluate a trainee’s performance with 
respect to functionalities defined above. Two professors, 
one from Computer Science and another from Mechanical 
Engineering department act as stakeholders responsible 
148
  
 
for overlooking the overall software development process 
and playing a crucial role in making important decisions. 
 
5.1.3. The Criterion Set 
As stated earlier, criterion is the attribute for which 
favorability of an alternative is calculated. The criterion 
set defined for this case study comprises of Reusability, 
Meeting Operational Requirements, and Meeting Project 
Deadline. By reusability, we mean, the amount of reuse of 
different functionalities that can be achieved from the 
previously developed system on Mine detection training 
tool. Meeting operational requirements implies how 
effectively a desired operational capability can be 
satisfied by an alternative. For example, some alternative 
might lack a certain operational capability like database 
support whereas another may support it with enhanced 
features. Meeting project deadline stresses on the fact, 
whether the project requirements can be satisfactorily 
achieved within the stipulated deadline which in our case 
was around one year. 
 
5.1.4. The Alternatives 
To resolve the concerned issue, the stakeholders decided 
to choose one software platform for developing the mine 
detection training tool among the three stated alternatives. 
Adobe Director, Adobe Flash, Open GL were chosen as 
the three possible alternatives along with some 
justifications. Adobe Flash was chosen as one of the 
alternatives because; the stakeholders already had a 
previous developed system for mine detection developed 
using Adobe Flash. 
 
 
 
Figure 6. Mine Detection System Along With Three 
Alternatives 
One of the considerations involved here was to enhance 
this system rather than develop a new system from 
scratch. Same reason applied to choosing Adobe Director 
as one of the other alternatives. Open GL was picked up 
as one of the three alternatives in the case when a new 
development had to be started. Open GL is an advanced 
software development platform and it could have served 
as a good platform for the mine detection training system.   
 
Figure 6 summarizes the project and its three alternatives 
positions available. 
 
5.2. Prioritizing The Criteria 
 
For an effective decision making, we had to weigh the 
criteria according to their importance in the decision 
making process. For this, we choose Analytic Hierarchy 
process because of its effectiveness in performing pair 
wise comparison of elements .Table 2 shows the ranking 
table used for comparing the two criteria.  
 
Table 2. Criteria Comparison Table For AHP 
 
Value 
aij 
Comparison Description 
1 Criteria i and j are of equal importance 
3 Criteria i is weakly more important than j 
5 Criteria i is strongly more important than j 
7 Criteria i is very strongly more important than j 
9 Criteria i is absolutely more important than j 
 
 
Table 3. Comparison Values For Prioritizing 
Different Criteria 
 
 Reusability 
Meeting 
Operational 
Requirements 
Meeting 
project 
Deadline 
Reusability 1 1/5 3 
Meeting 
Operational 
Requirements 
5 1 7 
Meeting Project 
Deadline 1/3 1/7 1 
 
 
149
  
 
Table 4. Normalized Criteria Comparison 
Table In AHP 
 
 Reusability 
Meeting 
Operational 
Requirements 
Meeting 
project 
Deadline 
Reusability 0.157 0.148 0.272 
Meeting 
Operational 
Requirements 
0.789 0.744 0.636 
Meeting 
Project 
Deadline 
0.052 0.106 0.090 
 
Table 3 and Table 4 show the weight values of the three 
criterions as compared to each other using the AHP 
process. These weights have been decided by the 
stakeholders after discussions among themselves. 
Average weights can be derived from Table 4 as follows:   
Reusability- 0.193,  
Meeting Operational Requirements- 0.724 
Meeting Project Deadline- 0.083 
These weights represent the priority of each criterion on a 
scale of 0 to 1. 
 
5.3. Argumentation Tree 
 
We develop argumentation tree for each and every 
alternative separately. The arguments are stated by stake 
holders and assembled under the alternative but they 
target a specific criterion. These arguments can either be 
supporting or attacking each other or their respective 
alternative nodes. We present three figures, where each 
figure represents the argumentation hierarchy for one 
alternative. Rectangular boxes represent the alternatives 
with the name of the alternative under it. Ovals represent 
the criteria with their description. The arguments are 
specified by labels ‘A’, ‘B’, ‘C’ for alternative “Adobe 
flash”, “Adobe Director” and “Open GL” respectively. 
Along with the labels, the arguments also have indexes 
associated with them. Beneath the labels are two boxes. 
The box on left shows the weight of the argument 
whereas the box on right shows the priority of the 
stakeholder who specifies the argument. 
 
Once the argument has been specified, the user enters its 
weight. We first reassess the weights of the arguments 
using priority reassessment discussed in [10].Then using 
the techniques specified in [11], we reduce the arguments 
to a single level. Finally, the weighted summation of the 
arguments with the criteria weights helps us evaluate the 
final weights for the decision matrix. It is important to 
note here that, the aggregation method used for 
calculating the favorability is a weighted summation.  
 
The three argumentation hierarchies for the three 
alternatives are presented in the Figures 7, 8, and 9. The 
diagrams contain arguments, their weights and the 
stakeholder’s priorities. 
 
 
 
Figure 7. Argumentation Tree For Adobe Flash 
 
 
Figure 8. Argumentation Tree For Adobe Director 
150
  
 
 
 
Figure 9. Argumentation Tree For Open GL 
 
A1-The current system in flash does not have the 
functionality of dynamic allocation of particles like mine 
or clutter. It places them randomly.  
A1.1-That is not of much importance because it still gives 
a new position to mine and clutter particles. 
A2-Current system in flash has faster response time as 
compared to system in Adobe Director. 
A3-The current system doesn’t satisfy many of the 
features required for the new system like database. 
A4-Adobe Flash cannot communicate with database.   
A4.1-Flash doesn’t support database but database support 
is very important and critical. 
A4.1.1-The system should be able to generate evaluation 
reports for trainee based on previous records stored in the 
database. 
A5-Flash doesn’t create sound clips. 
A5.1-We don’t need sound creating features as the system 
has to generate sound. We can play externally recorded 
sound files using Adobe Flash 
A6-Flash can provide good visual effects as compared to 
Adobe Director 
A7-The developer has good knowledge in development 
using Flash so the system can be developed quickly 
B1-We could reuse the system already developed for 
sound generation, as it is developed using Adobe 
Audition for analysis which is somehow related to Adobe 
Director 
B1.1-The current system is better synthesized in terms of 
sound production and the sound produced is also 
instantaneous rather than discrete 
B1.2- That current system has certain performance issues 
like slow response time 
B1.3- The current system in Adobe Director has the 
feature of producing dynamic coloring scheme on 
approaching a mine. This kind of scheme is highly 
preferable and is not present in Adobe Flash system 
B2- Adobe Director can provide more functionality as 
compared to the current flash system. E.g. Multiple 
sounds while detecting mines.  
B2.1-Adobe Director can provide better visual effects as 
compared to flash e.g. in case of GUI’s. 
B2.2- A modified version of the current system in flash 
can also provide the same functionality 
B2.2.1- We cannot integrate code developed in other 
platforms with Flash, but Flash can be integrated in 
Adobe Director 
B3-The interface provided by flash is not professional 
enough. It is too simple and straight forward for doing 
more things in future.   
B4- Easily available plug-ins can help integrate the tracking 
system developed in C# with Adobe Director. 
B4.1-Code developed in Open GL/AL can also be 
integrated using Adobe Director using suitable stubs.   
B5- A new sound recognition algorithm is being 
developed in Adobe Audition which can be integrated 
with Adobe Director but not with Open GL or Flash 
(Evidence supported) 
B6-If the current system is reused; the project deadline 
can be met easily. 
B7-The developer has very little experience in 
development using Adobe Director. 
B7.1-The developer can take help from the already 
developed system in Adobe Director.  
C1-The tracking software already developed is coded in 
C#/NX5. We could reuse that and develop our system in 
Open GL/AL 
C1.1-Open GL has C# libraries which can be used to 
develop the system 
C2-Because the platform used is for high end application 
development, it can provide good GUI and database 
support 
C2.1-Open GL/AL can help us generate dynamic surfaces 
for mine detection and training which the original system 
in flash does not have. 
C4-Open GL does not support connectivity with Adobe 
Audition. Adobe Audition is required for creating sound 
recognition algorithm 
C3-Open GL does not support connectivity with Adobe 
Audition. Adobe Audition is required for creating sound 
recognition algorithm 
C4-The time taken for developing the project using open 
GL will be comparatively more as the whole system 
would have to be developed from scratch. 
C4.1-If Open GL has support for C# libraries, and then 
the system could be developed faster as developer is quite 
familiar with programming languages like C#. 
151
  
 
C4.2-Open GL has excellent documentation that could 
help the developer learn the platform with ease. 
C4.3-Developer has very little experience in working with 
Open GL platform. 
 
For our case study, alternative B i.e. Adobe Director was 
the most favorable alternative amongst all the three. It 
catered to the reusability criteria quite well and aimed at 
meeting most of the desired operational requirements for 
the system. 
 
 6. CONCLUSION & FUTURE WORK 
 
The main contribution of this paper is to develop an 
approach for evaluating performance scores in Multi-
Criteria decision making using an intelligent 
computational argumentation network. The evaluation 
process requires us to identify performance scores in 
multi criteria decision making which are not obtained 
objectively and quantify the same by providing a strong 
rationale. In this way, deeper analysis can be achieved in 
reducing the uncertainty problem involved in Multi 
Criteria decision paradigm. As a part of our future work, 
we plan on conducting a large scale empirical analysis of 
the argumentation system to validate its effectiveness. 
 
 
REFERENCES 
 
[1] L. P. Amgoud. "Using Arguments for making and explaining 
decisions". Artificial Intelligence 173 , 413-436, (2009) 
[2] A. Bochman, "Collective Argumentation," Proceedings of 
the Workshop on Non-Monotonic Reasoning, (2002) 
[3] G. R. Buyukozkan."Evaluation of software development 
projects using a fuzzy multi-criteria decision approach". 
Mathematics and Computers in Simualtion 77 , 464-475, (2008) 
[4] M. T. Chen. "Fuzzy MCDM Approach to Select Service 
Provider". The IEEE International Conference on Fuzzy, (2003)  
[5] J. Conklin, and M. Begeman. “gIBIS: A Hypertext Tool for 
Exploratory Policy Discussion,” Transactions on Office 
Information Systems, 6(4): 303– 331, (1988) 
[6] B. P. Duarte. "Developing a projects evaluation system 
based on multiple attribute value theroy". Computer & 
Operations Research 33 , 1488-1504, (2006) 
[7] E. G. Forman. "The Analytic Hierarchy Process- An 
Exposition". OR CHRONICLE , (1999) 
[8] M. Lease, and J. L. Lively. “Using an Issue-Based Hypertext 
System to Capture Software Life-Cycle Process,” Hypermedia, 
2(1), pp. 34 – 45, (1990) 
[9] Peide Liu. "Evaluation Model of Customer Satisfaction of 
B2CE Commerce Based on Combination of Linguistic Variables 
and Fuzzy Triangular Numbers". Eight ACIS International 
Conference on Software Engineering, Artificial Intelligence, 
Networking and Parallel Distributed Computing, (pp 450-454), 
(2007)     
[10] X. F. Liu. "Management of an Intelligent Argumentation 
Network for a Web-Based Collaborative Engineering Design 
Environment". Proceedings of the 2007 IEEE International 
Symposium on Collaborative Technologies and Systems,(CTS 
2007), Orlando, Florida , (May 21-25, 2007) 
[11] X. F. Liu. "An Internet Based Intelligent Argumentation 
System for Collaborative Engineering Design". Proceedings of 
the 2006 IEEE International Symposium on Collaborative 
Technologies and Systems (pp. 318-325). Las Vegas, Nevada, 
(2006) 
[12] T. M. "A subjective assessment of alternative mission 
architectures for the human exploration of Mars at NASA using 
multicriteria decision making". Computer and Operations 
Research , 1147-1164, (June 2004) 
[13] A. N.  Monireh. "Fuzzy Decision Making based on 
Relationship Analysis between Criteria". Annual Meeting of the 
North American Fuzzy Information Processing Society , (2005) 
[14] N. Papadias. "HERMES: Supporting Argumentative 
Discourse in Multi Agent Decision Making". Proceedings of the 
15th National Conference on Artifical Intelligence (AAAI-98) 
(pp. 827-832). Madison, WI: AAAI/MIT Press,  (1998a) 
[15] E. B. Triantaphyllou. "The Impact of Aggregating Benefit 
and Cost Criteria in Four MCDA Methods". IEEE Transactions 
on Engineering Management, Vol 52, No 2 , (May 2005) 
[16] S. H. Tsaur. "The Evaluation of airline service quality by 
fuzzy MCDM". Tourism Management , 107-115, (2002) 
[17] T. D. Wang. "Developing a fuzzy TOPSIS approach based 
on subjective weights and objective weights". Expert Systems 
with Applications , 8980-8985, (2009) 
[18] L. A. Zadeh. "Fuzzy Sets". Information and Control 8 , 
338-353, (1965) 
 
152
