DEFECT ASSOCIATION AND COMPLEXITY PREDICTION BY MINING 
ASSOCIATION AND CLUSTERING RULES 
                                                      
Abstract?Number of defects remaining in a system 
provides an insight into the quality of the system. Software 
defect prediction focuses on classifying the modules of a 
system into fault prone and non-fault prone modules. This 
paper focuses on predicting the fault prone modules as well 
as identifying the types of defects that occur in the fault 
prone modules. Software defect prediction is combined with 
association rule mining to determine the associations that 
occur among the detected defects and the effort required for 
isolating and correcting these defects. Clustering rules are 
used to classify the defects into groups indicating their 
complexity: SIMPLE, MODERATE and COMPLEX. 
Moreover the defects are used to predict the effect on the 
project schedules and the nature of risk concerning the 
completion of such projects. 
Keywords-Defect Associations, Clustering, Defect
Correction Effort, Defect Classification
I.   INTRODUCTION 
Software defect prediction classifies system modules 
into fault prone and non-fault prone thereby enabling the 
users to identify the modules which are infected with 
defects. This project work deals with the process of 
identifying the fault prone modules, detecting the defects, 
identifying the associations among them, predicting the 
effort required for correcting these defects, grouping the 
defects into clusters and classifying projects based on the 
defects. This helps the user to determine the defects 
remaining in a system, the association among them and 
the effort required for correcting these defects. The defect 
association helps in identifying maximum number of 
defects occurring with a given defect and helps testers to 
perform specific testing by enabling them to search for 
specific defects based on the association rules. Defect 
associations help developers to analyze the reason why 
certain defects occur in association with each other and 
defect correction effort prediction provides an estimate of 
the probable amount of time taken for correcting the 
defects. 
The process of grouping a set of objects into classes of 
similar objects is called clustering. By clustering one can 
identify dense and sparse regions and overall distribution 
patterns. Clustering technique categorizes the defects into 
groups based on their complexity. The defect correction 
effort is used as the criterion for classifying the defects 
thereby providing the project managers with a general 
idea about the nature of complexity of defects. Three 
general categories are defined for grouping defects: 
SIMPLE, MODERATE and COMPLEX. This clustering 
technique helps the project managers to understand about 
the nature of defects and allocate resources accordingly. 
Moreover the occurrence of defects in a project is used to 
determine the risk of the project overshooting its schedule 
by using a weighted analysis method.  
II. MINING METHODS 
A. Association 
Classifying the modules as fault prone and non-fault 
prone is a renowned software prediction method. This 
method of classification is based on a classification model 
derived from previous development methods [1]. The 
accuracy of these classifiers is based on four possible 
results: If a module is fp and classified accordingly, then 
it is True Positive (TP); if it is wrongly classified as nfp, 
then it is False Negative (FN). Similarly if a module is nfp 
and classified accordingly, then it is True Negative (TN); 
if it is wrongly classified as fp, then it is False Positive 
(FP). The defect prediction accuracy can be determined 
from these four figures [2]. Defect prediction method 
should determine maximum number of defect modules 
without raising false alarms. True Positive Rate and False 
Positive Rate are used to evaluate defect prediction 
classifiers.   Fig. 1 describes the overall architecture 
diagram of the system.  
1) LARGE ITEMSET GENERATION 
The defects are divided into their various constituent 
types [3].The effort required for isolating and correcting 
these defects is calculated in hours. 
R.KARTHIK 
School of Information Technology & 
Engineering
VIT University Vellore-632014 India
karthik_jkr@yahoo.com
N.MANIKANDAN 
School of Information Technology & 
Engineering
VIT University Vellore-632014 India
manikandan.n@vit.ac.in
V7-569978-1-4244-6349-7/10/$26.00 c©2010 IEEE
  
                                                                                                    
  
                     
                                                        Figure1. Architecture       
Defect Prediction 
System 
Obtain defect data set Obtain defect isolation and 
correction effort data set 
Obtain transactions from data set 
Obtain training and defect 
data set 
Mine association rules to 
determine defect associations
Mine association rules 
with effort as consequent 
Generate strong association rules with support and 
confidence greater than minimum 
Obtain training and defect data 
set 
Rule Ranking 
Defect association prediction 
Defect isolation and defect correction effort 
prediction 
Clustering the defects into groups based on their 
correction effort
Weighted analysis 
Determining the risk associated with the project 
V7-570 2010 2nd International Conference on Computer Engineering and Technology [Volume 7]
For the purpose of defect correction effort prediction, 
the following attributes are taken into consideration?
Defect type, Effort, Typological error, Bad code and 
Omission error 
The defects are grouped into transactions based on the 
following approach: All defects whose change date falls 
within a particular time period are considered to be part of 
the same transaction. 
The large defect data sets are obtained from the 
transactions based on the minimum support. Support of an 
itemset is defined as the number of transactions 
containing the itemset. The minimum support is fixed by 
the user and the large defect sets are obtained [4]. 
2)  ASSOCIATION RULE MINING 
For a given transaction database T, an association rule 
is an expression of the form X=>Y, where X and Y are 
subsets of A and X=>Y holds with confidence c, if c% of 
transactions in D that support X also support Y. In this 
method association rules are mined from the large defect 
sets in order to identify associations among the defects. 
The minimum confidence is fixed by the user. The 
defect association rules are generated based on previously 
known method [4]. For defect isolation effort prediction 
and defect correction effort prediction, a special type of 
association rule mining is used such that the consequent 
of the association rule contains only the effort for 
correcting the defects. This method called Mining 
Association Rules with item constraints helps us to mine 
association rules with effort as consequent [5]. 
The rules are ranked based on their length. The rules 
with maximum length are given highest priority. For rules 
of equal length, the confidence, support and alphabetical 
order of defects are considered for assigning priority.  
3)  DEFECT ASSOCIATIONS 
The defects that occur together with the given 
defect are identified using the defect association 
prediction method. The association rules are mined from 
the large defect sets and they are pruned based on the user 
specified minimum confidence and the rules are ranked. 
The given k-defect is taken and the rules are searched one 
by one to determine the rule which contains the given 
defect. If all the pre-associations are contained within the 
antecedent of the rule, then the consequent is combined 
with the k-defect to generate a k+1 defect and the defect 
associations are displayed [6]. 
4)  DEFECT ISOLATION AND 
CORRECTION EFFORT  
For defect isolation and correction effort prediction, 
special kinds of association rules are mined in which 
effort occurs as the consequent. Once the rules are 
obtained and ranked, the rules are searched one by one to 
identify the rule whose antecedent contains the defect. 
The defect is merged with the antecedent to generate the 
defect element set and the most probable effort for the 
defect element set is determined [6]. 
B. Clustering  
Clustering is a data mining technique used to place 
data elements into related groups without advance 
knowledge of the group definitions. Clustering is a useful 
technique for separating data into groups whose members 
belong together. Each object is assigned to the group it is 
most similar to. 
In this paper, clustering is applied to the identified 
defects along with their effort in order to group the 
defects into three categories based on their isolation and 
correction effort. The three categories are: 
1. COMPLEX: Defects that require a large amount 
of isolation and correction time. 
2. MODERATE: Defects that require a 
considerable amount of time for isolation and 
correction, but not large enough to be complex. 
3. SIMPLE: Defects that are easy to isolate and 
correct and which require a very small amount of 
time for isolation and correction. 
This categorization is not based on any fixed 
boundaries. The boundaries are dynamic and are formed 
based on the data present in that particular system. Hence 
the clustering is specific to the system or database to 
which it is applied and it changes from system to system. 
In this project, clustering is performed based on the 
following attributes?
Defect Isolation Effort, Defect Correction Effort, 
Typological Error, Bad Code and Omission Error 
Typological error, bad code and omission error 
are attributes whose presence or absence influences 
the time taken for correcting and isolating defects. 
Hence each of these attributes is given a value 10 if 
they are present and are given a value 0 if they are 
absent. For defects whose isolation and correction 
effort is independent of these attributes, each of these 
is given a value of 10. 
DEFECT CLUSTER ALGORITHM 
[Volume 7] 2010 2nd International Conference on Computer Engineering and Technology V7-571
1. The number of clusters is fixed as 3(SIMPLE, 
MODERATE and COMPLEX). 
2. 3 initial clusters are formed by choosing one 
defect set for each cluster from the database.  
3. The defect set with the lowest isolation and 
correction effort forms the first defect set in the 
SIMPLE cluster while the defect set with the 
maximum isolation and correction effort forms 
the first defect set in the COMPLEX cluster.  
4. The average of the isolation effort and correction 
effort of the defects in the SIMPLE and 
COMPLEX cluster is computed and the defect 
set with effort nearest to the average forms the 
first defect set in the MODERATE cluster. Now 
each cluster consists of one defect set. 
5.   Next each defect set is assigned to only one of 
the clusters. Each defect set is assigned to the 
nearest cluster by computing its distance using 
the Euclidean Distance Method 
6. Each defect set is assigned to the most similar 
cluster based on the distance method and the 
arithmetic mean is calculated for all the defect 
sets in a cluster. For example, if the SIMPLE 
cluster consists of two defect sets  
Logic={1,3,10,0,0} and 
Interface={2,1,10,10,0},then 
SIMPLEMEAN={2+1/2,3+1/2,10+10/2,0+10/2,0+
0/2} where each defect set is of the format  
Defect={Isolation Effort, Correction Effort, 
Typological, Bad Code, Omission} 
7. The arithmetic mean forms the new centre for 
this cluster. Similarly centers are computed for 
each cluster.  
8. The defect sets are reassigned to the cluster 
based on their distance from the new centers. 
9. This process is repeated until stable clusters are 
formed 
FORMULA 
EUCLIDEAN DISTANCE(X, Y) = (|X1-Y1|2 + |X2-
Y2|2 + ... + |XN-1-YN-1|2 + |XN-YN|2)1/2                      (1) 
This clustering method helps in identifying and 
categorizing the defects based on their complexity.
The project managers can allocate time and resources 
based on the nature of complexity of the defects. This 
helps the project managers to manage project 
schedules and ensure that the project isnt delayed. 
Fig 2 describes the clustering process. 
  
  Figure 2. Clustering Module 
III. CLASSIFICATION 
Based on weighted analysis method, it is 
determined whether the presence of a particular 
defect might affect the project schedule significantly. 
This helps to determine whether a project is risk 
prone due to the presence of a defect. The following 
inputs are required for this method: Defect Isolation 
Defect correction 
effort obtained from 
database 
Three clusters are defined: 
simple, moderate and 
complex
One defect set is assigned to 
each cluster 
Compute Euclidean distance 
Assign each defect to the 
nearest cluster 
Compute arithmetic mean to 
determine new centers 
Reassign defects based on 
new centers 
V7-572 2010 2nd International Conference on Computer Engineering and Technology [Volume 7]
Effort (DIE), Defect Correction Effort (DCE) and 
Number of Associated Defects (NAD) 
From the defect associations, the number of 
defects (NAD) that occur in association with the 
given defect can be obtained. More the number 
of defects that occur in association with a 
particular defect more is the amount of time 
required for correcting the defects increases. This 
affects the project schedule and makes the 
project risk prone. Thus the number of associated 
defects plays a major role in determining the 
project risk. 
FORMULA 
WA = 0.5*NAD * (0.2*DIE + 0.3 * DCE)  
           (2)                                                     
Where: 
WA  Weighted Analysis 
NAD  Number of Associated Defects 
DIE  Defect Isolation Effort 
DCE  Defect Correction Effort 
The threshold value of WA depends on the 
size and complexity of the project. Based on the 
project characteristics, an appropriate WA value 
is set. All projects with values below the 
threshold are classified as safe and all projects 
with values above the threshold are classified as 
risky.  
IV. RESULTS 
This project mines defect associations, groups defects 
into clusters and classifies the projects based on the 
defects found. The resulting data is used as the basis for 
determining the nature and complexity of defects and the 
risk associated with the project. 
A possible extension of this project would be to include 
other data mining methods to classify defects. Future 
works can take into account attributes such as severity and 
cause of defects as the basis for classifying them.
V.  CONCLUSION 
In this paper, an innovative approach for identifying 
the associations among the defects in a system and 
predicting the effort for correcting these defects is 
described.   This new defect prediction method helps in 
identifying the maximum possible number of defects that 
occur in association with a given defect. By using this 
method, the accuracy of defect prediction is improved and 
moreover this method helps in producing a lower false 
negative rate in comparison with other prediction 
methods. Clustering technique is used to group the defects 
based on their complexity and the projects containing the 
defects are classified based on the risk associated with 
them. 
REFERENCES 
[1] N.F. Schneidewind, Methodology for Validating Software 
Metrics, IEEE Trans. Software Eng., vol. 18, no. 5, pp. 410-
422,May 1992 
[2] K. El-Emam, S. Benlarbi, N. Goel, and S.N. Rai, Comparing 
Case-Based Reasoning Classifiers for Predicting High-Risk 
Software Components, J. Systems and Software, vol. 55, no. 3, 
pp. 301-320,2001. 
[3] G. Heller, J. Valett, and M. Wild, Data Collection Procedure for 
the Software Engineering Laboratory (SEL) Database, Technical 
Report SEL-92-002, Software Eng. Laboratory, 1992. 
[4] R. Agrawal, T. Imielinski, and A. Swami, Mining Association 
Rules between Sets of Items in Large Databases, Proc. ACM 
SIGMOD Conf. Management of Data, May 1993.
[5] R. Srikant, Q. Vu, and R. Agrawal, Mining Association Rules 
with Item Constraints, Proc. Third Intl Conf. Knowledge 
Discovery and Data Mining (KDD 97), pp. 67-73, Aug. 1997. 
[6] Software Defect Association Mining and Defect Correction Effort 
Prediction Qinbao Song, Martin Shepperd, Michelle Cartwright, 
and Carolyn Mair  
[Volume 7] 2010 2nd International Conference on Computer Engineering and Technology V7-573
