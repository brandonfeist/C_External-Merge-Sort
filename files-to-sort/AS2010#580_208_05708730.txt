Busy Line Analysis with Improved Association
Rules Mining Algorithm for Hangzhou Public
Free-Bicycle System
Wanjun Zhang1,Yinglong Ge1,Baolan Yuan2,Haitao Xu1
1School of Software Engineering, Hangzhou Dianzi University, Hangzhou 310018, China
2School of Information Engineering, Hangzhou Dianzi University, Hangzhou 310012, China
E-MIAL: zhangwj@hdu.edu.cn
Abstract—In China, Hangzhou is the ?rst city to set up
the Public Free-Bicycle System. There are many and many
technology problems in the decision of intelligent dispatch. In
this paper, we investigate the busy line of Hangzhou Public Free-
Bicycle System with association rules mining algorithm. Actually,
?nding association rules is an important data mining problem
and can be derived based on mining large frequent candidate
sets. In this paper, a new procedure is proposed for ef?cient
generating busy lines candidate set. At ?rst, by passing over the
cruel database only once, a rent-return database with entries 1 or
0 are set up. Then, the busy locations and busy lines candidate sets
are obtained from the rent-return database. Finally, busy lines
are mined from the busy lines candidate sets. Practice examples
and comparison with the Apriori Algorithm are made on 4 rent-
return databases with small, middle and large sizes from the
West Lake Scenic Zone. It is observed from the experiments that
the proposed algorithm is ef?cient and robust.
Keywords-ssociation rules; data mining; busy line; Public
Free-Bicycle System; Apriori algorithmssociation rules; data min-
ing; busy line; Public Free-Bicycle System; Apriori algorithma
I. INTRODUCTION
A. Brief introduction of Hangzhou Public Free-Bicycle System
A complimentary public free-bicycle sysytem, as a part
of the public transport, is to be established in Hangzhou to
solve the problem of the last 1km from the bus stop to home
or work. Today, more that 2000 locations are set up.
In the West Lake Scenic Zone, there are 10 locations:
Lingyin Temple Bus Interchange, Hangzhou Zoo Station, Nine
Creeks Bus Interchange, South Entrance of Su Causeway,
Wanghulou Tea House (next to Broken Bridge), car park of
Shengtang main entrance, Gate 1 of Liulang Wenying Park
(also known as Orioles Singing in the Willows), South Gate
of Long Bridge Park, Pinghu Qiuyue Park on Bai Causeway
(also known as Autumn Moon over the Calm Lake) and the
entrance to Yue Miao (also known as Yuefei’s Temple).
20-50 bicycles are available for rental initially and num-
bers will be adjusted according to the actual operational status
at each location.
Anyone of over the age of 16 and under 70 are eligible
for bicycle rental. However, no cash is accepted at the rental
service locations.
Bus IC cards (either regular or concession cards) and
citizen cards should be presented for bicycle rental. One card is
eligible for one bicycle only and you should return the bicycle
with the same card.
People should top up the card with 200 yuan as deposit
to enjoy the service. The deposit can be refunded in the future
if one want to cancel the service.
Tourists or citizens without bus IC cards can purchase a
Z-card at 300 yuan, with 200 yuan as deposit and 100 yuan
for consumption. You can be refunded the balance remaining
in your Z-card within 10 days at any bicycle rental locations
or bus IC card top up locations; however, refund over 10 days
is only available in the ticketing of?ce at Longxiangqiao Bus
Interchange.
Z-card is available in any point of bus IC card sales and
the bicycle rental locations. It can be used to pay bus fare at
9% discount, taxi fare (only for those installed with IC card
POS) or water bus fare as well.
The ?rst 30 minutes of bicycle rental is for free. 1 yuan
is charged for rental from 30 minutes to 90 minutes, 2 yuan
from 90 minutes to 150 minutes, 3 yuan per hour for over 150
minutes. It will be deducted from the IC card upon returning
the bicycle.
The free rental period is prolonged from 30 minutes to
60 minutes for interchange from bus to bicycle. A discount
will also be offered on bus fare for interchange from bicycle
to bus once the system is ready.
B. Brief review of association rules mining
Discovering association rules from databases is an im-
portant data mining problem[1]. Recently, there have been
considerable researches in designing ef?cient algorithms for
mining association rules.
The problem of mining association rules from a transac-
tion database can be decomposed into two subproblems.Let
the support of an itemset Z be the ratio of the number of
2010 Second WRI Global Congress on Intelligent Systems
978-0-7695-4304-8/10 $26.00 © 2010 IEEE
DOI 10.1109/GCIS.2010.159
139
transactions containing itemset Z and the total number of
transactions in the database.First, all itemsets whose supports
are not less than the user-speci.ed minimum support are identi-
?ed. Each such itemset is referred to as a large itemset.Second
, the association rules whose con?dences are not less than
the user-speci?ed minimum con?dence are generated from
these large itemsets.For example, let Z be a large itemset.The
con?dence of a rule X ? Y is the ratio of the supports of
itemset X ? Y and itemset X. All rules of the form X ? Y
satisfying X ? Y = Z,X ? Y = Ø and the minimum
con?dence constraint are generated.Once all large itemsets are
discovered, the desired association rules can be obtained in a
straightforward manner.
An algorithm for ?nding all association rules, referred
to as the AIS algorithm, was ?rst explored in [2]. The AIS
algorithm requires to repeatedly scan the database. It uses the
large itemsets discovered in the previous pass as the basis
to generate new potentially large itemsets, called candidate
itemsets, and counts their supports during the pass over the
data. Speci?cally, after reading a transaction, it is determined
which of the large itemsets found in the previous pass are
contained in the transaction. New candidate itemsets are
generated by extending these large itemsets with other items in
the transaction. However, the performance study in [3] shows
that AIS is not ef?cient since it generates too many candidate
itemsets that are found not to be large itemsets ?nally.
In [3], the a priori algorithm was proposed for ef?ciently
mining association rules. Different from the AIS algorithm,
the algorithm generate the candidate itemsets by using only
the large itemsets found in the previous pass. For example,
at the (k ? 1)th iteration, all large itemsets containing (k ?
1) items, called large (k ? 1)-itemsets, are generated. In the
next iteration, the candidate itemsets containing k items are
generated by joining large (k?1)-itemsets. The heuristic is that
any subset of a large itemset must be large. By the heuristic,
the a priori algorithm can generate a much smaller number of
candidate itemsets than the AIS algorithm.
Another effective algorithm for the candidate set gener-
ation, called DHP, was proposed in [4]. By utilizing a hash
technique, DHP can ef?ciently generate all the large itemsets
and effectively reduce the size of the transaction database.The
performance study in [4] shows that the number of candidate
2-itemsets generated by DHP is smaller than that by the a
priori algorithm. Moreover, the transaction database size is
trimmed at a much earlier stage of the iterations. As a result,
the total execution time can be reduced signi?cantly by DHP.
In [5], the PSI and PSIseq algorithms were proposed
for ef?cient large itemsets generation and large sequences
generation, respectively. The two algorithms use prestored
information to minimize the numbers of candidate itemsets
and candidate sequences counted in each database scan.The
prestored informations for PSI and PSIseq include the item-
sets and the sequences along with their support counts found
in the last mining, respectively.Empirical results show that
only using little storage space for the prestored information,
the total computation time can be reduced effectively. In
[6], an ef?cient graph-based algorithm to discover interesting
association rules embedded in the transaction database and the
customer database is presented.
The notion of mining multiple-level association rules
was introduced in [7].In many applications, association rules
discovered at multiple concept levels are useful.Usually, the
association relationship expressed at a lower concept level
provides more speci?c information than that expressed at a
higher concept level.The approach is to ?rst ?nd large items
at the top-most level, and then progressively deepen the mining
process into their descendants at lower levels. A similar idea
of extracting generalized association rules using a taxonomy
was presented in [8].
The issue of mining quantitative association rules in large
relational databases was investigated in [9]. The attributes
considered in a relation are quantitative or categorical.The
values of the attribute are partitioned using an equi ? depth
approach (that is, each interval resulted from the partition
contains roughly the same number of tuples), and then adjacent
intervals are combined as necessary. A related problem is clus-
tering association rules [10], which combines similar adjacent
association rules to form a few general rules. Ref.[10] pro-
posed a geometric-based algorithm to perform the clustering
and applied the minimum description length principle as a
means of evaluating clusters.
Previous researches on mining association rules focus on
discovering the relationships among items in the transaction
database. Lots of papers are mentioned on algorithms for
mining association rules, such as [11-16].
In this paper, a new algorithm for ?nding association rules
is used to analysis busy line for Hangzhou free bicycle system.
By passing over the database once, we can get the training
database. The frequent itemsets can then be obtained from the
operations of rows on this matrix, (see in section 3).
The rest of these paper is organized as follows: In section
2, we give a review of the Apriori algorithm for association
rule mining and present the limitations of Apriori algorithm. In
section 3, we present the new proposed algorithm for ?nding
association rules, called Matrix Algorithm(SA) . In section 4,
we discuss the concrete experiments using the new algorithm.
Conclusions are given in section 5.
II. BUSY LINE MINING BASED ON RENT-RETURN MATRIX
We ?rst generate a matrix with only entries either 0 or 1
after one pass over the rent-return database. We call it rent-
return matrix. Then we can derive association rules from the
matrix. The process of generating the matrix is as follows:
We set the locations in I as columns and the rent-return
transactions as rows of the matrix.
Let the set of locations be I = {p1, p2, · · · , pn}, and
the set of the rent-return records be D = {t1, t2, · · · , tm}.
Then the rent-return matrix G = {gij}, (i = 1, 2, · · · ,m; j =
1, 2, · · · , n) is an m × n matrix, where gij = 0 or 1 is
140
determined by the following rule,
gij =
??
?
1, if pj ? ti,
0, if pj /? ti.
Example 1. Let I = {A,B,C,D,E, F} with ?ve loca-
tions, and the rent-return transactions be t1 = {A,B}, t2 =
{A,C}, t3 = {B,E}, t4 = {C,D}, t5 = {D,E} with six
rent-return records. Then the rent-return matrix is
G =
?
?????
1 1 0 0 0 0
1 0 1 0 0 0
0 1 0 0 1 0
0 0 1 1 0 1
0 0 0 1 1 0
?
?????
?
?
?????
g1
g2
g3
g4
g5
?
?????
.
With this rent-return matrix, we can ?nd busy line and
generate association lines.
The busy lines candidate set is generated using the fol-
lowing process:
(a) The busy locations set L1 is a subset of candidate busy
locations set which consists of the sets which are subsets of
single location in I , that is, C1 = {{p1}, {p2}, · · · , {pn}}.
In order to compute the support number for each set in
C1, we express every set in C1 as a row vector in Rn, that
is, we express {p1} as S11 = {1, 0, · · · , 0}, and {pk} as S1k =
{0, 0, · · · , 1, · · · , 0}, the kth element is 1 and others are 0.
Then the support number of the set {pk} is calculated by :
supp({pk}) =
m?
j=1
< gj , S
1
k >,
where < , > is the inner product of two row vectors and
gj , j = 1, 2, ...,m are rows of the matrix G. For example,
let g1 = {1, 0, 1}. Then if S11 = {1, 0, 0},< g1, S11 >= 1
and if S12 = {0, 1, 0}, then < g1, S12 >= 0. Then the set of
all the frequent 1-itemsets, L1, is generated from C1. If the
support number of {pk} is beyond the user-speci?ed threshold
Minsupport, that is,
supp({pk}) ? Minsupport,
then {pk} ? L1.
(b) The set of candidate busy lines set C2 is the joint set
of L1 with itself, that is, C2 = L1  L1. Each subset in C2
consists of two locations and has the form {pk, pj}, k < j.
Similarly, we specify each set in C2 a row vector in
Rn. For example, for the set {pk, pj}, the speci?ed vector is
S2k,j = {0, · · · , 0, 1, 0, · · · , 0, 1, 0, · · · , 0}, where the kth and
jth elements are 1 and others are 0. The support number of
the set {pk, pj} is :
supp({pk, pj}) =
m?
s=1
int[
< gs, S
2
i,k >
2
],
where int[·] is the integrating function that changes a real
number to integer by discarding the number after decimal
point. For example, int[0.6] = 0, and int[2.3] = 2.
The busy lines L2 is generated from C2 with the set
whose support number is beyond the user speci?ed threshold
Minsupport, that is, if
supp({pk, pj}) ? Minsupport
then {pk, pj} ? L2.
The busy lines set L2 is obtained.
We set
L = L1 ? L2.
Throughout the process above only one pass over the rent-
return database is used, and hence the algorithm is called
matrix algorithm.
III. BUSY LINES GENERATING
In this section, we derive all busy lines
{pi ? pj}
with support s and con?dence c, where pi, pj are busy
locations and {pi}, {pj}, {pi, pj} ? L.
The s = Minconfidence and the c = Minsupport are
speci?ed by users or experts. The con?dence of busy line pi ?
pj is computed by the following statement,
conf(pi ? pj) = supp({pi, pj})
supp({pi}) .
The method of generating all busy lines are to select
all {pi}, {pi, pj} from L, then compute conf(pi ? pj). If
conf(pi ? pj) is beyond the Minconfidence, pi ? pj
is a busy line. In another word, the busy lines generating
framework is ????
???
supp({pi}) ? s,
supp({pj}) ? s,
supp({pi, pj}) ? s,
supp({pi,pj})
supp({pi}) ? c.
Then, we can design algorithm to get them.
IV. PRACTICAL EXAMPLES
To practice the effectiveness of the proposed procedure,
we performed extensive practical experiments.
We get all of the rent-return records in one weeks. In
Table 1, we list out the rent-return database scale. n is the
number of locations in I . m is the rent-return records number
in D.
Table 1: the database scale
Practical example n m
E1 10 500
E2 100 5000
E3 500 50000
E4 1000 500000
In Table 2, is the comparison result between The Apriori
Algorithm and our Proposed procedure with cpu times to
generate frequent itemsets.
141
Table 2: Experimental results
Practical example Apriori Proposed procedure
E3 34.07sec 28.56sec
E4 83.12sec 73.26sec
The following conclusion can be obtained from the prac-
tice examples .
For the small size problem, for example, size is smaller
than one hundred, the difference between the Apriori Algo-
rithm and the proposed procedure is not obvious. But for large
or huge size locations and rent-return records, for example,
number is larger than one thousand, the difference is obviously.
For generation of the busy locations, the proposed pro-
cedure takes more time than the Apriori Algorithm. But, for
generation of the busy lines, the proposed procedure take less
time than the Apriori Algorithm.
V. CONCLUSION
In recent years, Hangzhou Public Transport Group has
invested a lot of money developing intelligent public free-
bicycle sysytem, and achieved some success. Hangzhou public
transportation system, although making the times into an
intelligent, but with the technology to enhance and increase
the content of the existing intelligent transportation system
remains many problems. The major manifestations are islands
of information problem, how to solve the theoretical support
for the issue, expanding the application of information inte-
gration, how to solve the problem of information accuracy
and information technology, intelligent transportation system
management. We will actively make use of high technology,
and further transformation of the traditional intelligent public
transport system; to information technology, promotion of pas-
sengers, vehicles, station facilities and transport participants
and the positive interaction between the traf?c environment,
build a bus operation monitoring display, customer service
information, public transportation and other multimedia in-
formation query system consisting of an integrated platform
for Urban Intelligent Transportation and vigorously promote
the Intelligent Transport System (ITS) in Hangzhou building
process. In order to improve management and operational
ef?ciency throughout the system, it is necessary to establish a
scienti?c management system and operation mechanism, then
supporting management information system to support, can
achieve very good information sharing, real-time monitoring,
ef?cient use, intelligent height requirements.
By a proposed procedure, we analysis the busy lines. The
results can provide a decision project about the locations of
scheduling points, moreover, the system can make a intelligent
decision according to the busy lines by dynamic scheduling
points.
ACKNOWLEDGMENT
This research has been supported by the Science and
Technology Agency of Hangzhou under Grants 20083211A01.
REFERENCES
[1] R. Agrawal, T. Imielinski, and A. Swami, Database mining: A perfor-
mance perspective. IEEE Trans. Knowledge and Data Eng., 5(6) (1993):
914-925.
[2] R. Agrawal, T. Imielinski, and A. Swami, Mining association rules
between sets of items in large databases. In: Proceedings of the ACM
SIGMOD Conference on Management of Data, 1993: 207-216.
[3] R. Agrawal and R. Srikant, Fast algorithms for mining association rules.
In: Proceedings of International Conference on Very Large Data Bases,
1994: 487-499.
[4] J.S. Park, M.S. Chen and P.S. Yu, Using a hash-based method with trans-
action trimming for mining association rules, IEEE Trans. on Knowledge
Data Engrg. 9(5)(1997): 813-825.
[5] Pauray S.M. Tsai, Chien-Ming Chen. Discovering knowledge from large
databases using prestored information. Information Systems. 26(1)(2001):
3-16.
[6] Pauray S.M. Tsai, Chien-Ming Chen. Mining interesting association rules
from customer databases and transaction databases. Information Systems.
29(3)(2004):685-696.
[7] J. Han, Y. Fu. Discovery of multiple-level association rules from large
databases. Proceedings of the VLDB Conference. 1995: 420-431.
[8] R. Srikant, R. Agrawal. Mining generalized association rules. Proceedings
of the VLDB Conference. 1995: 407-419.
[9] R. Srikant, R. Agrawal. Mining quantitative association rules in large
relational tables. Proceedings of the ACM SIGMOD. 1996:1-12.
[10] B. Lent, A. Swami, J. Widom. Clustering association rules. Proceedings
of the IEEE International Conference on Data Engineering. 1997:220-231.
[11] R. Agrawal, J. Shafer: Parallel mining of association rules. IEEE Trans.
on Knowledge and Data Engg., 8(6) (1996): 962-969.
[12] J. Hipp, U. Gontzer, and G. Nakhaeizadeh, Algorithms for association
rule mining – a general survey and comparison. SIGKDD Explorations,
2(1) (2000): 58-64.
[13] F. Berzal, J.C. Cubero, N. Marrin and J.M. Serrano, TBAR: An ef?cient
method for association rules mining in relational databases. Data and
Knowledge Engineering 37(2001):47-64.
[14] John D. Holt and Soon M. Chung, Mining association rules using
inverted hashing and pruning,Information Processing Letters, 83(2002):
211-220.
[15] Ping-Yu Hsu, en-Liang Chen, Chun-Ching Ling. Algorithms for mining
association rules in bagdatabases. Information Science. 166(1)(2004):31-
47.
[16] Shichao Zhang, Jingli Lu, Chengqi Zhang. A fuzzy logic based method
to acquireuser threshold of minimum-support for mining association rules.
Information Science. 164(1)(2004):1-16.
142
