Mining Irregular Association Rules based on Action & Non-action Type 
Data 
Razan Paul, Abu Sayed Md. Latiful Hoque 
Department of Computer Science and Engineering,  
Bangladesh University of Engineering and Technology, Dhaka 1000, Bangladesh 
razanpaul@yahoo.com, asmlatifulhoque@cse.buet.ac.bd 
Abstract 
Conventional positive association rules are the 
patterns that occur frequently together. These 
patterns represent what decisions are routinely made 
based on a set of facts. Irregular association rules 
are the patterns that represent what decisions are 
rarely made based on the same set of facts. Many 
domains like Healthcare, Banking etc need the 
irregular rule to improve their system. In this paper, 
we propose a level wise search algorithm that works 
based on action and non-action type data to find 
irregular association rules. We have observed that 
irregular association rules can be discovered 
efficiently based on action type and non-action type 
data from large database. To the best of our 
knowledge, there is no algorithm that can determine 
such type of associations. Its effectiveness has been 
demonstrated by testing it for a real world patient 
data set. 
1. Introduction 
Data mining is applied to discover new 
information, which is hidden in the existing 
information. One of the techniques in data mining is 
finding association rule. The first pioneering work to 
mine conventional positive association rules was 
explained in [1]. In this work, they showed finding 
association rule problem can be separated into two 
sub problems. After that many algorithms [1-6]  have 
been proposed to mine positive association rules 
efficiently. These algorithms find rules that represent  
decisions that occur frequently  based on a set of 
facts. In other words, rules discovered by current 
association mining algorithms [1-6] are patterns that 
represent what decisions are usually made. In this 
problem, we need patterns that are rarely made. We 
have proposed a novel mining algorithm that can 
efficiently discover the association rules from the 
existing data that are strong candidates of variability. 
The algorithm uses a different candidate itemset 
selection process, a modified candidate generation 
process, and a different mechanism of generating 
rules from desire itemsets compared to any level-
wise search algorithm. The algorithm treats all the 
items as being either actions that include decision, 
action and output or non-actions that include facts, 
statements and any criterion. In our problem, non-
action items appear very frequently in the data, while 
action items rarely appear with the high frequent 
non-action items. Negative association rules find 
patterns where items are conflict with each other and 
do not find decision, which are made rarely. Rare 
association rules are the patterns containing rare 
items which are less frequent items and do not find 
decisions which are made rarely. Irregular pattern 
represents wrong decision, illegal practice and 
variability in decision. 
2. Related Work 
A rare association rule forms with rare data items 
or between frequent and rare data items. However, 
this rule does not map items that are used to make 
decision/action to antecedent and items that represent 
actions or decision to consequent. Moreover it does 
not expect antecedent to be high frequent because it 
find rule with high confidence. The algorithms to 
find these rules only assign different support based 
on items frequency. A number of approaches has 
been proposed to mine rare associations [7-11]. In 
[7],   minimum support is computed for each item 
based on the frequency of the item. In [8], A fixed 
minimum support is applied to extract desired 
itemsets, which consist of only frequent items and 
relative support is applied to extract desired itemsets, 
which consist of rare items. In [9], Negative-
Binomial distribution is applied to extract Negative-
Binomial desired itemsets. In [10],   the association 
rules are found by taking into consideration only 
infrequent items. The approach suggested in [11] 
finds the association rules by computing item-wise 
minimum support.  
A negative association rule presents a relationship 
among itemsets and states the presence of some 
itemsets in the absence of others. Every positive 
association rule P ? Q has three corresponding 
978-1-4244-7571-1/10/$26.00 ©2010 IEEE 63
negative association rules, P ? ¬Q, ¬P ? Q and ¬P ? ¬Q. To extract negative association rules, most 
papers employ different correlation measures
between attributes [12-14]. In [13], the author 
proposed a level-wise search algorithm for mining 
both positive and negative association rules that 
employs rule dependency measures. In [14], authors 
proposed another level-wise search algorithm for 
simultaneously extracting positive and negative 
association rules using Pearson correlation 
coefficient. In  [15] , author have proposed detection 
model  using  multi layer perceptron neural networks 
(MLP)  to detect  fraud/abuse problem based on 
medical claims. It has been proposed to detect new, 
unusual and known fraudulent/abusive behaviors. It 
works based on detection model which is very slow 
and need huge memory requirement to analyze 
existing large database. In [16], author used positive 
association rule to build clinical pathways, which can 
detect fraud and abuse on new data. However, this 
model cannot detect fraud and abuse from the 
existing large healthcare data. Our proposed 
approach detects fraud and abuse from the existing 
large information.
3. Irregular Association Rules
Let D = ?t1, t2 , . . . , tn? be a database of n 
transactions with a set of items I = ?i1, i2 , . . . , im?.
Let set of action items of I be AI = ?ai1 , ai2, . . . , aik?
where k is the number of action items. Let set of 
non-action items of I be 
NAI = ?nai1, nai2 , . . . , naim?k ? where ?? ? is the 
number of non- action items. For an itemset P ? I
and a transaction t in D, we say that t supports P if t
has values  for all the attributes in P; for conciseness, 
we also write P ? t. By Dp we denote the 
transactions that contain all attributes in P. The 
support of P is computed as ?P? = ?Dp ?? , i.e. the 
fraction of transactions containing P. A irregular rule 
is of the form: P ? Q, with P ? NAI, Q ? A I, P ?
Q = ?. To hold the rule following condition must 
meet: P?P?or support?P? >= ????????????????? ??????? , P?P , Q?or support?P, Q? <
= ??????? ?????????? ?????????? ???????
and 
P?P ,Q?
P?P? <= ??????? confidence where P(x)
is the probability of x.
 
 
 
 
 
 
 
 
 
If age <= 12 then 1 
If 13<=age<=60 then 2 
If 60 <=age then 3 
If smoke = y then 1 
If smoke = n then 2 
If Sex = M then 1 
If Sex = F then 2 
 
Rule Base  
Actual Data 
Data suitable for Knowledge Discovery 
Original 
value 
Mapped 
value 
Headache  1 
Fever 2 
 
Patient 
  ID 
Age Smoke Diagnosis 
1020D 2 1 1 
1021D 3 2 2 
 
Patient 
  ID 
Age Smoke Diagnosis 
1020D 33 Yes Headache 
1021D 63 No Fever 
 
Actual data 
Generate dictionary for 
each categorical attribute 
Medical 
domain 
knowledge 
Original 
value 
Mapped 
value 
Yes  1 
No 2 
 
Dictionary of 
Diagnosis attribute 
Dictionary of 
Smoke attribute 
Map to integer items using 
rule base and dictionaries 
Figure 1. Data transformation of medical data
4. Mapping complex medical data to 
mineable items
For knowledge discovery, the medical data have 
to be transformed into a suitable transaction format 
to discover knowledge. We have addressed the 
problem of mapping complex medical data to items 
using domain dictionary and rule base as shown in 
figure 1. The medical data are types of categorical, 
continuous numerical data, Boolean, interval, 
percentage, fraction and ratio. Medical domain 
expert have the knowledge of how to map ranges of 
numerical data for each attribute to a series of items. 
For example, there are certain conventions to 
consider a person is young, adult, or elder with 
respect to age. A set of rules is created for each 
continuous numerical attribute using the knowledge 
of medical domain experts. A rule engine is used to 
map continuous numerical data to items using these 
developed rules.
We have used domain dictionary approach to 
transform the data, for which medical domain expert 
knowledge is not applicable, to numerical form. As 
cardinality of attributes except continuous numeric 
data are not high in medical domain, these attribute 
values are mapped integer values using medical 
domain dictionaries. Therefore, the mapping process 
is divided in two phases. Phase 1:  a rule base is 
constructed based on the knowledge of medical 
domain experts and dictionaries are constructed for 
attributes where domain expert knowledge is not 
applicable, Phase 2:  attribute values are mapped to 
integer values using the corresponding rule base and 
the dictionaries.
5. The proposed algorithm
64
General intuition of this algorithm is as follows: 
based on a set of lab tests with same results, if  99% 
doctors   practice patients as disease x and  1 percent 
doctors practice patients as other diseases, then there 
is a strong possibility that this  1 percent doctors are 
doing illegal practice. In other words, if consequent 
C occurs infrequently with antecedent A and 
DQWHFHGHQW$RFFXUVIUHTXHQWO\WKHQ$?&LVDUXOH
that is a strong candidate of variability. In every 
domain, there are a set of facts. Based on these facts, 
decision and action are taken. In a rule S ? T, if S
contains a set of facts and T contains decision or 
action. Then such rules represent the decision T with 
their corresponding facts S. If S ? T has sufficient 
support and confidence then it represents that 
decision or action T is taken routinely based on facts 
S. However, if S is high frequent and rule S-T has 
very low confidence. Then it indicates based on facts 
S any other decision instead of T is usually taken. It 
also indicates that the decision is exceptionally taken 
based on these facts. The main features of the 
proposed algorithm are as follows:
x If minimum support is only used like 
conventional association mining algorithm,  
desired  itemsets that involve rarely appeared   
action items with the high frequent non-action 
items will not be found. To find rules that 
involve both frequent antecedent part and rare 
consequent items, we have used two support
metrics: minimum antecedent support, 
maximum antecedent consequent support. 
x The proposed algorithm uses maximum 
confidence constraint instead of widely used 
minimum confidence constraint to form the 
rules. Moreover, it partitions itemsets into action 
item and non-action items instead of subset 
generation to form rules.
x Rules   have non-action items in the antecedent 
and action items in the consequent.
x In candidate generation, it does not check the 
SURSHUW\ ³(YHU\ VXEVHW RI D IUHTXHQW LWHPVHW LV
IUHTXHQW´ LI WKH FDQGLGDWH LWHPVHW FRQWDLQV RQH
or more action items to keep that itemset.
Let MAS is minimum antecedent support, MACS 
is maximum antecedent consequent support, Ij is the 
itemsets of size j, Sm is the desired itemset of size m; 
Ck be the sets of candidates of size k. Figure 2 shows 
the association mining algorithm for finding irregular
rule. Like algorithm Apriori, our algorithm is also 
based on level wise search. Each item consists of 
attribute name and its value. Retrieving information 
of a 1-itemset, we make a new 1-itemset   if this 1-
itemset is not created already, otherwise update its 
support. The non-action 1-itemset is selected if it has 
support greater or equal to minimum antecedent 
support. The action 1-itemset is selected whatever 
support it has. By this way, 1-itemsets are explored 
which have high support for antecedent items and 
have arbitrary support for consequent items.
5.1. Candidate Generation
The idea behind candidate generation of all level-
wise algorithms like Apriori is based on the 
following simple fact: Every subset of a frequent 
itemset is frequent so that they can reduce the 
number of itemsets that have to be checked. 
However, our proposed algorithm in candidate 
generation phase check this fact if the itemsets only 
contains non-action items. This idea makes itemsets 
consist of both rare action items and high frequency 
non-action items. If the new candidate contains one 
or   more action items then it is selected as a valid 
candidate. If the new candidate contains only non-
action items then, it is selected as a valid candidate 
only if every subset of   new candidate is frequent. 
This way the algorithm keeps the new candidates 
that have one or more action items.
5.2. Candidate Selection
We have used two separate supports metrics to filter 
out candidates. An itemset with only non-action 
items is compared with minimum antecedent support 
metric as non-action items  can only  take part in  
antecedent part of irregular rule, which  need to be 
high frequent. An itemset with   one or more action 
items is compared with maximum antecedent 
consequent support metric to keep rare action items 
with the high frequent non-action items. An itemset 
with only non-action items is selected if it has 
support greater or equal to minimum antecedent 
support. An itemset with   one or more action items 
is selected if it has support smaller or equal to 
maximum antecedent consequent support. By this 
way, itemsets are explored which has high   support 
for non-action items and low support for action items 
with high support non-action items. Here pruning is 
based mostly on minimum antecedent support, 
maximum antecedent consequent support and 
checkiQJ WKH SURSHUW\ ³HYHU\ VXEVHW RI D IUHTXHQW
LWHPVHWLVIUHTXHQW´
5.3. Generating Association Rule
This problem needs association rules that represent 
irregular relationships between action and non-action 
items that occur rarely together. For this reason, the 
proposed algorithm uses maximum confidence 
constraint    to form rules as it needs rule that has 
high support in antecedent portion and has very low 
support in itemset from which the rule is generated. 
It selects a rule if its confidence is less or equal to 
maximum confidence constraint. Moreover, it does 
not use subset generation to the itemsets to form 
rules. Here an itemset is partitioned into action item 
and non-action items. Action items are for 
consequent part and non-action items are for 
65
antecedent part. Here each itemset is mapped to only 
one rule.
 
 
Algorithm:  Find itemsets which  consist of non-action 
items with high support and  action  items with low 
support based on candidate generation. 
Input: Database,  minimum antecedent support, maximum 
antecedent  consequent support  
Output :  Itemsets which  are strong candidates of variability. 
1. K=1, S = {Ø}; 
2. Read the metadata about which attributes are action 
type and which are not. 
3. Ik =    Select 1-itemsets either which consist of a 
non-action item and has support greater or equal to 
minimum antecedent support or    which consists of 
an action item.  
4. While(Ik ?? { 
4.1 K++; 
4.2 Ck = Candidate_generation(Ik-1) 
4.3 CalculateCandidatesSupport(Ck)       
4.4 Ik  = SelectDesiredItemSetFromCandidates 
             (CK, Sk , MAS, MACS); 
4.5 S  = S U Sk 
5. return S 
procedure  SelectDesiredItemSetFromCandidates 
(CK , Sk , MAS, MACS) 
1. For each Itemset c ? Ck 
     1.1 If c contains only non-action items 
1.1. 1  If c.support >=   MAS   
 1.1.2  Add it to I 
     1.2 else if c contains one or more action items  
                      with non-action items. 
 1.2.1  If c.support  <=  MACS 
 1.2.2 Add it to I & Sk 
     1.3 If c contains only action items  
 1.3.1  Add it to I 
 2. return I 
 
 
Procedure CalculateCandidatesSupport(Ck)  
   1, For each transaction t of Database 
 1.1 CalculateSupportFromOneTransactionFor-  
       Cadidates(Ck, t); 
procedure  CalculateSupportFromOneTransaction 
ForCadidates(Ck, t) 
      1.Ct  =Find the subsets of Ck which are candidate 
      )RUHDFKFDQGLGDWHF¼&t 
            2.1 c.count++ 
Algorithm : Find Assosiation rules for Variability 
Finding 
Input:  I (Vaiavility Itemsets), maximumConfidence 
Output: R ( set of rules )  
1. R = Ø 
2. For each X ? I   
 2.1 Antecedent set AS = (as1, as2«««DVn){  
        where  asi ? X and AC(asi?` 
2.2 Consequent  set CS = (cs1, cs2«««FVn){  
where  csi ? X and AC(csi?` 
2.3 if  (support (AS ? CS)/Support (AS))  <=   
 maximum confidence                        
                 2.3.1  AS ? CS is a valid rule. 
                 2.3.2 R = R U (AS ? CS)     
procedure Candidate_generation(Ik-1) 
1.For each Itemset i1 ? Ik-1 
    1.1 For each Itemset i2 ? Ik-1 
      1.1.1 Newcandidate, NC = Union(i1,i2); 
      1.1.2 If  Size of  NC is k  
        1.1.2.1 If  NC contains one  or more action items   
      1.1.2.1.1 Add it to Ck if every subset  of  
                     non-action items is frequent. 
        1.1.2.2 else 
                   1.1.2.2.1 If every subset of NC is frequent                                
                                   1.1.2.2.1.1 Add it to Ck  
                                                  othewise remove it.                                  
2. return Ck; 
        Figure 2. Association mining algorithm for finding irregular rule
5.3.1. Lemma 1. Number of rules is equal to number 
of desired itemsets and number of discarded rules =  
mp ? S where S is the number of desired itemsets.
Proof: A single desired itemset consists of action 
type items and non-action type items. Action items 
and non-action items are mapped to consequent and 
antecedent parts respectively. Let I = { i1, i2««Ln}
be the set of items to be mined, where items can be 
either action type or non-action type. Let AI = {ai1,
ai2««DLu) be  the set of action items to be mined. 
Let NAI= { nai1, nai2«««QDLv) be  the set of non-
action items to be mined. Each nai has to have 
confidence greater than minimum confidence support 
to be included as 1- itemset and all ai are included as 
1- itemset. Let, C= {c1,c2,c3 «Fn} be the set of 
candidate itemsets. A new candidate NC is added to 
C if the non-action part of NC named NCNA holds 
the following  property:  support (each subset of 
NCNA) >= minimum antecedent support. A
candidate c is selected for rule generation if and only 
LI DFWLRQ SDUW RI F ? 18// DQG FVXSSRUW  
maximum confidence support. Action item  and non 
action item of a desired itemset is mapped to 
antecedent items and consequent items of a rule. So 
every desired itemset is mapped to a single valid 
rule. Total rules = number of desired itemsets = S. 
Let m is the average number of distinct value, each 
multidimensional attribute holds. P is the number of 
attributes to be mined. Number of possible different 
rules =?? . Number of discarded rules =  ?? ? ?
where S is the number of desired itemsets.
6. Results and discussion
The experiments were done using PC with core 2 
duo processor with a clock rate of 1.8 GHz and 3GB 
of main memory. The operating system was 
Microsoft Vista and implementation language was 
c#.  We used a patient dataset to verify our method. 
The dataset contains items, which are either actions 
that include decision, diagnosis and cost or non-
actions that include lab tests, any symptom of patient 
66
and any criterion of disease. Each instance represents 
the data of one patient. We have filtered out 
instances which has noisy or missing values. The 
data set of interest has collected and preprocessed 
from the different local hospitals of Bangladesh, 
which has 50273 instances and 514 attributes 
(included 150 discrete and 364 numerical attributes). 
All these data are converted into mineable items 
(integer representation) using domain dictionary and 
rule base. 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
0
500
1000
1500
2000
10K 25K 50K
ti
m
e
s 
in
 s
e
cs
Number of transactions
A priori
Proposed 
Algorithm
Figure 5. Time comparison of different 
maximum antecedent supports 
Figure 6. Time comparison of different maximum 
antecedent consequent supports 
 
Figure 4. Number of rules based on maximum 
confidence 
 
 
0
2
4
6
2 5 10N
u
m
b
e
r 
o
f 
ru
le
s
Maximum Confidence
MAS = .7 
MACS = .1
MAS = .85 
MACS = .5
 
0
500
1000
1500
2000
3% 5% 10%T
im
e
(i
n
 s
e
co
n
d
s)
MACS
MAS = .85 
MC = .1
MAS = .70 
MC = .1
Figure 8. Accuracy of the proposed algorithm 
based on maximum Confidence 
Figure 7. Accuracy of the proposed algorithm 
based on irregular metric 
 
0
0.5
1
50% 70% 90%
A
cc
u
ra
cy
minimum antecedent support
MACS = .1 
MC = .1
MACS = .1 
MC = .05
Figure 3. Time comparison of Apriori and 
proposed algorithm for the patient dataset 
 
0
500
1000
1500
2000
90% 70% 50%
ti
m
e
s 
in
 s
e
cs
minimum antecedent support
MACS = .1 
MC = .05
MACS = .05 
MC = .05
 
0
0.5
1
10% 5% 2%
A
cc
u
ra
cy
Maximum confidence
MAS = .85 
MCS = .05
MAS = .7 
MCS = .1
Table 1. Test result for patient dataset
Minimum antecedent support 70% 85%
Maximum antecedent 
consequent support
10% 5%
Maximum confidence 10% 5%
Number of desired itemsets 49 31
Number of Desired rules 5 3
Time (Seconds) 922.2 1634.56
Table 1 shows test result for patient dataset, after 
running the program of the  proposed algorithm with 
different parameters. Second column of the table 
presents the test result, where we used minimum 
antecedent support of 70%, maximum antecedent 
consequent support of 10% and maximum 
confidence of 10%. 49 desired itemsets were 
generated in total. 3 rules were discovered in total. It 
took about 922.2013 seconds to find these rules. 
Third column of the table presents the test result, 
where we used minimum antecedent support of 85%, 
maximum antecedent consequent support of 5% and 
maximum confidence of 5%. 31 desired itemsets 
were generated in total. 5 rules were discovered in 
total. It took about 1634.5634 seconds to find these 
rules.
Figure 3 shows Apriori has taken significant 
higher time compared to the proposed algorithm. It is 
because pruning in the proposed algorithm is based 
on minimum antecedent support, maximum 
antecedent consequent support and checking the 
SURSHUW\ ³HYHU\ VXEVHW RI D IUHTXHQW LWHPVHW LV
IUHTXHQW´ RQ QRQ-action items. Figure 4 presents if 
maximum confidence (MC) increases, number of 
valid rules increases. Figure 5 shows how time is 
varied with different minimum antecedent support 
(MAS) values for irregular rule finding algorithm. 
Here we measured the performance of irregular rule 
finding algorithm in terms of MAS keeping MACS,
MC, number of action items, number of non-action 
items constant. Time is not varied significantly 
because MAS has no lead to reduce disk access as 
the patient data set has all sizes of candidates for 
these MAS values. It has only lead to the number of 
valid candidate generations and it can save some 
CPU time. As it has lead to the CPU time, the three 
different cases   take slightly different time. 
Figure 6 shows how time is varied with different
MACS by keeping MAS , MC, number of action 
items, number of non-action items constant. Time is 
not varied significantly because MACS has no lead 
to reduce disk access as the patient data set has all 
sizes of candidates for these MAS values. It has only 
lead to the number of valid candidate generations 
and it can save some CPU time. As it has lead to the 
CPU time, the three different cases take slightly 
different time. As maximum consequent support 
67
decreases, number of valid candidate generation 
decreases For this reason, case with 5% MACS takes 
more time than case with 3% MACS and case with 
10% MACS takes more time than case with 5% 
MACS. Figure 7 illustrates accuracy results for our 
proposed algorithm based on minimum antecedent 
support. The value of minimum antecedent support
for each presented result is also indicated. The figure 
presents MAS has no lead in accuracy, as it is not 
used as a parameter in selecting valid candidate and 
rules. Figure 8 illustrates accuracy results for our 
proposed algorithm based on maximum confidence.
The figure presents maximum confidence has lead in 
accuracy as it is used as parameter in selecting valid 
rules. As maximum confidence decreases, accuracy 
increases and the number of discovered rules 
decreases. It is because less confidence indicates that 
antecedent and consequent occurs rarely together  in 
the dataset.
7. Conclusion
Irregular patterns represent wrong decision, 
illegal practice and variability in decision. In this 
paper, we propose a level wise search algorithm that 
works based on action and non-action type data to 
find irregular association rule. The proposed 
algorithm has been applied to a real world patient 
data set. We have shown significant accuracy in the 
output of the proposed algorithm. Although we have 
used level-wise search for finding irregular patterns, 
each step of our algorithm is different from any other 
level-wise search algorithm. Rules generation from 
desired item sets is also different from conventional 
association mining algorithms.
8. References
[1] R. Agrawal, T. ,PLHOL?VNL DQG $. Swami, "Mining 
Association Rules between Sets of Items in Very 
Large Databases," in Proceedings of the 1993 ACM 
SIGMOD international conference on Management of 
data, Washington, D.C., 1993, pp. 207-216.
[2] R. Agrawal and R. Srikant, "Fast Algorithms for 
Mining Association Rules in Large Databases," in 
Proceedings of the 20th International Conference on 
Very Large Data Bases, San Francisco, CA, USA, 
1994, pp. 487 - 499.
[3] S. Brin, R. Motwani, J. D. Ullman, and Shalom Tsur, 
"Dynamic Itemset Counting and Implication Rules for 
Market Basket Data," in Proceedings of the 1997 
ACM SIGMOD international conference on 
Management of data, Tucson, Arizona, United States, 
1997, pp. 255-264.
[4] H. Mannila, H. Toivonen, and A. I. Verkamo, 
"Efficient Algorithms for Discovering Association 
Rules," in AAAI Workshop on Knowledge Discovery 
in Databases, 1994, pp. 181-192.
[5] J. S. Park, M. S. Chen, and P. S. Yu, "An Effctive 
Hash based Algorithm for mining association rules," 
in Prof. ACM SIGMOD Conf Management of Data,
New York, NY, USA, 1995, pp. 175 - 186.
[6] A. Savasere, E. Omiecinski, and S. B. Navathe, "An 
Efficient Algorithm for Mining Association Rules in 
Large Databases," in Proceedings of the 21th 
International Conference on Very Large Data Bases,
1995, pp. 432 - 444.
[7] B. Liu, W. Hsu, and Y. Ma, "Mining Association 
Rules with Multiple Minimum Supports.," in 
SIGKDD Explorations, 1999, pp. 337--341.
[8] H. Yun, D. Ha, B. Hwang, and K. H. Ryu, "Mining 
association rules on significant rare data using relative 
support.," Journal of Systems and Software archive,
vol. 67, no. 3, pp. 181 - 191, 2003.
[9] M. Hahsler, "A Model-Based Frequency Constraint 
for Mining Associations from Transaction Data.," 
Data Mining and Knowledge Discovery, vol. 13, no. 
2, pp. 137 - 166, 2006.
[10] L. Zhou and S. Yau, "Association rule and 
quantitative association rule mining among infrequent 
items," in International Conference on Knowledge 
Discovery and Data Mining, San Jose, California, 
2007, pp. 156-167.
[11] R. U. Kiran and P. K. Reddy, "An improved multiple 
minimum support based approach to mine rare 
association rules.," in The IEEE Symposium on 
Computational Intelligence and Data Mining,
Nashville, TN, USA, 2009, pp. 340-347.
[12] S. Brin, R. Motwani, and C. Silverstein, "Beyond 
Market Baskets: Generalizing Association Rules to 
Correlations," in In The Proceedings of SIGMOD,
AZ,USA, 1997, pp. 265-276.
[13] X. Wu, C. Zhang, and S. Zhang, "Efficient Mining of 
Both Positive and Negative Association Rules," ACM 
Transactions on Information Systems, vol. 22, no. 3, 
p. 381±405, 2004.
[14] M. L. Antonie and O. R. Zaïane, "Mining positive and 
negative association rules: an approach for confined 
rules," in Proceedings of the 8th European 
Conference on Principles and Practice of Knowledge 
Discovery in Databases, Pisa, Italy, 2004, pp. 27 - 38.
[15] P. A. Ortega, C. J. Figueroa, and G. A. Ruz, "A 
Medical Claim Fraud/Abuse Detection System based 
on Data Mining: A Case Study in Chile," in DMIN,
2006, pp. 224-231.
[16] W. S. Yanga and S. Y. Hwangb, "A Process-Mining 
Framework for the Detection of Healthcare Fraud and 
Abuse.," Expert Systems with Applications, vol. 31, 
no. 1, p. 56±68, July 2006.
68
