  Weighted Association Rule Mining and Clustering in Non-Binary Search Space
 
G. Praveen Kumar 
Student Member (B.Tech), 
 Department of CSE, National Institute of 
Technology, Durgapur, India 
gpraveenkumar5@ymail.com 
 
 
Anirban Sarkar 
Sr. Lecturer,  
Department of MCA, National Institute of 
Technology, Durgapur, India 
sarkar.anirban@gmail.com 
 
 
Abstract 
Association Rule Induction and Clustering are some of 
the most useful data mining techniques. The former 
focuses on finding regularities in data trends, while the 
latter on discovering groups and identifying interesting 
distributions and patterns in the underlying data. Several 
research attempts have been made for the purpose of 
clustering transactions based on the binary data space. In 
this paper, an algorithm has been proposed for the same 
purpose but based on the non-binary data space. We also 
propose a novel mechanism to yield weighted association 
rules in non-binary search space. It is capable of 
clustering and mining weighted association rules more 
close to the real life situations as it considers the Strength 
of Presence of each item implicitly. Also they can be 
directly applied to the real time data repository. 
 
Keywords – Data Mining, Association Rule Induction, 
Clustering, Hierarchical Clustering, Non-Binary Search 
Space 
 
1 Introduction 
 
     The Internet, fast computers and inexpensive storage 
in the recent days has lead to a widespread collection of 
data from a variety of sources and of a variety of types. A 
question often posed about these data is: Can we find 
something interesting that we did not already know? i.e., 
can this large amount of data become knowledge or 
information? Data mining is a concept used hugely now 
days for the purpose of data explosion and knowledge 
discovery from the large dataset. Further, due to its 
applicability in diverse domains such as engineering, 
business and social sciences, it has been a subject of wide 
research. 
     Association Rule Induction and Clustering are some of 
the most useful data mining techniques. The former 
focuses on finding regularities in data trends [1], while the 
latter on discovering groups and identifying interesting 
distributions and patterns in the underlying data [2].  
Association Rule Induction has two different phases; first 
is to find the frequent itemsets and the second is to find 
the rules from these itemsets. An association rule 
expresses an association between items or sets of items. 
Finding these rules is valuable for cross marketing 
analysis, attached mailing applications, store layout, 
customer segmentation based on buying patterns etc. The 
algorithms for mining frequent patterns can be classified 
into two approaches, namely, candidate generation e.g. 
the Apriori algorithm and like algorithms [3] and pattern-
growth e.g. FP-growth algorithm [4]. Recent research 
includes NB Frequent Itemset algorithm [5] which 
focuses on mining association rules from non-binary 
dataset, with the consideration of Strength of Presence or 
Weight of each item. 
     Weighted Association Rules are association rules with 
weights or Strength of Presence. The weights associated 
with the items signify importance of the items. It not only 
improves the confidence in the rules, but also provides a 
mechanism to do effective target marketing by identifying 
or segmenting customers based on their potential, degree 
of loyalty or volume of purchase. Many algorithms have 
been proposed for this purpose. The model WAR [6] 
considers whether an item is present in a transaction or 
not. But, it does not take into account the weight or 
Strength of Presence of an item within a transaction. Also, 
in WAR, frequent itemsets are found by ignoring the 
weights but these weights are associated during the 
generation of association rules. Feng Tao et al. [7] 
addresses the issues of discovering significant binary 
relationships involving items with significant weights 
rather than being flooded in the combinatorial explosion 
of insignificant relationships in transaction datasets in a 
weighted setting. Rahman et. al [8] have proposed a 
Count distribution algorithm that considers only the 
support of the item and its significance to generated 
closed frequent itemsets. By considering the significance 
of the item, they prevent the loss of important items 
whose support may be less than the minimum support 
provided by the user because of its durability. Even 
though generating weighted association rules have been a 
topic of research, none of the algorithms proposed have 
clear bounds on generating these rules directly from non 
binary search space nor has the concept of Dynamic 
Support [5], which forms the basis of association rule 
induction in non-binary search space, been considered. 
     On the other hand, the goal of clustering is to 
determine the intrinsic grouping in a set of unlabeled data. 
2010 Seventh International Conference on Information Technology
978-0-7695-3984-3/10 $26.00 © 2010 IEEE
DOI 10.1109/ITNG.2010.136
238
It involves partitioning of a given data set into groups or 
clusters such that the data points in one cluster are more 
similar to each other than the data points in different 
clusters. Clustering Algorithms normally use distance 
based measurement in order to classify or group objects. 
Some modern applications of clustering include clustering 
the web, clustering search results, customer segmentation, 
recommender systems and community discovery in social 
networks. Due to its recent ubiquitous applicability, the 
field of clustering has undergone major revolution over 
the last few decades. Partitioning algorithms like k-
medoid [9], CLARA, Fuzzy k – medoid [10] etc., 
hierarchical clustering algorithms like DBSCAN [11], 
BIRCH [12] etc., and categorical clustering algorithms 
like ROCK [13], STIRR [14] etc., provide satisfactory 
result in clustering numerical as well as categorical data 
respectively. Arunava et al. [15] have proposed a rough 
set based clustering approach to cluster imprecise 
transactions in the presence of heterogeneous and 
hierarchical taxonomy of products. This diversity of the 
clustering algorithms is due to the diversity of induction 
principle models.  
     Although several approaches have been proposed for 
clustering transaction data, none of these solutions have 
clear bounds for clustering transactions from non-binary 
data sets and grouping transactions hierarchically. Binary 
dataset representation gives information about an item 
being present or not in the search space, but does not 
provide any information about the strength of its presence 
which can be more effective in forming clusters close to 
real life situations [5].  As an example, 10 units of Item A, 
10 units of item B and 10 units of Item A, 1 units of item 
B could not be differentiated in Binary Search Space. 
Hence, it cannot model real time situations as it does not 
provide any clue regarding the strength of presence of 
items being processed  
      Motivated by this, in this paper, we propose a novel 
algorithm that yield hierarchy of clusters for transactions 
from non-binary datasets and hence, yields clusters 
directly from the real time data repository. We also, as a 
consequence of [5], generate weighted association rules. 
Further, the Strength of Presence associated with the 
transactions, apart from generating more accurate 
weighted associations, which are close to real life 
situation, also improves the quality of clustering. Last but 
not the least; it eliminates noisy transactions from the 
transaction database. The rest of this paper is organized as 
follows. Definitions and Support Calculations for Non-
Binary Search Space are discussed in Section 2. Section 3 
outlines a mechanism for weighted association rule 
induction. In Section 4, we present the proposed NB 
Cluster algorithm with detailed example. Conclusions and 
future works are mentioned in Section 5. 
 
2 Definitions and Support Calculation for 
Non – Binary Search Space 
 
     Let P = {p1, p2 . . . pm} be the set of items. Let T = {t1, 
t2 . . . tn} be the set of transactions where each transaction 
ti is a set of items such that ti ?T. Each transaction ti 
contains a sub-set of items that has been processed and 
can be represented as a vector,  
mimiii pwpwpwt ˆ......ˆˆˆ 2211 +++=  
                                                                  .................. ( 1 ) 
Where, wij implies Weight or Strength of Presence of item 
pj, which has been processed in transaction ti. Also, weight 
is non-binary real value where the item has processed and 
is zero where it has not processed.  
     The non-binary weight quantifies the Strength of 
Presence of items in transaction vector. An example of 
non-binary data set is shown in Table 1, where p1, p2, p3 
and p4 are the items; t1, t2 ,t3 ,t4 and t5 are the 
transactions on the items and the corresponding cell value 
is representing the respective wij. 
 
Table 1. Non-Binary Data Set 
T p1 p2 p3 P4 
t1 10 5 3 8 
t2 20 10 6 7 
t3 30 15 9 11 
t4 40 20 12 23 
t5 50 25 15 35 
 
     Clustering transactions over non-binary search space 
presents the interesting new challenges over traditional 
clustering in binary search space as the non-binary search 
space requires new approaches to calculate support and it 
has to be dynamic in nature as we are dealing with real 
time dataset. The support calculation for the proposed 
work is divided into two parts, (i) the Dynamic Support 
(ML) for hierarchy level L is calculated using two factors, 
firstly the average of scalar distances of all the transaction 
vectors from the origin in the n-dimensional space where 
n is the number of products and secondly standard 
deviation (SD) of all such distances from the average 
scalar distances. The dynamic support needs to be 
calculated at each level in the hierarchy. For a specific set 
of transactions, dynamic support will group a subset of 
these transactions based on the interested strength of 
presence of the items, (ii) the Static Support is the user 
defined threshold value which is a minimum count of 
transactions or a percentage of the total number of 
transactions that should be supported by a cluster at any 
level in the hierarchy for it to be considered valid. The 
sequence of dynamic support and static support 
calculation will be used to group the transactions at every 
level. 
239
     Let, the distance distL[i] is distance of transaction 
vector ti correspond to ith transaction and is calculated by 
using Equation-2 considering the origin as a reference. 
Also, let SD be the standard deviation of all such 
distances. Now the dynamic support ML is the range 
defined by the boundary [average scalar distance - SD, 
average scalar distance+SD]. All transactions having 
interested strength of presence of the items corresponding 
to level L should be within the range defined by ML. 
Further, ML can be represented as Equation-3 and given as 
follows, 
 
22
2
2
1 ......][ iLiiL wwwidist +++=
     
.......... ( 2 ) 
SDnidistM
n
i
LL ±= ?
=
/)][(
1
      .................... ( 3 ) 
 
Table 2. Distance distL[i] calculation correspond to 
level 3  
Ts p1 p2 P3 distL[i] 
t1 10 5 3 11.576 
t2 20 10 6 23.152 
t3 30 15 9 34.727 
t4 40 20 12 46.303 
t5 50 25 15 57.879 
 
     An example of distance distL[i] calculation 
corresponding to level 1 of Table – 1 dataset, has been 
shown in Table – 2. The SD of all distances is equal to 
16.371. The Dynamic Support at Level 1 is ML and is the 
range [18.356, 51.097] using Equation 3. Now, the count 
of the number of transactions, which have their distL[i] 
within ML, has been shown in Table – 3. 
 
Table 3. Dynamic Support applied to Table 2 
Transaction 
Set 
Count Transactions that 
contribute to count 
{t1, t2, t3, t4, 
t5} 
3 {t2, t3, t4} 
 
     Now if Static Support is 3, then we can conclude that, 
the Cluster {t1, t2, t3} is a valid cluster as it has interested 
strength of presence of the corresponding items in the 
non-binary search space. 
 
 
 
 
 
3 Generating Weighted Association Rules 
 
3.1 Mechanism 
     As the transactions are considered as vectors, the 
techniques of vector addition effectively yield the ideal 
transaction vector or resultant transaction vector for a 
given set of products for the transactions under 
consideration. It is computed by adding the corresponding 
weights of every transaction vectors and then dividing the 
sum of the weights by the number of transaction vectors 
under consideration. The ideal transaction vector, as the 
name suggests, is the representative transaction for the set 
of products under consideration. 
 
3.2 Example and Discussion 
 
     Consider a transaction set T contains ‘m’ number of 
transactions in a market basket scenario and let I be the 
ideal vector corresponding to these transactions. So, ‘m’ 
transaction of ideal vector I would lead to the same 
quantity of products being sold as the set T.  The weights 
associated with the products of the ideal transaction 
vector yields the weighted Association Rules. These rules 
not only indicate the probability of a product Y being 
brought along with another product X but also the ratio in 
which X and Y are brought. The immediate question that 
arises is that the ratio need not necessarily be followed by 
every customer transaction. But, this is countered by the 
fact that the ratio is an average value considering large 
number of transactions. As an example, say a person buys 
1 liter of Milk and 250 grams of tea on a daily basis. Say, 
on a fine day, he has guests. So, he would proportionately 
increase his purchase to, say, 5 liters of milk and 1.25 kg 
of tea for that day. As he buys 1 liter of Milk and 250 
grams of tea on a daily basis, it can be said that the 
weighted association is ‘1 liter Milk  -> 0.25 Kg Tea’ and 
hence an increase or decrease in purchase of either of the 
commodities for a day or two becomes insignificant. On 
another day, it could so happen that he just buys 1 liter of 
milk without tea or vice versa as he has the commodity 
left over from the previous days. But considering over a 
long period of time, his Weighted Association Rule would 
remain unaltered.  
     As another example, in Table 1, consider {p2, p3} and 
{p2, p3, p4} as two frequent itemsets. For the frequent 
itemset {p2, p3, p4}, the ideal transaction vector, i.e., the 
weighted association rule is  15 p2 ->  9 p3 -> 16.8 p4 
and for the frequent itemset {p2, p3} the ideal transaction 
vector is 15 p2 -> 9 p3. They are obtained from the vector 
addition techniques mentioned above. To make things 
more clear, consider only transactions t1, t2 and t3 and the 
frequent itemset as {p1, p4}. So, the weighted association 
rule in this case is 20 p1 -> 8.67 p4. Please note that the 
frequent itemsets considered here are fictitious. We 
request the reader to refer to [5] where Praveen et. al, has 
proposed an NB Frequent Itemset generation algorithm 
for mining frequent itemsets in non – binary search space. 
240
     Hence, weighted Association Rules form the basis for 
prediction of the sale of a product as well as demand 
analysis in the future months. This information could be 
of at most importance to a market as it gives an idea of 
the amount of commodity to be purchased so as to 
minimize wastage as well shortage. 
 
4 Proposed NB Cluster Algorithm 
 
4.1 The Algorithm 
 
     The main function NB_Cluster uses the function 
Check_Dynamic_Support and hierarchically clusters the 
transactions at each level from the non-binary search 
space. Initially, every transaction is considered as a 
cluster. These clusters are then agglomerated by the 
distance measures considering Static and Dynamic 
Support. A medoid is computed for this cluster SL and is 
added to the transaction set TS. To compute the medoid, 
the average scalar distance of all transactions in the 
cluster is obtained in the n-dimensional space. A 
transaction having distance close to the average scalar 
distance is considered as the medoid and made as a new 
cluster. This cluster is considered, along with the other 
clusters that were not previously clustered, for clustering 
at the next higher level. The essence of adding the medoid 
is that the entire cluster SL is considered as a single 
transaction for clustering at the next higher level in the 
hierarchy. The function Check_Dynamic_Support is used 
to calculate the dynamic support for transaction set TS at 
every level in the hierarchy. The algorithm stops at a level 
L where the number of transaction in the cluster SL is less 
than the Static Support. 
 
//L is level identification number, SL will store the 
interested transactions at level L and C will store the 
clusters hierarchically. 
 
Function NB_Cluster () 
Begin 
  Initialize C := {}, L:=0; 
  do 
   begin 
      Initialize count :=0, S := {}; 
      Increment L; 
      Count := Check_Dynamic_Support (TS); 
      If (count >= static_support ) 
 Begin 
 Add to the set SL all those transactions      
that contributed to the count and remove 
them from TS. 
Add SL to C. 
Calculate medoid of SL and add it to TS. 
 end 
     end 
   while ( count >= static_support) 
End 
 
The function Check_dyanmic_support takes as input a set 
of transactions TS, computes the corresponding distance, 
mean and standard deviation and returns a count of the 
number of transactions in the range defined by mean and 
standard deviation. 
 
Function Check_Dynamic_Support 
(transaction_set Ts) 
// ML will yield the range of dynamic support using 
Equation (3) 
Compute distL[i] for each transaction ti 
corresponding transaction_set Ts; 
Compute the Standard deviation SD of all distL[i] 
corresponding to transaction_set Ts; 
Compute ML at level L; 
 for all i ? dist[i] do 
       If dist[i] is in the range defined by ML 
 Then increment count; 
Return count; 
End Function 
 
4.2 Examples 
 
     As proposed in the algorithm, clustering in the non-
binary search space with the concept of weight or strength 
of presence yields more accurate clusters from the given 
dataset and is directly applicable to the real time data 
repository. For example, consider a market basket 
scenario where a firm maps Product as an Item and a 
purchase session by some customer as a transaction to 
generate the clusters using the proposed algorithm. Now, 
in the non-binary search space each transaction represents 
the set of weight values of the respective products 
purchased. The non-binary data set can be represented 
using the transaction-product matrix [Table-4]. 
     Let, the Static Support is set to 2 i.e. 20% of the total 
number of customer transactions TS. Now, at Level – 1 in 
the hierarchy, the algorithm reads the dataset TS to 
compute the dynamic support [Table – 5], obtains the 
transactions that satisfy the dynamic support and then 
uses the static support to determine the validity or density 
of the cluster. Therefore, corresponding to Level – 1, the 
cluster is  S1 := {t2, t6, t8, t9, t10} as shown in [Table 5]. 
The transactions in S1 are removed from TS and the 
medoid of S1, which is t2, is added to TS. Hence, Ts := 
{t1, t2, t3, t4, t5, t7}; 
 
 
 
 
241
Table 4. Non-Binary Data Set (Customer 
Transactions) 
Ts p1 p2 p3 p4 p5 
t1 10.05 5.00 399.00 2.90 10.10 
t2 44.00 0.00 0.00 192.33 100.00 
t3 30.90 0.00 91.00 6.99 11.00 
t4 3.20 400.18 120.00 11.10 97.00 
t5 22.00 377.00 26.00 40.00 15.00 
t6 63.00 20.00 77.00 140.63 170.00 
t7 41.00 2.00 0.00 0.00 15.00 
t8 11.15 78.66 23.75 90.87 11.05 
t9 27.00 42.90 63.10 229.17 14.23 
t10 50.57 254.00 150.00 0.00 10.75 
 
Table 5. Dynamic Support applied to Table 4 
Transaction 
Set 
Dynamic 
Support 
Count Transaction 
that 
contribute to 
Count 
{t1, t2, t3, t4, 
t5, t6, t7, t8, 
t9, t10} 
[122.531, 
373.337] 
5 {t2, t6,  t8, t9, 
t10} 
 
     Next, at Level – 2 in the hierarchy, the same procedure 
is repeated, i.e., the dataset TS is read, dynamic support is 
computed and then using static support, the validity of the 
cluster is determined. 
 
Table 6. Dynamic Support applied to Table 4 
Transaction 
Set  
Dynamic 
Support 
Count Transaction 
that 
contribute to 
Count 
t1, t2, t3, t4, 
t5, t7 
[110.531, 
413.301] 
3 t1, t2, t5 
 
     Therefore, it is clear from [Table 6], that at Level - 2 in 
the hierarchy, S2 = {t1, t2 , t5}; Medoid of S2 i.e. t5 is 
added to TS. Now TS := {t3, t4, t5, t7} 
     The algorithm proceeds in the same manner for levels 
higher up in the hierarchy and it eventually terminates at a 
level L at which the number of transactions in the cluster 
SL is lesser than the static support. In this case, the 
algorithm stops at level - 5. 
S3 = {t3, t5}; TS := { t3, t4, t7}; 
S4 = {t3, t7 }; TS := {t3, t4}; 
     Hence, the hierarchy of clusters for TS is as follows 
S := S1 ?  S2 ?  S3 ?  S4  
   :={ {t2, t6, t8, t9, t10}, {t1, t2, t5}, {t3, t5}, {t3, t7}} 
 
 
 
 
 
4.3 Discussion 
 
     The NB Clustering algorithm hierarchically clusters 
data from non-binary search space and so, it essentially 
removes the restriction in clustering data associated with 
binary dataset. The algorithm works in a bottom up 
manner calculating the support at each level, clustering 
the transaction and using the results to cluster transactions 
at the next higher level. A closer observation at the 
hierarchy indicates that as one move up the hierarchy, the 
density of the cluster decreases. This indicates that 
frequent transactions are at the cluster lower down in the 
hierarchy. Therefore, this clustering into hierarchies 
groups transactions according to frequency. This is 
possible as, in the proposed algorithm, we are considering 
the Strength of Presence of each item in the transaction to 
generate the cluster.  
     It is also interesting to note that the transaction t4 is 
not present in any cluster. So, it is considered as a noisy 
transaction. This could be easily verified by having a look 
at t4 in Table-4. The weights associated with it are much 
larger than the weights associated with other transactions. 
These hierarchies filter the transactions form the large 
transaction database to the most frequent transactions, i.e., 
they group only the most frequent transactions in a cluster 
and therefore effectively eliminate noisy transactions. 
This is attributed to the nature of hierarchy of clusters. 
Hence, better results can be obtained by mining 
association rules or weighted rules in these clusters than 
the entire transactional database.  
     Moreover, the weighted association rules induction at 
different hierarchical levels yield a wide variety of rules 
that are in accordance to customer segmentation. As the 
proposed algorithm is using non-binary search space, it 
can be directly applied to the data repository and hence 
the accuracy of clustering increases. The worst case 
complexity of the algorithm is of the order of O(m2) 
where m is th number of transactions. The complexity is 
negligibly dependent on the hierarchy. 
 
5 Conclusions and Future Work 
 
     In this paper, a novel approach for mining weighted 
association rules over non-binary data set has been 
presented. In real life data analysis, predicting these rules 
with quantitative measure is a major concern and is the 
first step towards mining the association rules with 
broader objectives. Another contribution of this paper is 
the NB Cluster algorithm which yields hierarchy of 
clusters for data from non-binary search space and hence 
removes the restriction in clustering data associated with 
binary dataset. The density of cluster decreases as one 
moves higher up in the hierarchy. The Strength of 
Presence or Weight of each item considered while 
242
generating the cluster not only yields more accurate 
clusters but is also advantageous as it is directly 
applicable to the real time data repository. Moreover, it 
effectively eliminates noisy transactions from the 
transaction database. The methodology used for this 
algorithm, also lead to a better way of calculating Support 
and hence provides new insights in non-binary data 
clustering. 
     Further studies will concentrate on testing the 
algorithm on real environment in order to prove its 
practical utility and in extending the algorithm for 
clustering transactions involving heterogeneous items in 
non-dataset. 
 
6 References 
 
[1] Agrawal R, Imielinski T, Swami A., “Mining 
association rules between sets of items in large 
databases”, Intl. Conf. on Management of Data (Proc. 
ACM SIGMOD), Washington, DC,  1993, pp. 207-216. 
 
[2] Maria Halkidi, Yannis Batistakis, Michalis 
Vazirgiannis, “On Clustering Validation Techniques”, 
Journal of Intelligent Information Systems, Kluwer 
Academic Publishers Hingham, MA, USA, 2001, pp. 107-
145. 
 
[3] R. Agrawal, R. Srikant, “Fast algorithms for mining 
association rules”, Proceedings of the 20th Very Large 
DataBases Conference (VLDB’94), Santiago, Chile, 1994, pp. 
487– 499. 
 
[4] J. Han, J. Pei, Y. Yin, “Mining frequent patterns 
without candidate generation”, Proceedings of the 2000 
ACM SIGMOD International Conference on Management 
of Data, New York, NY, USA, 2000, pp. 1–12. 
 
[5] G. Praveen Kumar, Anirban Sarkar, Narayan C. 
Debnath, "A New Algorithm for Frequent Itemset 
Generation in Non-Binary Search Space", Proceedings of 
the Sixth International Conference on Information 
Technology: New Generations (ITNG ’09), 2009, pp.149-
153. 
 
[6] W. Wang, J. Yang and P. Yu, “Efficient Mining of 
Weighted Association Rules WAR”, Proc. of the ACM 
SIGKDD conf. on Knowledge Discovery and Data 
Mining, 2000, pp. 270 – 274. 
 
[7] Feng Tao, Fionn Murtagh, Mohsen Farid, “ Weighted 
Association Rule Mining using Weighted Support and 
Significance Framework”, Proceedings of the ninth ACM 
SIGKDD international conference on Knowledge 
discovery and data mining, Washington, D.C., 2003, pp. 
661 - 666.  . 
 
[8] A.M.J. Md. Zubair Rahman and P. Balasubramanie, 
“Weighted Support Association Rule Mining using 
Closed Itemset Lattices in Parallel”, IJCSNS International 
Journal of Computer Science and Network Security, vol.9 
No.3, Mar 2009, pp. 247 – 253. 
 
[9] K. Alsabt1, S. Ranka and V. Singh, “An efficient k – 
means clustering algorithm”, IPPS/SPDP Workshop High 
Performance Data Mining, Orlando, Florida, 1998. 
 
[10] O. Nasraoui, H. Frigui, A. Joshi, and R. 
Krishnapuram, “Low Complexity Fuzzy Related 
Clustering Algorithm For Web Mining”, IEEE 
Transaction on Fuzzy Systems, vol. 9, No. 4, Aug 2001, 
pp. 595 – 607. 
 
[11] M. Ester, H.P. Kriegel ans X Xu, “A density-based 
algorithm for discovering clusters in large spatial 
databases with noise”, Proceeding 2nd International 
Conference on Knowledge Discovery and Data Mining, 
Portland, OR, 1996, pp. 226 – 231. 
 
[12] Tian Zang, Raghu Ramakrishnan and Miron Livny, 
“BIRCH: An efficient clustering method for very large 
databases”, Proceeding of the ACM SIGMOD 
International Conference on Management of Data, 1996. 
 
[13] S. Guha, R. Rastogi and K. Shim, “A robust 
clustering algorithm for categorical attributes”, 
Proceeding of the IEEE International Conference on 
Data Engineering, Sydney, Mar. 1999. 
 
[14] D. Gibson, J. Klienberg and P. Ragavan, “Clustering 
categorical data: An approach based on Dynamical 
Systems”, Proceeding of the 24 th VLDB Conference, 
New York, USA, 1998. 
 
[15] Arunava Saha, Darsana Das, Dipanjan Karmakar, 
Dilip Dubey, Anirban Sarkar, Narayan C Debnath, 
“Clustering Customer Transaction: A Rough Set Based 
Approach”, In Proceedings of ISCA 22nd International 
Conference on Computer Applications in Industry and 
Engineering (CAINE 2009), San Francisco, California, 
USA,  November 4-6, 2009, pp. 213 – 218,.   
243
