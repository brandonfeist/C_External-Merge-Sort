201O International Conference On Computer Design And Appliations (ICCDA 2010) 
Incremental updating algorithm for infrequent itemsets 
on weighted condition 
Wenjuan Dong, He Jiang, Lei Chen, Guoling Liu 
School of Information Science and Technology 
Shandong Institute of Light Industry 
Jinan 250353,P.R.China 
wenzidong2009@163.com, jianghe@sdili.edu.cn, chenlei-19841 O@163.com, liugl@sdili.edu.cn 
Abstracf-Association rules are dedicated to describe the 
direct correlations among the items in frequent itemsets, 
while negative association rules are dedicated to describe the 
indirect correlations between the two items in infrequent 
itemsets. Incremental updating algorithm is important for 
mining infrequent itemset in dynamic databases. A new 
algorithm for mining infrequent itemsets from weighted 
incremental updating database (MIIWIU), is proposed to deal 
with the incremental updating problem when a new database is 
inserted in the original database and the minimum support is 
not changed to mine frequent and infrequent itemsets. The 
experiment results have shown that our approach is efficient 
and promising. 
KeywolYls-Incremellffll Upt/tlling;11'eiglll; InftetJllenI ItelllSet 
I. INTRODUCTION 
The association rule is an important topic in the data 
mining and knowledge discovery research field. A number of 
algorithms have been proposed to generate frequent itemsets 
since the problem was pointed out by R.Agrawal in 1993 [I]. 
With the further research on the mining of frequent patterns, 
it has been recognized that some infrequent patterns can 
provide very useful insight view into the data set. Positive 
association rules exist only in frequent itemsets, while 
negative association rules exist not only in frequent itemsets, 
but more exist in infrequent itemsets. Previous researches 
have mostly focused on positive association rules. Negative 
association rules also play an important role in many areas, 
especially in competitive analysis and investment analysis. 
But little study is about negative association rules. 
Traditional algorithm apriori treats each item as 
uniformity, but ignores the difference of all items. In fact, 
the importance of each item is often different. For example, 
if some goods have great profits or some goods are on sale­
promotion, decision-makers tend to be more concerned about 
the sales of goods. In order to solve the above problems, the 
concept of weight is added to association rules. When every 
item is associated with weight, Apriori closure property is no 
longer in point, so a new prune method is required. 
In practice, many databases are not static but changeable. 
When some records are added or deleted in a database, it 
could potentially invalidate some exsting rules. To solve the 
above three questions, an algorithm MIIWIU is put forward to 
mine frequent itemsets and infrequent itemsets from 
changeable database on weighted condition and the 
minimum support is not changed. 
The paper is organized as follows. The definition and 
related concepts about incremental updating for frequent and 
infrequent itemsets on weighted condition are given in 
Section II. Incremental updating for frequent and infrequent 
itemsets are described in Section III. The experimental 
results and analysis are showed in the fourth part, and 
conclusion is made in Section V. 
II. RELATED CONCEPTS 
A. Frequent and .ll!frequent .ltemsets Generation and 
Association Rule .Mining 
Association rule mining is a process that finds all 
association rules satisfying the minimum support and 
minimum confidence in a given transaction database. A 
common strategy adopted by many association rule mining 
algorithms is to decompose the problem into two major 
subtasks: 
1) Frequent and .ll!frequent .ltemsets Generation. The 
itemsets whose objective is to find all the itemsets that 
satisfy the minimum support threshold are called frequent 
itemsets. On the contrary they are called infrequent itemsets. 
2) Rule Generation. Whose objective is to extract all 
the high-condidence rules from the frequent itemsets found 
in the previons step. These rules are called strong rules. 
The computational requirements for frequent and 
infrequent itemset generation are generally more expensive 
than those of rule generation. So we'll mainly discuss the 
first question in this paper. 
B. .Mining .lnftequent .ltemset 
In the support-confidence framework, if supp(A) ? 
wminsupp, then A is a frequent itemset; and if supp(A) < 
wminsupp, then A is an infrequent itemset. Because the 
weight is associated with item, the downward closed 
property is no longer in point. Therefore, the method of 
pruning need considering again. 
According to the formula of negative association rules, 
the infrequent itemsets are divided into the following 
parts [2]: 
1) The itemsets whose support is less than the 
minimum weighted support in discovering the ftequent 
itemsets. 
2) The LHS if them is ftom the subset if a traction 
record, the RHS of them is ftom the subset of non-existing in 
978-1-4244-7164-5/$26.00 © 2010 IEEE VI-36 Volume 1 
2010 International Conference On Computer Design And Appliations (ICCDA 2010) 
a traction record 
J) Subset if non-existing items if every traction 
record 
C. .Incremental Updating for Frequent and .lJ?frequent 
.ltemsets 
In the real world, many databases are not static but 
changeable. They are dynamic databases. When some 
records are added or deleted in a database, even needed to 
adjust the minimum support threshold which gradually 
gathered in the frequent and infrequent itemsets we are 
interested in. Therefore, How to effectively update the 
frequent and infrequent itemsets from the dynamic database 
has very important application value. This is called 
incremental updating for frequent and infrequent itemsets. 
Generalized updating association rules mean mining 
new association rules from the new database DB+, which is 
formed of a new dataset db and an original database DB. 
The problem of incremental updating for frequent and 
infrequent itemsets is mining new itemsets from the new 
database DB+. 
There are three mainly problems about incremental 
updating for frequent and infrequent itemsets : 
J) For a given minimum support and minimum 
confidence, how to mine .frequent and in.frequent itemsets 
.from the new database db u DB when a new dataset db is 
inserted into the original database DB 
J) For a given minimum support and minimum 
confidence, how to generate .frequent and in.frequent 
itemsets .from the new database DB - db when a new dataset 
db is deleted .from the old database DB 
J) For a given database DB, how to mine .frequent 
and iJ?frequent itemsets when its minimum support and 
minimum co'!ftdence changing. 
In [3], Agrawal R, and Srikant R proposed FUP 
algorithm which is consistent with Apriori algorithm for 
the first update algorithm. Brin S, Motwani R, and 
Silverstein C proposed FUP2 algorithm [4] which is taking 
into account the first and second problems simultaneously. 
For the third problem, IUA and PIUA algorithms [5] have 
been proposed by Feng yucai and fengjinlin. 
Compared with incremental updating positive 
association rule, current researches about negative 
association rules for incremental update are fewer. 
In fact, the negative association rules for incremental 
updates is similar to incremental update of positive 
association rules, that is mining negative association rules in 
new database. But there still exist some differences. 
Positive associational rules only remain in frequent 
itemset, while negative association rules not only remain in 
frequent itemset, more exist in infrequent itemset. When 
resolving the problem of incremental updating for positive 
association rule, we just need to fmd all frequent itemsets 
from the updated database, and then use formula to mine 
positive association rules. While to negative association rule, 
we need to find all frequent and infrequent itemsets from the 
updated database, and then use related algorithm to mine 
negative rules. 
D. Weight 
Weighted Association Rules are as follows: there are n 
records and m items. Let.l = (if, i2, • • .  , im/ be a set of items 
and W= (Wf, W.z, ...  , wm) (WiE [0, J j) be the set of non­
negative real numbers. A pair ( X, w(.V ) is called a weighted 
item where XE.I is an item and W(.VE W is the weight 
associated with X A transaction is a set of weighted items, 
each of which may appear in transactions with different 
weights. A dataset may therefore be defined as a set D of 
transactions. 
Given a weighted itemset X and a set of transactions, 
referred to as D, we say X has support in D if s% of 
transactions in D support X The weighted support of an 
itemset Xin a dataset D, denoted as wsup(.V = count?X) / 
/D/* w(.V, where countD(.V is the number of transactions in 
D containing X Note that the support of a weighted itemset 
X is always less than or equal to the support of any of its 
generalization. 
In this paper the following form is used: 
sup(X?Y)= countD(x?Y)I/D/ 
wsup(X?Y) =avg(wf, W.z, ... , wp)* sup(X?Y) 
where p is the number of items in itemset X, avg( Wj, 
W.z, ... , wp) is the average value of the weight of itemset Xu Y 
and sup(X?Y) is support of itemset XuYbefore the item is 
associated with weight. 
An itemset is said to be weighted-frequent (large) if its 
support is larger than a user-specified value (also called 
minimum weighted support (wminsup». 
E Calculate Weighted Support 
Support of negative association rules associated with 
weight are transformed to the following forms to be 
calculated [6]: 
J) wsup(-,A) = J- wsup(A); 
J) wsup(Au--JJ) = wsup(A) - wsup(AuB); 
J) wsup(-,AuB) = wsup(B) - wsup(AuB); 
4) wsup(-,Au--JJ)=J-wsup(A)-wsup(B)+ wsup(AuB). 
III. PRESENTATION OF ALGORITHM 
A. Concepts 
Mining association rules of transaction database can be 
seen as a collection of itemsets. The collection is divided into 
two mutually exclusive parts: frequent itemsets and 
infrequent itemsets. We use DB and db to respectively 
represent original database and new added database. T 
represents the total number of the transaction database DB, 
and tdenoted db. While DBF, db/and DB+.F respectively 
represents the frequent itemsets of DB, db and DB+. The 
infrequent itemsets of DB, db and DB+ denoted by DBNF, 
db. if, DB+.NF. 
When DB n db = 0, clearly, any subset of DBNF and 
db.nf is all infrequent itemset. 
VI-37 Volume 1 
2010 International Conference On Computer Design And Appliations (ICCDA 2010) 
The proof is as follow : 'if A EDBNF, there must exist 
A. count < S * T. Because of S * T < S * ( T + t). So 
A.count < S * ( T + t ). That' s also means A is an 
infrequent itemset. With the same method, we can prove 
'if A E db. if. A is an infrequent itemset ( A.count indicates 
the support count of itemset A in the database ). While for 
DBF and db../, the subsets may still be frequent itemsets. 
DB+.NF consists of two parts. One part is any subset of 
DB.NF and db.if, the other is the remaining subsets of 
DB+.Fand db/. 
When DB n db *0, divided into disjoin part and 
intersection part [7]. Disjoint part may arise a collection of 
frequent and infrequent itemsets: L = DBF - db/, L' = dbJ 
- DBF, NL= DBNF - db.if, NL' = db. if - DBNF 
Intersection part can be divided into four subsets Lj, L2, L3, 
L4· 
Lj = DBFn db../, each itemset of Lj is frequent itemset 
in both DB and db. 
L2 = DBNFn db. n../, each itemset of L2 is infrequent 
itemset in both DB and db. 
L3 = DBFn db. if, each itemset of L3 is frequent itemset 
in DB and infrequent itemset in db. 
L4 = DBNFn db../, each itemset of L4 is infrequent 
itemset in DB and frequent itemset in db. 
B algorithm Design 
The main idea of MIIWIU algorithm 
Input: the original transaction database DB, 
additional transaction database db. 
Output: frequent and infrequent itemsets of DB, 
frequent and infrequent itemsets of db, 
frequent and infrequent itemsets of DB+. 
steps: 
(1) determine DB n db=0 or DB n db;;<0 
(2) ifDBndb=0do 
(3) Lj = find...ftequentj_itemsets (D);. 
(4) NLj=CrLj; 
(5) C,,= apriori-gen(Lr1, min_ wsupp); 
(6) Lk=(CEC" /c.count2:min_wsup) 
(7) NL,,= Cr L" ) 
With the same mothed generate all possible k-itemsets in db. 
!/Prune all .frequent k-itemsets in L" o./the two databases and 
generete .frequent and in.frequent itemsets 0./ DB+ 
for all itemset A EL do, 
(8) if A. count >wsupp * (T + I) 
(9) then L = L U (A), else NL=NL U (A); 
(10) for all itemset A EL' do 
(11) if A. count> wsupp * (T + I), then L' = L' U (A) 
(12) elseNL' =NL' UrAl 
(13) L" = LUL' ,NL" = NLUN L' 
(14) ffDBn db *0, 
(15) For DB U db, each itemset 0./ L1 is certainly .frequent 
itemset and L2 is certainly in.frequent itemset. 0./ L3 and L,fo 
pseudocodes are as follows: 
(16)for all t E db do 
(17) flr all itemsetA EL3do 
(18) if A E IIhen L JA. count+ +; 
(19) flr all itemsetA ELJ do 
(20) ifLJ.A.count 2:wsupp* (T+ I) thenL;=LJU (A); 
(21) elseNLJ=NLJU(A); 
(22) With the same method finds L,fand NL,f 
(23)L" =LjULJUL,foNL" =NL2UNLJUNL,f 
IV. ANALYSE EXPERIMENTAL RESULTS 
We conducted our experiment on man-made datasets to 
study the algorithm MIIWIU. 
Set weight of each item based on the user's interest in 
Table I. 
TABLE I. WEIGHT OF ITEM 
Item Weight 
A 0.1 
B 0.2 
C 0.9 
D 0.4 
E 0.6 
F 0.3 
G 0.5 
H 0.8 
A. Experiment J 
When DB n db = 0, there are 203 transactions in the 
original database, 53 transactions in the added database, 
and eight largest categories were kept. Assume that the 
minimum weighted support is 8% (wminsup = 8%). The 
result is in Table II. 
TABLE II. DBnDB=0 
Number DB db DB+ 
Frequent 230 204 432 itemsets 
Infrequent 0 8 10 itemsets 
From the result we can see that the number of frequent 
and infrequent itemsets from DB+ is different of the former 
two databases. Some frequent itemsets in DB become 
infrequent itemsets in DB+. 
B Experiment 2 
When DB n db * 0, there are 166 transactions in the 
original database, 63 transactions in the added database, and 
eight largest categories were kept. Assume that the 
minimum weighted support is 8% (wminsup = 8%).The 
result is in Table III. 
VI-38 Volume I 
2010 International Conference On Computer Design And Appliations (ICCDA 2010) 
TABLE III. DBnDB*0 
DB+ 
Number DB db inle1'SeCl tlisjoinl 
Frequent 187 170 7 252 iternsets 
Infrequent 4 18 21 7 itemsets 
The results show that the number of frequent itemsets 
from the combined database is less than the former two 
databases, but the number of infrequent itemsets is larger 
than them. 
V. CONCLUSIONS 
Negative association rules play an important role in 
many areas. Many databases are not static but changeable. 
Negative association rules exist not only in frequent itemset, 
more exist in infrequent itemset. Incremental updating 
algorithm is important for mining infrequent itemset in 
dynamic databases. In this paper, we proposed a new 
algorithm MIIWIU, the algorithm uses the improved Apriori 
algorithm and the set nature to mine the frequent and 
infrequent itemsets. Traditional Algorithm Apriori treats 
each item as uniformity, ignores the difference of all 
items. The concept of weight is added to the algorithm. The 
incremental updating algorithm for infrequent itemsets has 
been implemented with Visual C# 2005. The experiment 
results prove that the algorithm is efficient. 
ACKNOWLEDGMENT 
This work was supported by Shandong Province Nature 
Science Foundation (No.Y2008G26) and A Project of 
Shandong Province Higher Educational Science and 
Technology Program (No.J09LG32). 
REFERENCES 
[I] R.Agrawal, T.Imielinski, and A.Swami, "Mining Association Rules 
between Sets of Items in Large Databases", In: Proceedings of the 
1993 ACM SIGMOD International Conference on Management of 
Data.New York: ACM Press, 1993, pp. 207-216. 
[2] Y.Y. Zhao, H. Jiang. Mining Weighted Negative Association Rules 
Based on Correlation from Infrequent Items[ A]. Proceeding of 2009 
International Conference on Advanced Computer 
Control(ICACC2009)[C], Singapore, 2009. 
[3] Agrawal, R. and Srikant, R. Fast algorithms for mining association 
rules [J]. Proceedings of the 20th Int'! Conference on VLDB, 
1994:487-499. 
[4] Brin, S., Montwani, R., and Silverstein, C. Beyond Market Baskets: 
Generalizing Association Rules to Correlations .Proceedings for the 
ACM SIGMOD Conference, 1997:265-276. 
[5] Feng Yucai, Feng Jianlin. Incremantal Updating Algorithm for 
Mining Association Rules[J]. Journal of Software, 1998,9(4): 301-306. 
[6] XJ. Dong, SJ.Wang, H.T.Song et ai, "Study ON Negative 
Association Rules", Journal, Journal of Beijing Institute of 
Technology, China, 2004, pp. 978-981. 
[7] Baoyou Sun, H Jiang, Y.Y Zhao. The Study of Incremental Updating 
Algorithm for Mining Negative Association Rules[J].Computer 
Engineering[J].2009,28( 14).102-107 
[8] H. Jiang, Y.Y. Zhao, X.J. Dong, S.J. Shang, "Mining Positive and 
Negative Association Rules with Weighted Items". In:Proceedings of 
the 2008 International Conference on Distributed Computing and 
Applications for Business, Engineering and Sciences, China, 2008. 
[9] H. Jiang, Y.Y. Zhao, Mining Positive and Nagative Weighted 
Association Rules from Frequent Itemsets Based on Interest[ A]. 
Proceedings of the 2008 International Symposiurn on Computational 
Intelligence and Design[C], China, 2008. 
[10] H. Jiang, Y.Y. Zhao, Xiangjun Dong. Mining Both Positive and 
Negative Weighted Association Rules with Multiple Minimum 
Supports[A]. Proceedings of 2008 International Conference on 
Computer Science and Software Engineering[C],China,2008. 
VI-39 Volume I 
