A WSRF-enabled Distributed Data Mining Approach To Association Rules 
WEKA4WS -Based  
 
Zheng Shi-ming1, Yang Jun-Qiang2 ,Song Zi-ling1, Miao Zhuang1   
1  Institute of Command Automation , PLA University of Science and Technology ,Nanjing  
2 Xi’an Communication academy of PLA ,Xi’an, China 
zhengshimingnanjing@126.com 
 
Abstract 
 
As a latest member in distributed computing 
technology family, the grid computing can play an 
increasingly important role with the progress of the 
DDM(Distributed Data Mining) technology in recent 
years. However, conventional data mining is not 
satisfied with the requirement due to the heterogeneous 
and distributed of the datasets. Grid computing 
emerged as an important new field of distributed 
computing, which could support for distributed 
knowledge discovery applications. This paper has a try 
at combing the grid with web service in order to solve 
the problem of distributed association rules mining 
based on the research for the matrix theory, and 
achieves the distributed association rules algorithm by 
dint of Weka Library, presents a fast distributed 
association rules algorithm matrix-based ,and also 
proves the correctness of the algorithm in theory. 
Finally it verifies the validity of the algorithm and the 
feasibility of the architecture with the distributed 
association rules based on WEKA4WS. This effective 
and fast algorithm shows sound extension, short time 
complexity, space complexity and small 
communication cost. To evaluate the efficiency of the 
proposed algorithms, a performance analysis of 
Weka4WS for executing distributed data mining tasks 
in different network scenarios are presented. 
1. Introduction 
With the rapid development of information 
technology, massive data collections in terabyte and 
petabyte scale located on geographically distributed 
sites need to be maintained and analyzed in many areas 
such as scientific, commercial, financial, and so on. 
The conventional technology used for data mining is 
incapable of dealing with this problem. So a new 
distributed computing  model should be found, the grid 
technology can satisfy  the requirement[1]. The 
appearance of grid and web service bring a new chance 
for distributed data mining. Owing to the grid 
technology can link the different structural resources 
which are distributed in different places together, and a 
new platform which has super computing power is 
formed. Therefore, the computing resources, memory 
resources, algorithms resources, information resources 
and so on can be shared. As a new web applying mode 
and distributed computing model, web service can be 
used to solve all kinds of cooperating problem between 
different structural resources. So it is a new try to make 
use of the net technology for distributed data mining [2]-
[4]. This paper puts forward a completely new 
distributed mining algorithm for matrix association 
rules WEKA4WS-Based  in grid, its advantage is save 
time, it only need scan the database which distributed 
in each node once and need not generate candidates 
and frequent item sets. This algorithmic could find the 
maximum frequent item sets which meet the minimum 
support in short time through the operation of vector 
and matrix. 
2. Concepts of weka4ws and WSRF 
Weka4WS is a an open-source framework 
developed by the University of Calabria to extend the 
widely used Weka toolkit for supporting distributed 
data mining on Grid environments .Weka provides a 
large collection of machine learning algorithms written 
in Java for data pre-processing, classification, 
clustering, association rules, and visualization, which 
can be invoked through a common graphical user 
interface[5]. In Weka, the overall data mining process 
takes place on a single machine, since the algorithms 
can be executed only locally. 
The goal of Weka4WS is to extend Weka to support 
remote execution of data mining algorithms through 
WSRF Web Services. In this way, distributed data 
mining tasks can be concurrently executed on 
decentralized Grid nodes by exploiting data 
distribution and improving application performance. In 
Weka4WS, the data mining algorithms for 
classification, clustering and association rules can be 
also executed on remote Grid resources. To enable 
remote invocation, all the data mining algorithms 
provided by the Weka library are exposed as a Web 
Service, which can be easily deployed on the available 
Grid nodes. Thus, Weka4WS also extends the Weka 
GUI to enable the invocation of the data mining 
algorithms that are exposed as Web Services on remote 
Grid nodes. 
212
___________________________________ 
978-1-4244-6359-6/10/$26.00 ©2010 IEEE  
  
To achieve integration and interoperability with 
standard Grid environments, Weka4WS has been 
designed by using the Web Services Resource 
Framework (WSRF) as enabling technology. In 
particular, Weka4WS has been developed by using the 
WSRF Java library provided by Globus Toolkit 4.0.x 
(GT4).In the Weka4WS framework all nodes use the 
GT4 services for standard Grid functionalities, such as 
security and data management.  
WSRF[6](Web Service Resource Framework) has 
born as the production of Grid computing and web 
services combination, which is a family of technical 
specification concerned with the resource properties, 
addressing, service group, and lifetime management of 
state resources. WSRF codifies the relationship 
between stateless web services and state resources in 
terms of the implied resource pattern, which gives the 
definition of the WS-Resource. WSRF describes the 
WS-Resource definition and association with the 
description of a Web Service interface, and describes 
how to make the properties of a WS-Resource 
accessible through a Web Service interface. 
3. Correlative Definition for association 
rules 
Definition 1: Suppose N nodes 1 2, ,..., NS S S , all 
the datasets distributed in these nodes, where iDB is 
the database of the node 
iS , l 2 NDB=DB DB ... DB     , DB  denote 
global database, iDB is the local database, D denote 
the number of transaction in global database, iD is 
the number of transaction in local database[7]. 
Definition 2 : Suppose  two n dimensional vectors 
1 2 nX =(x ,x ,...,x )  and 1 2 nY= (y ,y ,...,y ) ,the inner 
product of X and Y  can be denoted 
as 1 1 2 2 n nX,Y =x y +x y +...+x y , X,Y denote the inner 
product of vectors X and Y . 
Theorem 1: Let X and Y be items of datasets D[8]: 
1) if X Y? ,then ( ) ( )sup support X port Y? . 
2) suppose X Y? ,if X is non-frequent itemsets, 
then Y is also non-frequent itemsets. 
3) suppose X Y? ,if X is frequent itemsets, then Y 
is also frequent itemsets. 
Definition 3:  Let
11 12 1
21 22 2
1 2
n
n
m m mn
a a a
a a a
a a a
 
 
 
=
 
 
 
 
A


   

?
denote 
11 21 1
12 22 2T
1 2
m
m
n n mn
a a a
a a a
a a a
 
 
 
=
 
 
 
 
A


   

 
Matrix A  whose transpose is 
TA .Apparently T T(1) ( ) =A A
T T T(2) ( )+ = +A B A B  T T(3) ( )? ?=A A  
T T T(4) ( ) =AB B A  
Definition 4:  if matrix A  satisfy T =A A ?
namely i j j ia a= ? ? A is named symmetrical 
matrix. 
Definition 5: suppose two n-by-n matrixes 
( )ijA a= and ( )ijB b= , denote A+B  as the sum of 
matrix A and B , A+B=( )ij ija b+ , namely 
11 11 12 12 1 1
21 21 22 22 2 2
1 1
n n
n n
m m mn mn
a b a b a b
a b a b a b
A B
a b a b
+ + +
 
 + + +
 + =
 
 
+ +
 


   
 
 
4. Distributed Association Rules Based on 
Matrix (DARBM) 
4.1 Description of Algorithm 
INPUT: minimum support threshold  
OUTPUT: global frequent itemsets and association 
rules 
1) Scanning the transaction database D for each 
local node i , building corresponding Boolean matrix 
iA  , providing the expected minimum support 
Min_sup. 
2) Computing and obtaining the local association 
transaction matrix  ( ) ( )Ti i i i n nT F A A A ×= = . 
3) Sending the local association transaction matrix 
iT  to global computing node for each local node i . 
4) The global computing node receive the 
( 1, 2..., )iT i N= from each local node i , and obtain 
213
n-by-n global matrix 1 2( ) ...ij n n NT t T T T×= = + + + , 
T must be a diagonal matrix. 
5)finding the maximum 11 22max ( , ,..., )ii nnt t t t??  
on the leading diagonal, scanning each row of T, 
computing the number ?  of elements whose value is 
bigger than or equal to k in every row, then judging 
whether min_ sup? ? is tenable or not. 
6)if min_ sup? ? , get the ( )1 2, ,..., ,i j j j?? ?= , 
1 2, ,...,j j j? denote the column which the element in, 
then go on scanning the next row to find out the 
number ?  of elements whose value is bigger than or 
equal to k in every row until end . 
7) If the scanning is end and ? of each row is 
smaller than Min_sup, then find the 
11 22max ( , ,..., )ii nnsub t t t t? on the leading diagonal 
11 22( , ,..., )ii nnt t t t from T , then repeat step(5) until 
finding the right row. 
8) analyze the vector ( )1 2, ,..., ,i j j j?? ?= in 
which the frequent item sets satisfy the condition in 
turn, making operation of logical AND using any 
Min_sup vectors that are not repeat in 
1 2
, ,...,j j jI I I ? ,and then obtaining the frequent 
itemsets ( )1 2, ,...,iK j j jL I I I ?= that meet the 
minimum support by judge, 
K
i
KL L=  . 
9) with the same way, we can receive the frequent 
(k-1)-itemsets 
11 K
i
KL L
?
?
=  ,frequent (k-2)-itemsets 
22 K
i
KL L
?
?
=  ,…, the rest may be deduced by 
analogy. 
10) generate association rule according to the 
definition 
( ) sup ( ) 100%
sup ( )
port X Yconfidence X Y
port X
 = ×

  and the 
frequent itemsets. 
4.2 Code for Algorithm 
1 2
: //
,..., // c
{ , ,..., ,} //
min_ sup // minimum support threshold
:
N
input I itemsets
N local omputing nodes
D D D D database distributed in nodes
output L frequent itemsets
=
1 2 Np , p p  
/ /
 
: DARBM
(1) 1
(2) ( )
(3)
(4) ( )
(5)
(6) (
i th
i i
T
i i i n n
i th
for each i N do
scan D at eachi local computing node
generate boolean matrix A for each D
calculate T A A
send T to global computing node for i local computing node
calculate T t
×
? ?
=
=
algorithm
( )
( )
1 2
1 2
1 2
) ...
(7) maximum     
(8)    ,      ( )
(9) , ,..., ,
(10) ( min_ sup) , ,..., ,
(11)
ij n n N
ii
ij
i
i
T T T
finding on the leading diagonal t
scanning each row of T computing the number of t j i
get j j j
if record j j j
continu
?
?
?
? ?
? ? ?
× = + + +
?
? ? ?
=
? =
( )
1 2
11 22
1 2
 
(12) min_ sup
(13) -maximum     
(14) min ( , ,..., )
(15) , ,..., ,
(16) ( ... )
ii
ii nn
i
i j j j
ally scanning for Next i
if scanning ending and
finding sub from the leading diagonal t
until t t t t
analyze the vector j j j
do c
?
?
?
? ?
? ? ?
<
?
=
= ? ?
( )
( )
( )
1 2
(17) ( min_ sup) , ,...,
(18)
sup ( )(19)  100%
sup ( )
(20)
K
i
i
i K j j j
i
for
if c generate frequent itemsets L I I I
L L
port X Ycomputing confidence X Y
port X
get rules R R X Y
?
?
? ? ? =
=
 = ×
? 



 
5. A Fast Distributed Matrix Association 
Rules Mining Algorithm weka4ws-based 
(FDMAR) 
Association rule mining is compartmentalized into 
two sub-questions: 
1) Find all frequent sets in the data sets D : the 
frequent of each item must at least as big as scheduled 
minimum support . 
2) Generate association rule according to the 
frequent itemsets: the rules must at least as big as the 
minimum support and minimum confidence. 
 In this algorithm we can get a matrix made up of 0 
and 1 by scanning the database only once , and then 
compute the inner product of vectors . 
5.1 Reasoning and Proving for Fast Distributed 
Matrix Association Rules  
Traditional distributed algorithms need to generate 
and the judge frequent ittemsets in every local node , 
but in grid environment the distributed matrix 
association rules algorithm based on weka4ws need to 
scan the database only once and provide every local 
matrix parameter , need not carry out local 
judgement[9]. Because of the number of transactions 
included in the database on every local node may be 
different, the size of Boolean matrix that causes to 
generate is not uniform ( the number of row in matrix 
mainly), if every local node transmits the parameter of 
the matrix that is not uniform to global node, it can 
bring great trouble to the later handling. We have 
solved this problem with a kind of ingenious handling 
in algorithm, carried out illation for theory of model 
214
and strict mathematics proof, and inspected the validity 
and correctness of algorithm with specific example. 
Definition 6 : for any given transaction database D, 
suppose: 
:f D A?   ( ) ( )ij m nA f D r ×= =  
1,
( 1,2,..., ; 1,2..., )
0,
i j
ij
i j
I T
r i m j n
I T
?


= = =
 ?


?
:F A T?   ?  ( ) ( )T n nT F A A A ×= =  
11 12 1
22 2
n
n
nn
t t t
t t
T
t
 
 	
 	
=
 	
 	

 


 
 
Database D can be mapped on the Boolean matrix A 
with the effect of  function f  by scanning the database 
only once, and A can be mapped on the matrix T with 
the effect of  function F.  
Definition 7: Let ( )ijA a=  be m-by-s matrix, where 
ija denote the element in the thj column of thi row in 
A . Let ( )ijB b=  be s-by-n matrix, where ijb denote 
the element of  in the thj column of thi row in B .C is 
the product of matrix A and B, 
=C AB .where ( )i j m nc ×=C
?
1 1 2 2
1
s
i j i j i j i s s j ik k j
k
c a b a b a b a b
=
= + + + =


   
1, 2, , ; 1, 2, ,i m j n= =  . 
Definition 8: Let ( )ij m nA a ×=  be m-by-n matrix, 
divide A into M different matrixes 1 2, ,..., MA A A , 
where 
11 1
1
n
m mn m n
a a
A
a a
×
 
 
=
 
 
 

  

11 1
1
1
n
s sn s n
a a
A
a a
×
 
 
=
 
 
 

  

(s+1)1 (s+1)
2
(s+t)1 (s+t
...
n t n
a a
A
a a
×
 
 
=
 
 
 

  

n
)
 
1)1 1)
1
M
m mn r n
a a
A
a a
×
 
 
=
 
 
 

  

( m- r + ( m- r + n 1
2
M m n
A
A
A
A
×
 
 
 
=
 
 
 

 
satisfies ...s t r m+ + + = . 
Definition 9: Databases distributed in M different 
grid local nodes, we can obtain Boolean matrix 
iA
 and 
local association transaction matrix 
( ) ( )Ti i i i n nT F A A A ×= =
by scanning the 
database
iD
only once in node i  . 
During the process of distributed association rules 
mining , the itemsets included in each local database is 
invariable and made up of  one or some one in itemsets
1 2 nI={i , i ,...,i }(1 j n)? ? ,but the number of 
transactions in local database 1 2 m T={ t , t ,...,t },  
pt (1 p m)? ? is variational, in order to insure the 
addition-enable and coherence, calculate 
( )Ti i i n nT A A ×= , in this way we can ensure that 
transaction matrix iT  is a n-by-n matrix, iT can be 
denoted as follows: 
11 12 1
22 2( ) ( )
n
nT
i i i n n ij n n
nn
t t t
t t
T A A t
t
× ×
 
 	
 	
= = =
 	
 	

 


 
Actually ( )1 2, ,..., nA ? ? ?= , i?  is a m dimensional 
vector, according to the definition of inner product we 
know , , ( )i j i i k i j? ? ? ?? = ? , namely the 
maximal value in iT  and denote it as k, k must be on 
the leading diagonal[10]. 
Prove ?
1 1
1
( 1, 2..., , 1, 2..., )
s
T
ik kj
k n n
A A a a i n j n
= ×
 
? = ? = =
 
 

2 2
1
( 1, 2..., , 1,2..., )
s t
T
ik kj
k s n n
A A a a i n j n
+
= + ×
 
? = ? = =
 
 

( 1)
( 1, 2..., , 1, 2..., )
m
T
M M ik kj
k m r n n
A A a a i n j n
= ? + ×
 
? = ? = =
 
 

1 1 2 2 ...
T T T
M MA A A A A A? + ? + + ?
 
215
1 1 ( 1)
...
s s t m
ik kj ik kj ik kj
k k s k m r n n
a a a a a a
+
= = + = ? + ×
 
= ? + ? + + ?
 
 
  
1
( 1,2..., , 1, 2..., )
m
ik kj
k n n
a a i n j n
= ×
 
= ? = =
 
 

1
( 1,2..., , 1,2..., )
m
T
ik kj
k n n
A A a a i n j n
= ×
 
? = ? = =
 
 


 
1 1 2 2 ...
T T T T
M MA A A A A A A A? ? + ? + + ? = ?
   
5.2 Description of Algorithm 
INPUT: minimum support threshold  
OUTPUT: global frequent itemsets and association 
rules 
1) Scanning the transaction database D for each 
local node i , building corresponding Boolean matrix 
iA  , providing the expected minimum support 
Min_sup. 
2) Computing and obtaining the local association 
transaction matrix  ( ) ( )Ti i i i n nT F A A A ×= = . 
3) Sending the local association transaction matrix 
iT  to global computing node for each local node i . 
4) The global computing node receive the 
( 1, 2..., )iT i N= from each local node i , and obtain 
n-by-n global matrix
1 2( ) ...ij n n NT t T T T×= = + + + , 
T must be a diagonal matrix. 
5) Scanning the leading diagonal elements in each 
row of T, if 11 22min_ sup( , ,..., )ii nnt t t t< scanning 
next row, finding the element 
11 22min_ sup( , ,..., )ii nnt t t t? on the leading 
diagonal(the other elements whose value is not bigger 
than those on the leading diagonal in every row) . 
6) Computing the number ? of elements whose 
value is bigger than min_sup, namely judging whether  
min_ supijt ?  is tenable or not. Note the column j , 
get the vector ( )1 2, ,..., ,i j j j? ?= ? , 
1 2, ,...,j j j? denote the column which the element in, 
then frequent k-itemsets ( )1 2, ,...,iK j j jL I I I ?= , 
looking for the next row that satisfy the condition until 
end, 
K
i
KL L=  . 
7) with the same way, we can receive the frequent 
(k-1)-itemsets 
11 K
i
KL L
?
?
=  ,frequent (k-2)-itemsets 
22 K
i
KL L
?
?
=  ,…, the rest may be deduced by 
analogy. 
5.3 Code for Algorithm 
1 2
: //
,..., // c
{ , ,..., ,} //
min_ sup // minimum support threshold
:
N
input I itemsets
N local omputing nodes
D D D D database distributed in nodes
output L frequent itemsets
=
1 2 Np , p p  
/ /
1 2
:
(1) 1
(2) ( )
(3)
(4) ( )
(5)
(6) ( ) ...
i th
i i
T
i i i n n
i th
ij n n
FDMAR
for each i N do
scan D at each i local computing node
generate boolean matrix A for each D
calculate T A A
send T for i local node to global node
calculate T t T T T
×
×
? ?
=
= = + + +
algorithm
( )
( )1 2
11 22
1 2
(7) min_ sup( , ,..., )  
(8)
(9) , ,..., ,
(10) , ,...,
(11)
(12)
K
N
ii nn
th
i
i
K j j j
i
K
look for t t t t and record i
count the number for the i row
get j j j
generate frequent itemsets L I I I
Next i
L L
?
?
?
?
?
= ?
? ? =
= 
5.4 Analysis for Performance of Algorithm 
The improvement of algorithm in this paper 
incarnated in some following aspects:  
1)local node need to scan local database only once, 
then get a Boolean matrix , need to return once 
operating result to global node with a matrix parameter 
only. It has decreased greatly the time consumption 
that interactive communication brings.  
2) In order to simplify the process of calculating , 
carry out matrix operation ( ) ( )Ti i i i n nT F A A A ×= = once  
in local node, then execute additive operation of matrix 
in global node, achieve the transformation from 
concentration to distribution.  
3) The problem of seeking frequent itemsets has 
became the problem of operating matrix , avoid to 
generate huge candidate itemsets and the problem for 
the join step and prune step, and decrease the time 
complexity and space complexity [11].  
4) Start with the leading diagonal elements of matrix 
directly, find out the rows that satisfy the minimum 
support threshold, reduce the time for scanning matrix. 
5) In the process of seeking frequent itemsets, make 
use of a kind of scanning method dexterously to avoid 
carry out the logic operation "and" between vectors .  
6. The Experiment Analyzes 
6.1 Experiment 1 
This experiment data comes from the customer 
information database in 2007 of insurance company in 
yangzhou city, Jiangsu province. Experiment data is 
216
composed by 5000 samples, in order to illustrate the 
algorithm clearly, we extract 20 samples from the 
datasets randomly and suppose that 20 samples are 
distributed 3 different local computing nodes. 
TABLE 1  DATA  IN NODE 1 
TID List of item_IDs 
1 I1?I5?I12 
4 I2?I8?I12 
5 I2?I8?I11 
9 I2?I6?I10 
13 I3?I7?I12 
18 I3?I7?I12 
TABLE 2  DATA IN NODE 2 
TID List of item_IDs 
3 I1?I6?I14 
8 I2?I8?I11 
10 I2?I8?I11 
12 I3?I6?I10 
15 I3?I7?I12 
17 I4?I9?I13 
20 I3?I7?I12 
TABLE 3  DATA IN NODE 3 
TID List of item_IDs 
2 I1?I6?I13 
6 I2?I8?I11 
7 I2?I8?I11 
11 I2?I8?I13 
14 I3?I7?I12 
16 I3?I7?I11 
19 I3?I7?I12 
We can obtain as follows by scanning the database? 
1
6 14
1 0 0 0 1 0 0 0 0 0 0 1 0 0
0 1 0 0 0 0 0 1 0 0 0 1 0 0
0 1 0 0 0 0 0 1 0 0 1 0 0 0
0 1 0 0 0 1 0 0 0 1 0 0 0 0
0 0 1 0 0 0 1 0 0 0 0 1 0 0
0 0 1 0 0 0 1 0 0 0 0 1 0 0
A
×
 
 
 
 
=
 
 
 
 
 
 
2
7 14
1 0 0 0 0 1 0 0 0 0 0 0 0 1
0 1 0 0 0 0 0 1 0 0 1 0 0 0
0 1 0 0 0 0 0 1 0 0 1 0 0 0
0 0 1 0 0 1 0 0 0 1 0 0 0 0
0 0 1 0 0 0 1 0 0 0 0 1 0 0
0 0 0 1 0 0 0 0 1 0 0 0 1 0
0 0 1 0 0 0 1 0 0 0 0 1 0 0
A
×
 
 
 
 
 
=
 
 
 
 
 
 
 
3
7 14
1 0 0 0 0 1 0 0 0 0 0 0 1 0
0 1 0 0 0 0 0 1 0 0 1 0 0 0
0 1 0 0 0 0 0 1 0 0 1 0 0 0
0 1 0 0 0 0 0 1 0 0 0 0 1 0
0 0 1 0 0 0 1 0 0 0 0 1 0 0
0 0 1 0 0 0 1 0 0 0 1 0 0 0
0 0 1 0 0 0 1 0 0 0 0 1 0 0
A
×
 
 
 
 
 
=
 
 
 
 
 
 
     
1
2
3
A
A A
A
 
 
=
 
 
 
 
validate whether the equation 
1 1 2 2 3 3
T T T TA A A A A A A A+ + = is tenable or not ?  
calculate with MATLAB software, apparently the 
equation 1 1 2 2 3 3
T T T TA A A A A A A A+ + =  is tenable. 
, , , ,, ,
Fig.2  Global association transaction matrix 
For example: denoted as figure 2? TA A  is a 
global association transaction matrix ? find out 
leading diagonal elements (3,8,8,1,1,4,7,7,1,2,6,9,3,1)iit =  
min_ sup 20 25% 5= × = , if the value of leading 
diagonal element is smaller than 5, we can confirm 
that it isn’t to satisfy minimum support threshold, that 
is to say  it is impossible to generate frequent itemsets 
in the current row. So, we only scan these rows which 
the elements ( )22 33 77 88 1111 1212, , , , ,t t t t t t  located, for 
the 2 ,3 ,7 ,8 ,11 ,12th th th th th th row in matrix?  the 
vectors that satisfy minimum support are respectively:  
( ) ( ) ( )2 3 72,8,11,3 , 3,7,12,3 , 3,7,12,3? ? ?= = =
( ) ( ) ( )8 11 122,8,11,3 , 2,8,11,3 , 3,7,12,3? ? ?= = =
  So, frequent 3-itemsets { } { }{ }3 3 7 12 2 8 11, , , , ,L i i i i i i= , 
we can get frequent 2-itemsets 2L with the same 
method, in addition, we discover that frequent 2-
217
itemsets 2L  can be gained from frequent 3-
itemsets 3L  directly. 
6.2 Experiment 2 
The hardware environment for experiment in local 
area network include: 4 personal computer ,where one 
is used to be as global computing node, the others are 
used to be as local computing node which distributed 
in geography for data mining. This experiment data 
comes from the customer information database in 2007 
of insurance company in yangzhou city, Jiangsu 
province. Experiment data is composed with 5000 
samples,  it is tested in two ways: ? 5000 samples 
approximate in average( node 1: 1666, node 2:  1667, 
node 3: 1667 )distributed 3 different local computing 
nodes.?5000 samples are centralized in the global 
node. where DARBM(Distributed Association Rules 
Based on Matrix, DARBM),FDMAR(Fast Distributed 
Matrix Association Rules )?DARB-M and FDMAR 
adopt mode? , appriori and im_appriori(improved 
appriori)adopt mode ??the results for the experiment 
as follows: 
 
Fig.3  Comparison for the experiment  
7. Conclusion 
Association rule mining is a very important problem 
in the field of data mining. This paper puts forward a 
new distributed mining algorithm for matrix 
association rules WEKA4WS-Based in grid 
environment , and embed it in WeKa4WS frame. It is 
excellent that it can reduce the times of accessing 
database and need not to generate candidate item sets 
based on Boolean matrix for Apriori algorithm need to 
generate plenty of candidate itemsets[12]. The new 
algorithm need to scan the database only once and as 
the structure of the Boolean matrix is simple, it can be 
understood easily, and it is easy to compute without 
generating plenty of candidate item sets. It is specially 
important that this paper combines the grid with web 
service technology, builds the distributed data mining 
system under the grid environment, and also proves the 
validity of algorithms and feasibility of system. It has 
upper veracity and better effect for distributed 
association rules mining. 
8. References 
[1] I an. Foster. The autonomy of the Grid, 2006:10-24. 
[2] Li Zeng, Lida Xu, Zhongzhi Shi, Maoguang Wang, 
Wenjuan Wu,“Distribued Computing Environment: 
Approaches and Applications”,IEEE, (2004), pp.3240-3244. 
[3] J. Chattratichat, J. Darlington, Y. Guo, S. Hedvall, M. 
Kohler, and J.Syed, “An Architecture for Distributed 
Enterprise Data Mining”. (2002) 
[4] Haimonti Dutta, “Empowering Scientific Discovery by 
Distributed Data Mining on the Grid Infrastructure”. (2007). 
[5] Mario Cannataro, Andrea Pugliese,Domenico Talia, Paol 
Trunfio,“Distributed Data Mining on Grids: Services,Tools, 
and Applica tions”.IEEE Transactions on Systems, Man, and 
Cybernetics. 34(6) (2004),pp.2451-2465. 
[6]  OASIS Web Service Resource Framework (WSRF) TC, 
http://www.oasisopen.org/committees/tc_home.php?w
g_abbrev=wsrf,(2004). 
[7] The Globus Toolkit. http://www.globus.org/toolkit/ 
[8] Czajkowski K, et al. The WS-Resource Framework 
Version 1.0.http://www-106.ibm.com/developerworks 
/library/ws-resource/ws-wsrf.pdf .15 May , 2006. 
[9] Shaikh Ali A, Rana OF, Taylor IJ. Web  Services 
Composition for Distributed Data Mining. Workshop onWeb 
and Grid Services for Scientific Data Analysis 2005. 
[10] Eugenio Cesario. Distributed Data Mining Model as 
Services on the Grid[C],2008 IEEE International Conference 
on  Data Mining Workshops,2008. 
[11] Liu Saxing , Tan Liqiu , Xiong Yongjun. A Study on 
Association RulesnMining Algorithm and Its Application[J]. 
Engineering and Computer Science, 2007. 
[12] Ian H.Witten, Eibe Frank. Data Mining practical 
Machine Learning Tools and Techniques [M]. Beijing: China 
Machine press,2006.   
 
 
 
218
