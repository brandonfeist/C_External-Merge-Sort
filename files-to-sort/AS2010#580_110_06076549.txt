Data Stream Clustering Algorithm Based On Active Grid Density  
 
Jing Yang, Wenxin Zhu, Jianpei Zhang, Yue Yang 
College of Computer Science and Technology 
Harbin Engineering University 
Harbin 150001, China 
{yangjing@hrbeu.edu.cn, zhuwenxin_210@yahoo.cn} 
 
Abstract—CluStream is a representative data stream cluster 
algorithm; however, it is not able to find arbitrary clusters in 
shape and deal with boundary points effectively. A new 
algorithm which is based on active grid density AGD-Stream is 
proposed to solve these problems in this paper. The algorithm 
adopts a density decaying technology to capture the dynamic of 
data stream, and extracts the boundary point of grid to delete. 
Besides, this paper uses activity concept to judge activity of the 
grid density, neglecting the inactive grid density and 
preserving the active gird density for clustering. Experiment 
shows that AGD-Stream can not only find arbitrary clusters in 
shape, but also deal with boundary points. Compared with 
CluStream, AGD-Stream is better in time complexity and 
accuracy. 
Keywords- data mining; positive and negative association 
rules; dual confidence; minimum correlation 
I. INTRODUCTION 
With the development of information technology, 
people's lives are flooded with more and more data in the 
form of streams every day. As the data streams have the 
characteristics of continuity, potentially infinite, high 
mobility etc [1], making the data stream mining algorithm 
can only be examined in sequence, one pass or a limited 
time [2]. So, the traditional mining methods are difficult to 
meet its need in the limited time. In the recent study, the 
data stream clustering algorithm has been attracting the 
attention of many domestic and foreign researchers, 
proposing a lot of algorithms. Initially, L.O ‘Callaghan [3-5] 
et al proposed several clustering algorithms of data stream, 
which can not express the dynamic for data stream. In 2003, 
a popular data stream clustering algorithm CluStream[6] was 
proposed by Aggarwal. The algorithm uses a two-tier 
online/offline framework for data streams clustering. 
According to the pyramid time frame structure to store the 
summary statistics of micro-cluster for the macro cluster. 
The drawback of CluStream is: It can only recognize the 
spherical clusters, but not reveal clusters of arbitrary shapes; 
it can not handle the boundary points, and clustering 
accuracy is low. 
Recently, some other algorithms such as ACluStream[7], 
DenStream[8], D-Stream[9]and the RTCS[10] are supposed. 
These algorithms can identify the arbitrary clusters in shape, 
however, the time complexities of clustering are a little 
high, leading to the low efficiency of these algorithms; 
besides, some effective data points were recorded as a 
boundary point in error and delete in the process of 
clustering. So, these algorithms can neither deal with the 
problem of boundary points better, nor solve the shortage of 
CluStream effectively.  
In order to solve above problems, a new algorithm for 
clustering stream data is proposed,(Data stream clustering 
algorithm based on active grid density, AGD-Stream) it can 
not only find clusters of arbitrary shapes, but also deal with 
the problem of boundary points effectively. First, the data 
space grid is divided into a grid structure which is formed 
by a number of small cube grids, then the data stream is 
mapped to this structure, applying the concept of density to 
form the concept of grid density. And, the algorithm adopts 
a density decaying technology to capture the dynamic of 
data stream, and extracts the boundary point of grid to 
delete. To use concept of activity to judge active of the grid 
density, neglecting the inactive grid density and preserving 
the active gird density for clustering. Experiment shows that 
AGD-Stream is better than CluStream in time complexity 
and accuracy. 
II.  BASIC DEFINITIONS 
In this paper, we need to do the following work for the 
demand of grid division: Assume that the input data has n 
dimensions, and each input data record is defined in the 
space R: 1 2 nR R R R= × × ×" , where iR  is the definition 
space for the ith dimension. Now, we partition the n 
dimensional space R into certain spatial grids. Suppose for 
each dimension, its ith dimension space iR (i = 1, 2, 3… n) 
is divided into ir  partitions ( ,1) ( ,2) ( , )ii i i i rR R R R= ? ?" .Then 
the grid made up by data space R is partitioned into 
1
n
ii
N r
=
= ?  grids. For a arbitrary density grid g that is 
composed of
1 21, 2, , nj j n j
R R R× × ×" , (
ij =1,…, ir ) we denote 
it as g=(j1, j2…,jn).If being a data record { }1, , nX x x= " ,we 
map it to a partitioned density grid g as follows: g(x)=(j1, 
j2…,jn),where ( , ii i jx R? ). 
Definition 2.1 (Density weight).Suppose x is a data 
record of data stream, then the density weight for x  is a 
function which changes with time t: 
( )( , ) ct t t T xD x t ? ?? ?= =   (1) 
2010 Fifth International Conference on Internet Computing for Science and Engineering
978-0-7695-4339-0/10 $26.00 © 2010 IEEE
DOI 10.1109/ICICSE.2010.12
7497
Where )1,0(?? is a constant, called the decay factor, 
ct is the time that x arrives, ( )T x is its time stamp, ct = ( )T x . 
In general speaking, density weight describes the effect 
degree of data record x on clustering at time t. Initial density 
weight for a new data is 1, and it is index decaying with the 
time increasing. Actually, the time stamp for any data ix of 
data records { }1, , nX x x= " can be expressed by ( )iT x . 
Theorem 2.1 Suppose ( )X t is the set of all data records 
that arrive from 0 to t, then the sum of density weight of all 
data records meets: 
( )
1lim ( , )
1t x x t
D x t ??? ?
=
?
?   (2) 
Proof Let all data records that arrive from 0 to t in X (t) 
are 1, 2, , tx x x" , where ix arrives at the ith time. Their 
density weight is 1 1, , ,1t? ?? "  respectively at the time t, and 
their sum is: 
1
( ) 0
( , ) (1 ) (1 )
t
n t
x X t n
D x t ? ? ?
?
? =
= = ? ?? ?  
when t ? ?  lim((1 ) (1 )) 1 (1 )t
t
? ? ?
??
? ? = ? . 
Definition 2.2 (Activity) The activity is defined as the 
degree that grid accepts the new arrived data at some time 
section  
Definition 2.3 (Grid Density) For a grid g, at a given 
time t, any data record ix of data records { }1 , , nX x x= " has 
a density weight ( , )iD x t ,so the grid density is defined as the 
sum of all density weights at or before t: 
1
( , ) ( , )
n
i
i
D g t D x t
=
=?   (3) 
Theorem 2.2 Suppose a grid g receives a new data record at 
time nt , and suppose the time when g receives the last data 
record is lt ( nt > lt ), then the density of g can be updated as 
follows:  
n
0,
( , )
( , ) 1,n l
n l
t t
l
t t
D g t
D g t? ?
? >>?
= ?
+?? ot her
 (4) 
Proof Let { }1,..., mX x x= be the set of all data records in g 
at time lt , x is a new arrived data at nt , we have: 
1
( , ) ( , )
m
l i l
i
D g t D x t
=
=?   (5) 
According to (1), we have that: 
( ) ( )( , )
( , ), ( 1, , )
n i n l l i
n l
t T x t t t T x
i n
t t
i l
D x t
D x t i m
? ? ?
?
? ? ?
?
= =
= = "
  (6) 
Therefore, we have: 
1
1
1
1
1
( , ) ( , ) ( , )
( , ) ( , )
( , )
( , ) 1
( , ) 1
( , ) 1
n l
n l n n
n l
n l
n l
m
n i l n
i
m
t t
i l n
i
m
t t t t
i l
i
m
t t
i l
i
m
t t
i l
i
t t
l
D g t D x t D x t
D x t D x t
D x t
D x t
D x t
D g t
?
? ?
?
?
?
=
?
=
? ?
=
?
=
?
=
?
= +
= +
= +
= +
= +
= +
?
?
?
?
?
 (7) 
The definition 2.2 and definition2.3 show that, with the 
time increasing infinitely, if the data does not arrive at a 
grid, then we can say this grid has lower grid activity, and 
its grid density will decay gradually. Moreover, the previous 
data in grid can not affect the following clustering, so we 
can record its grid density as 0; Relatively, if the data 
always arrive at a grid, then this grid has higher grid 
activity. In the process of clustering data streams, the grid 
density of a grid with high activity is called the active grid 
density. In order to meet the characteristics of the data 
stream and save memory space, we only need a higher 
activity grid to process clustering 
Definition 2.4 (Dense grid and sparse grid) Let mC be 
the threshold for dense grid, lC be the threshold of sparse 
grid, lt be the last data received. 
(1) if ( , )n mD g t C? ,then we call it a dense grid. 
(2) if ( , )n lD g t C?  and ln tt >> ,then we call it a 
sparse grid. 
(3) if ( , )l n mC D g t C? ? ,then we call it a transitional 
grid 
To some grid, if the data does not arrive at a grid for a 
long time, leading to the number of data in the grid is very 
small, the impact of the history data on data clustering is 
negligible, we call such grid a sparse grid. Relatively if the 
data in the grid grows to a certain quantity, we call the grid 
a dense grid. A dense grid may degenerate to a transitional 
or sparse grid if it does not receive new data for a long time. 
On the other hand, a sparse grid can upgrade to a 
transitional or dense grid after it receives some new data 
records [10]. 
By definition 2.4, the density of the grid will change 
over time. Therefore, after a period of time, the density of 
7598
each grid should be inspected and the clusters should be 
adjusted. Using gap to express the time interval, we use [9] 
definition of the gap : 
}
}{
2 2
2
min log , log
log (max , )
l m
m l
l m
m l
c N cgap c N c
c N c
c N c
?
?? ? ? ?
= ?? ? ? ??? ? ? ??
? ?
?
= ? ?
?? ?
 (8) 
where, N represents the number of grid.  
Definition2.5 (Eigenvector) The eigenvector of a grid g 
is a tuple , , ,g l mV G D t t< > ,where G is coordinates of grid 
centre, mt is the last time when g is updated, lt is the last time 
when g is removed from grid list as a sporadic grid(if ever), 
gD is the grid density at the last time. 
Definition 2.6 (Boundary point) [10] A boundary point is a 
data object that meets the following two conditions:  
(1) It is located in the edge of dense data points;  
(2) It has two or more characteristics of clustering 
III. DATA STREAM CLUSTERING ALGORITHM BASED ON 
ACTIVE GRID DENSITY 
A. Basica Idea  
The basic idea of AGD-Stream is: First of all, the data 
space grid should be divided into a grid structure which is 
formed by a number of small cube grid, and data stream is 
mapped to this structure; Then, apply the concept of density 
to form the concept of grid density, judge the grid density 
according to eigenvector; and use technology of density 
decay to capture dynamics of data stream, then extract the 
boundary point of grid to delete. Besides, this paper uses the 
concept of activity to judge the activity of the grid density: 
1) if the grid density is inactive, it means that there are not 
new dataset arrive at some time, then it presents the sparse 
grid, we need neglect.2) if the grid density is active, it 
means that there are new dataset arrive at some time, then it 
presents the dense grid, so we keep it for clustering at last. 
The specific graphical representation in Fig.1 
B. Algorithm Description 
AGD-Stream ( { }1, , nX x x= " , t)  
{Initialize (grid, g); // Initialization grid  
Initialize (grid_list, h); // Initialization a grid _list h  
  
 
Figure 1 Illustration of grid division for AGD-Stream  
when there comes the data stream:  
        Receive ( { }1, , nX x x= " , t); //receive data stream 
( { }1, , nX x x= " , t) and record  
Mapping(X, g); // place the data into a density grid  
for (i=1; i <= n; i++)//During the periodic inspection, extract 
the boundary point from grid. 
        if ( ix  is on the edge) and (t mod gap <> 0)   
            for (i=0, i<=n, i++) 
                 switch ( ix ) 
                    {case ‘not on the edge’: judge the active of grid 
density; update (V); break; //If the grid density is not active, 
it means the grid not has new data arrives; and the grid will 
become a sparse grid or transitional grid so that it will be 
deleted. 
                      case ‘on the edge’: inspect grid density and 
update (V); break; // judge if it meets another condition of 
boundary point.} 
        else 
Update (grid); // otherwise updated grid to adapt to the new  
distribution of data stream  
          if (density (g)) // if g is active grid density, add it to 
the grid_ list. 
                Insert g into grid_list;  
          if (t mod gap==0) // 
Cluster (grid);  
} 
IV. EXPERIMENTAL RESULTS 
Experimental environment: Intel Pentium 4, CPU 
3.00GHz, 1.00GB memory, Windows XP Operating System, 
using MATLAB to compile. The tested set is a real data set 
used by the KDD CUP-99. It contains network intrusion 
detection stream data collected by the MIT Lincoln 
laboratory. This data set contains a total of five clusters and 
each connection record contains 42 attributes. As in [6], all 
the 34 continuous attributes are used for clustering; In all 
the experiment, let mC =3.5, lC =0.9, ?=0.9 . 
A. Time Complexity Analysis 
The time complexity of algorithm can truly reflect its 
efficiency. In this experiment, we use KDDCUP99 data sets 
to compare and analyze AGD-Stream and CluStream on the 
time complexity. The results shown in Figure 2 
0
2
4
6
8
10
5 10 15 20 25 30
Length of Stream(k)
R
un
ni
ng
 T
im
e(
s)
AGD-Stream CluStream
 
 
Figure 2 Comparison of time complexity 
7699
It can be seen from Figure 2, with the increasing length 
of the data stream, both of the algorithms have a linear 
increasing trend. But the time CluStream spent is much 
more than the AGD-Stream spent significantly and 
CluStream takes three to four times more clustering time 
than AGD-Stream takes. For example, when the length is 
15, both the algorithms corresponding time points approach 
to 2s, 6s, respectively. This shows that the time complexity 
of AGD-Stream on clustering is significantly lower than 
CluStream, which also reflects that the AGD-Stream has 
more efficient. 
B. Clustering Accuracy Analysis 
AGD-Stream still use KDDCUP99 data sets to com-
pare its accuracy with CluStream. The data sets are divided 
into three classes: len=0.02, len=0.04, len=0.05.The results 
are shown in Figure 3-1, 3-2. 
In Figure 3, len indicates the size of each partitioned 
segment in the normalized dimensions. For example, when 
len = 0.02, there are 50 segments in each dimension. Both 
the Figures show that the average clustering accuracy of 
AGD-Stream is higher than CluStream’s, and the highest 
percent of AGD-Stream is 99%;while CluStream’s is 
98.7%.When len=0.02,the average accuracy of AGD-
Stream is 98%,higher than 97.6% of CluStream and when 
len=0.05, the clustering accuracy of AGD-Stream is 0.2% 
higher than CluStream Besides, we can see that: Neither 
dividing grid more fine ,more better, nor too tough. If some 
grid is divided too fine, it is much easier to part the data in 
the same cluster into other clusters, resulting in lower 
clustering accuracy. While, if it is too tough, it will lead 
some 
 
 
Figure 3-1 Clustering accuracy of CluStream 
 
 
 
Figure 3-2 Clustering accuracy of AGD-Stream 
data in different clusters into same cluster, and it also results 
in lower clustering accuracy. 
V. CONCLUSION 
In this paper, a new algorithm based on active grid 
density for clustering stream data was proposed. The data 
space grid is divided into a grid structure which formed of a 
number of small cube grid, then the data stream is mapped 
to this structure .And this algorithm adopts a density 
decaying technology to capture the dynamic of data stream, 
then extracts the boundary point of grid to delete it. Besides, 
this paper uses the concept of activity to find active grid 
density, and clustering at last. The algorithm can not only 
find clusters of arbitrary shapes, but also deal with the 
problem of boundary points effectively. The algorithm also 
references gap interval as the time period, reducing the 
amount of computation. Experiment shows that AGD-
Stream algorithm, compared with CluStream, has lower 
time complexity and better clustering accuracy. 
ACKNOWLEDGMENT 
This work is sponsored by the National Natural Science 
Foundation of China under grant number 61073043, 
61073041; the Fundamental Research Funds for the Central 
Universities of China under grant number HEUCF100602; 
Harbin Special Funds for Technological Innovation Research 
under grant number 2010RFXXG002 and the Natural 
Science Foundation of Heilongjiang Province under grant 
number F200901. 
REFERENCES 
[1] J. Han and M. Kamber, Data mining: concepts and technique, 2nd ed., 
Morgan Kaufmann:Elsevier Inc,2006,pp.467-589. 
[2] X. Zhang and W. Zeng, “Research and advances of real-time data 
stream clustering,” Computer Engineering and Design,vol.30, pp. 
2177-2181,May 2009. 
[3] S. Guha, R. Motwani, N. Mishra and L. O’Callaghan,“Clustering data 
streams,” Annu Symp Found Comput Sci Proc, Nov.2000,pp.359-
366. 
[4] S. Guha, R. Motwani, N. Mishra and L. O’Callaghan,“Clustering data 
streams:Theory and practice,”IEEE Trans Knowl Data Eng ,vol.15, 
May/June 2003,pp.515-528, doi: 10.1109/TKDE.2003.1198387. 
[5] L. O’Callaghan, N. Mishra, A. Meyerson, S.Guha and R.Motwani, 
“Streaming-data algorithms for high quality clustering,”Proc Int Conf 
Data Eng,Febrary 2002,pp.685-694,doi: 10.1109/ICDE.2002.994785. 
77100
[6] C.C. Aggarwal, J. Han, J. Wang, and P.S.Yu “A framework for 
clustering evolving data streams,”Proceedings of the 29th VLDB 
Conference, Germany: Berlin,2003,pp.81-92. 
[7] W. Zhu, J. Yin,and Y. Xie “Arbitrary clusters in shape Algorithm for 
Clustering Data Stream,” Ruan Jian Xue Bao, vol.17,March 
2006,pp.379-387, doi:10.1360/jos170379. 
[8] C. Feng, M. Ester ,W. Qian and A. Zhou“Density-Based Clustering 
over an Evolving Data Stream with Noise,” Proc. Sixth SIAM Int. 
Conf. Data Mining, vol.2006,pp.328-339, April 2006. 
[9] Y. Chen and L. Tu“Density-Based Clustering for Real-Time Stream 
Data,” Proc. ACM SIGKDD Int. Conf. Knowl. Discov. Data Min, 
pp.133-142, August 2007,doi: 10.1145/1281192.1281210. 
[10] J. Chen, C. Tan and A. Yong,“A Grid and Density-based Clustering 
Algorithm for Processing Data Stream,” Proc. -Int. Conf. Genet. 
Evol. Comput.,WGEC,Sept.2008,pp.517-
521,doi:10.1109/WGEC.2008.32. 
78101
