Interesting knowledge exploring for product 
component selection 
Li Yu 
Academy of Modern Service Industries 
Shanghai University of Finance & Economics 
Shanghai, China 
yuli_shufe@163.com
Yun Chen 
School of Publics Economics&Administration 
Shanghai University of Finance & Economics 
Shanghai, China 
chenyun@mail.shufe.edu.cn 
Yuebo Liu 
Division of Science & Technology 
Shanghai university of Engineering Science 
Shanghai,China 
liuyuebo@gmail.com 
Abstract—During the product configuration design stage, it is 
important to find useful knowledge to reduce the dedicated 
efforts of engineers. To fulfill this task, the quality and 
interestingness of knowledge plays the decisive part. This paper 
utilizes Apriori algorithm to mine rules from historical data base. 
In addition the traditional criterions - support and confidence, 
the criterion - interestingness is also applied to filter rules that 
might misguide design engineers. The validity of the proposed 
model is illustrated by a case of electrical bicycles. 
Keywords- Apriori algorithm; customer needs; product 
component; product configuration design 
I. INTRODUCTION
Product configuration design is a form of design that maps 
a set of functional requirements into an assembly of selected 
pre-defined components while satisfying a set of constraints 
[1]. To meat the increasing and time-varying marking niches, 
companies have to accomplish this stage within less time and 
expense. Discover product configuration knowledge from 
existing design cases is an efficient way to handle this situation 
[2]. However, configuration knowledge that embodied in 
historical database is implicit and difficult to interpret. Then, it 
becomes imperative for engineers to find useful information to 
meet various functional requirements. 
Past researches on product configuration design explore 
multiple solutions to learn knowledge from historical design 
cases. Romanowski and Nagi proposed a novel, systematic, 
data mining-based methodology to generate generic bills of 
materials from historical databases [3]. Based on a set of 
product data comprising product requirements specification 
and configuration information, Huang et al. adopted an 
association rule mining algorithm to discover useful patterns 
between requirement specification and product components, 
including the correlation among product components [4]. 
Similarly, Shao et al. combines data mining and rough set to 
tackle the relationship between customer needs, product 
specifications and configuration alternatives [5].  
It can be seen that mining association rules from the 
existing design cases is an effective method to reduce the 
dedicated efforts of engineers. To guarantee the quality of the 
association rules, most researches use support and confidence 
criterion to select valuable rules. However, rules with high 
support and confidence still could be useless or even 
misleading [6]. Against this deficiency, our paper introduced a 
new criterion - interestingness to maintain the correctness and 
interestingness of configuration knowledge. This criterion can 
be used to filter uninteresting rules out of the rule base. The 
remainder can then help engineers educe suitable product 
components, i.e. design alternatives, for different functional 
requirements. 
The rest of this paper is organized as follows. In section 2, 
the framework of the work is discussed. In section 3, the 
association rule extraction with three criterions is illustrated. In 
section 4, a case study of association rule extraction in a 
electrical bicycle company is presented. Finally in section 5, 
the main contribution of this paper is summarized and the 
future work is discussed. 
II. PROBLEM FORMULATION
Product configuration refers to the process through which 
the customer’s needs are translated into the product 
information needed for tendering and manufacturing (typically 
product cost, bill of materials (BOM), production cycle, etc.) 
[7]. And product configuration design is a process that 
resources and relative quantities must be carefully selected or 
developed through an iterative process for each feasible 
configuration [8]. To improve the working efficiency and 
reduce the developing expense of product configuration 
design, design engineers should make full use of the 
knowledge of existing products or historical product [4]. Data 
mining is considered as an effective method to extract 
knowledge from the past design data. This paper utilize 
Apriori algorithm to mine association rules for supporting 
This research is supported by the Shanghai key scientific and 
technological project (Grant No. 08DZ1120500) 
978-1-4244-4994-1/09/$25.00 ©2009 IEEE
configuration design. The framework of the method can be 
seen in Fig. 1.  
Figure 1. Problem formulation  
In our method, association rule mining based product 
configuration design can be divided into four steps.  
 (1) At the beginning stage of product design, design 
engineers develop new components for different functional 
requirements based on their experience and design principles.  
(2) The successful design cases are stored in the 
historical database as references. Each case is composed of 
functional requirements (FRs) and corresponding 
configuration alternatives (DPs). 
(3) Configuration rules are extracted from existing 
design database using Apriori algorithm. In accordance with 
the three criterions: confidence, support and interestingness, 
good association rules are selected and stored in knowledge 
base. 
(4) When a new functional requirement emerges, 
designers can quickly derive suitable alternatives with the help 
of configuration rules.  
This paper focus on the third step of the whole process, 
i.e., association rule extraction from existing configuration 
cases with Apriori algorithm, which will be discussed in detail 
at the next section. Here, each configuration case contains 
several functional requirements and configuration alternatives.  
The functional requirements of a case can be described 
as a vector: pFV = 1 2( , ,..., )Ifr fr fr ,
},...,2,1{ Pp? where P  is the total number of function 
requirement vector and I  is the number of functional features 
or attributes. Each functional requirement attribute, 
[1,2,..., ]ifr i I? ? , may take on one out of a finite set of 
options, 1 2{ , ,..., }iJi i i ifr fr fr fr? , where iJ  denotes the 
option number of the thi  feature. Thus the requirement 
information of a particular case, pFV , can be depicted by a 
vector of certain options of these features. For example, 
2 1 3
1 2( , ,..., )p Ifr fr fr=FV , where 
2
1fr  refers to the second 
option of feature 1fr  that is chosen by the thp  case, 
1
2fr  the 
first option of feature 2fr , and 
3
Ifr  the third option of feature 
Ifr .
Similarly, the configuration alternatives of a case can be 
described as a vector qDV = 1 2( , ,..., )IIdp dp dp ,
{1, 2,..., }q Q? where Q  is the total number of 
configuration alternative vector and II  is the number of 
alternatives. Each configuration alternative, 
[1, 2,..., ]idp i II? ? , may take on one out of a finite set of 
options, 1 2{ , ,..., }iLi i i idp dp dp dp? , where iL  denotes the 
option number of the thi  alternative. Thus the requirement 
information of a particular case, pDV , can be depicted by a 
vector of certain options of these alternatives. 
Therefore, based on the design cases and product 
documentation, each configuration records T is depicted as 
follows: {( , ) 1, 2,..., }h h h H=FV DV , where H  is the 
number of historical configuration records. These coupled 
vectors that reflect the mapping relationship among functional 
requirements and configuration alternatives are used for 
association rule mining. It does help design engineers fulfill 
the configuration design task with less time and expense. 
III. RULE EXTRACTION WITH APRIORI ALGORITHM
Apriori algorithm is an association rule mining 
technology used to discover useful patterns in historical 
database [9]. It is widely used in many fields such as market 
analysis, financial management, manufacturing, geographic 
information analysis, etc.  
Traditional Apriori algorithm uses support and 
confidence to select rules. However, it is inadequate as those 
rules with high support and confidence still could be useless or 
even misleading [6]. To ensure the quality and interestingness 
of the extracted rules, this article uses three criterions while 
mining association rules. As illustrated in Fig. 2, association 
rules are obtained against support, confidence and 
interestingness. 
Figure 2. Association rule mining  
Firstly, use Apriori algorithm to generate association 
rules with high support and confidence. Assume that T =
{( , ) 1, 2,..., }h h h H=FV DV  is a database of configuration 
cases. Then, an association rule can be expressed as IF A 
THEN C, where A and C are specific attribute values of 
functional requirements and configuration alternatives 
separately. The support and confidence value of a association 
rule can be calculated as following equations: 
( & )sup(A C)= T A C
T
?                (1) 
( & )con( )
( )
T A CA C
T A
? =               (2) 
where T(A) is the number of cases in database T satisfying all 
the conditions in the antecedent A, T(A&C) is the number of 
samples in database T satisfying all the conditions in both 
antecedent A and consequent C, T  is the number of 
transactions. The support and confidence values fall between 
zero and one.  
To guarantee the quality of rules, minimal support and 
confidence threshold is set. The rules with high support and 
confidence are preserved. That is, only the rule that covers 
most of the configuration cases in database and has few 
negative cases will be selected to the association rule base. 
Secondly, interestingness is utilized to filter rules. To show 
the effect of interestingness, let us assume that a rule “IF A 
THEN C ( A C? )” whose support is 0.5 and confidence is 
0.6, i.e., ( & )sup(A C)= 0.5T A C
T
? = ,
( & )con( ) 0.6
( )
T A CA C
T A
? = = . Although the rule shows high 
support and confidence, it is not a good rule if the support of 
the consequent part C is 0.65, i.e., ( )sup( ) 0.65T CC
T
= = .
Denote the negative form of the above rule as IF A  THEN C. 
Its confidence is:  
( & ) ( ) ( & )con( ) 0.9 con( )
( )( )
T A C T C T A CA C A C
T T AT A
?
? = = = > ?
?
That is to say, A and C are in fact negative associated. This 
negative dependence leads to not considering A C?  as a 
good rule, otherwise engineers might make wrong decisions. 
Hence, the criterion of interestingness is applied to 
eliminate such rules. This paper uses a data-driven and 
domain-independent method to calculate the interestingness of 
a rule [6]:
sup( )I( ) 1
sup( ) sup( )
A CA C
A C
?
? = ?
×
.     (3) 
This measure gives an indication of the dependence of A 
and C. If A and C are dependent, the function I( )A C?  is 
bigger than 0. If A and C are independent, the function 
I( )A C?  tends to be 0. If the relationship between A and C 
are weaker than independent, the function I( )A C?  is 
smaller than 0. In our research, rules with I( ) 0A C? >  are 
considered as interesting rules, whereas rules with 
I( ) 0A C? ?  are considered to be uninteresting and 
eliminated from the rule base. 
IV. CASE STUDY
In this section, the actual data obtained from a company 
is used to verify the effectiveness of the proposed method. 
This company is one of the producers of electrical bicycles. 
Electrically powered bicycle (EPB) is a bicycle that generally 
operates by electric motor propulsion with the ability to use 
human power assistance if needed. Without generating 
pollution, it is easy to ride even against strong winds or riding 
up hills. Nowadays in china, more and more people prefer 
riding an electrical bicycle for recreation or commuting. Faced 
with the challenge that accomplishes configuration design 
within short lead time and low cost, design engineers need to 
effectively interact with useful knowledge of existing design 
database. Hence, this research tries to extract association rules 
between functional requirements and configuration 
alternatives. These rules can help design engineers understand 
the internal logic of configuration design and develop proper 
products.  
The existing configuration cases of the EBP company are 
used as the database. For illustrative simplicity, each case 
contains two functional requirements and nine configuration 
alternatives. The two functional requirements of EBP and its 
options can be seen in Table I. Table II shows the nine 
configuration alternatives of EBP. Twelve configuration cases 
are used for rule extraction. As illustrated in Table III, the first 
column is the configuration case ID and the following 
columns represent its functional requirements and 
configuration alternatives. For more details about these data, 
readers might refer to the literature of Shao et al [5]. 
Table I Functional requirements of EBP 
Functional requirements Options 
Maximum Speed ( 1fr ) 16 (
1
1fr ) 18 (
2
1fr ) 20 (
3
1fr )
Driving range ( 2fr ) 40 (
1
2fr ) 50 (
2
2fr ) 60 (
3
2fr )
Table II Configuration alternatives of EBP 
Configuration 
alternatives Options
Battery( 1dp )
12amp.H lead-acid (
1
1dp ), 15amps.H nickel-hydrogen 
(
2
1dp )
Charger ( 2dp ) Slow-charging (
1
2dp ), Quick-charging (
2
2dp )
Controller ( 3dp ) Basic (
1
3dp ), Intelligent (
2
3dp )
Ele-Engine ( 4dp )
Without brush and teeth(
1
4dp ), Having brush without 
teeth (
2
4dp ), Having teeth without Brush (
3
4dp )
Framework ( 5dp )
Motor-like with absorber (
1
5dp ), Common without 
absorber(
2
5dp )
Seat ( 6dp ) Common (
1
6dp ), Luxury (
2
6dp )
Lamps & Lanterns 
( 7dp ) Common (
1
7dp ), Luxury (
2
7dp )
Instruments ( 8dp ) Common (
1
8dp ), Luxury (
2
8dp )
Type & spoke 
( 9dp ) Steel wire spoke (
1
9dp ), Aluminum spoke (
2
9dp )
Table III The existing configuration cases 
ID
Functional 
 requirements
Configuration  
Alternatives
1fr  2fr  1dp  2dp  3dp  4dp 5dp  6dp  7dp 8dp 9dp
01 11fr 
2
2fr 
1
1dp 
2
2dp 
2
3dp 
3
4dp
2
5dp 
2
6dp 
1
7dp - -
02 11fr 
2
2fr 
1
1dp 
2
2dp 
2
3dp 
3
4dp - -
1
7dp - -
03 11fr 
2
2fr 
1
1dp 
1
2dp  -
2
4dp
2
5dp  -
1
7dp -
2
9dp
? ? ? ? ? ? ? ? ? ? ? ?
12 31fr 
3
2fr 
2
1dp 
2
2dp 
2
3dp 
2
4dp - -
1
7dp
1
8dp -
Then, Apriori algorithm is used to mine association rules 
from the twelve configuration cases. The algorithm is 
implemented in Matlab 7.0 on the Pentium 4 3.06 GHz PC 
with the following parameters: Support = 0.25, Confidence = 
0.5. As a result, 39 association rules are extracted as listed in 
Table IV. Each row of the table can be translated into an 
association rule. Take rule No.3 as an example, it can be 
expressed as: IF (Maximum Speed=16) THEN 
(Controller=intelligent) with Support = 0.25 and Confidence = 
0.75.  
Table IV Association rules against support and confidence 
No. Antecedent Consequent Support Confidence
1 31fr 
2
2dp  0.25 1
 21fr 
2
2dp  0.25 0.6
 11fr 
2
3dp  0.25 0.75
? ? ? ? ?
39 12fr 
2
2dp  0.25 0.6
Although the rules in Table IV have high support and 
confidence values, they still could be useless for design 
engineers. For example, the rule No.2: IF (Maximum 
Speed=18) THEN (Charger=quick-charging) has support 
value 0.25 and confidence value 0.6. And the support of its 
antecedent part is 0.42 and the support of its consequent part is 
0.67. Then, the negative form of rule No.2 is IF (Maximum 
SpeeG?18) THEN (Charger=quick-charging). The negative 
rule’s confidence is 0.71. It is bigger than the origin rule’s 
confidence 0.6, which means that the antecedent part and the 
consequent part of rule No.2 are in fact negatively associated. 
Therefore, interestingness criterion is utilized to filter such 
rules. For instance, the interestingness value of rule No.2 is 
0.25I 1 -0.11 0
0.42*0.67
= ? = < . So the rule No.2 should be 
eliminated from the rule base. After the calculation of each 
rule’s interestingness value, 36 rules are remained as listed in 
Table V. These rules can help design engineers understand the 
mapping relationship between EBP functional requirements 
and EBP configuration alternatives. 
Table V Remaining association rules  
No. Antecedent Consequent Support Confidence Interestingness
1 31fr 
2
2dp  0.25 1 >0 
 11fr 
2
3dp  0.25 0.75 >0 
? ? ? ? ? >0 
36 22fr 
1
1dp  0.33 1 >0 
V. CONCLUSION
This work proposes a method to mine association rules 
from historical case base for improving the working efficiency 
of configuration design. To ensure the quality and 
interestingness of knowledge, three criterions are used to 
select association rules: support, confidence and 
interestingness. Apriori algorithm is utilized for rule mining 
against those criterions. To demonstrate the effect of the 
proposed method, a case study of electrical bicycles is 
investigated. The results show that our method can generate 
rules with good performance. 
Future work can be: develop an integrated methodology of 
how to use the extracted knowledge, apply the method in a 
more sophisticated product, etc. 
REFERENCES
[1] Bob J. Wielinga, Guus Schreiber, Configuration-Design Problem 
Solving, IEEE Expert: Intelligent Systems and Their Applications, Vol. 
12, No. 2. March 1997, pp. 49-56. 
[2] Product configuration systems: state of the art, conceptualization and 
extensions 
[3] Carol J. Romanowski and Rakesh Nagi, 2004. A data mining approach 
to forming generic bills of materials in support of variant design 
activities. Journal of Computing and Information Science in 
Engineering, 4 (4), 316–328. 
[4] Automating knowledge acquisition for constraint-based product 
configuration 
[5] X. -Y. Shao, Z. -H. Wang, P. -G. Li, C. -X. J. Feng, Integrating data 
mining and rough set for customer group-based discovery of product 
configuration rules, International Journal of Production Research, 1366-
588X, Volume 44, Issue 14, 2006, Pages 2789 – 2811 
[6] Ghosh, A.,&Nath,B. (2004). Multi-objective rulemining using genetic 
algorithms. Information Sciences, 163(1–3), 123–133. 
[7] Product configuration and inter-firm co-ordination: an innovative 
solution from a small manufacturing enterprise 
[8] Configuration Design of Complex Integrated Manufacturing Systems 
[9] Agrawal R., Srikant R., (1994) Fast Algorithms for Mining Association 
Rules. In: Proceeding of the 20th Int. Conference on Very Large 
Databases. Santiago, Chile: 487-499. 
