Spatial Constraint Topology Association Rules 
Mining Based on Apriori 
 
Gang FANG, Cheng-sheng TU,Jiang XIONG, Zi-Quan WANG 
College of Math and Computer Science 
Chongqing Three Gorges University 
Chongqing 404000, P.R. China 
cqwzjsjfg@163.com, cqwztcs@163.com, xjcq123@sohu.com, wzq123@163.com 
 
 
Abstract—This paper proposes an algorithm of mining spatial 
topology association rules with constraint condition based on 
Apriori, which is used to mining spatial multilayer transverse 
association rules with constraint condition from large spatial 
database. This algorithm generates candidate frequent 
topological item sets via up search strategy similar to Apriori, 
which is suitable for mining short spatial topological frequent 
item sets with constraint condition. This algorithm compresses 
storage structure of spatial topological relation to create an 
integer. Via this method, firstly, the algorithm may efficiently 
reduce some storage space of mining database. Secondly, the 
algorithm is effortless to distinguish topological relation of two 
spatial objects, namely, it may fast compute support of candidate 
item sets. Finally, the algorithm is fast to connect (k+1)-candidate 
item sets of k-frequent item set by up search strategy. The result 
of experiment indicates that the algorithm of mining spatial 
topology association rules with constraint condition based on 
Apriori is able to extract spatial multilayer transverse association 
rules with constraint condition from spatial database via efficient 
data store, and it is very efficient to extract short frequent 
topology association rules with constraint condition. 
Keywords-spatial data mining; constraint condition; topology 
association rules; multilayer transverse association; up search 
I.  INTRODUCTION 
The research and application of spatial data mining have 
become more and more important for people. Spatial 
association rules is one of important part of spatial data mining, 
which mainly extracts these interactions, spatial dependency 
and spatial symbiosis patterns with spatial objects as in [1]. 
Nowadays, traditional association rules is expanded to spatial 
data mining, there are mainly three kinds methods of mining 
spatial association rules as in [2], such as, layer covered based 
on clustering as in [2], mining approach based on spatial 
transaction as in [3, 4 and 5] and mining approach based on 
non-spatial transaction as in [2]. Mining approach based on 
spatial transaction uses spatial overlying and buffer analysis to 
search spatial predicate of spatial objectives and other objects 
in spatial database, and extracts Boolean association rules from 
spatial transaction database formed by these spatial predicate. 
This method is used to mining monolayer transverse 
association rules and multilayer transverse association rules, 
which is one of wide applied techniques. Spatial topological 
relation is one of typical and important multilayer spatial 
relation. And so, this paper uses mining approach based on 
spatial transaction to introduce an algorithm of mining spatial 
topology association rules with constraint condition based on 
Apriori, denoted by MSTARCC, which uses spatial topological 
relation as example to present multilayer spatial association 
rules mining with constraint condition. 
II. RUDIMENTARY KNOWLEDGE 
As we all know this rudimentary knowledge as in [1, 2], 
rudimentary knowledge of spatial topology association rules 
with constraint condition is expressed as follows: 
Spatial association rules mainly contain three parts as 
follows, spatial association among properties of the same 
objects in the same spatial relation pattern, spatial association 
among different objects in the same spatial relation pattern and 
spatial association among different objects in the different 
spatial relation pattern. The first part is known as spatial 
lengthwise association, the second and third parts are known as 
spatial transverse association. Association rules expressing as 
the second spatial relation is known as monolayer transverse 
spatial association rules. Association rules expressing as the 
third spatial relation is known as multilayer transverse spatial 
association rules. According to mining approach based on 
spatial transaction, this algorithm uses spatial topological 
relation as example to extract multilayer spatial association 
rules with constraint condition, and so we only thick seven 
kinds of spatial topology association as table I. 
Definition 1 Spatial Transaction to Binary Digit, a spatial 
transaction expressing topological relation is denoted by binary 
digit. 
The course of turning spatial transaction into binary digit is 
expressed as follows: 
Step1, we define target object class and non-target object 
class, target object class is denoted by Ot. There are m non-
target objects classes, which are denoted by ik (k=1…m). 
Step2, we use 3 non-zero binary digits to denote a kind of 
topological relation that expresses sole spatial topological 
relation between target object and non-target object. 
Step3, the number of bit is 3 times the number of classes in 
non-target objects of spatial transaction database. 
This work was fully supported by science and technology research 
projects of Chongqing Education Commission (Project No. KJ061101 and 
KJ091108), and it was also fully supported by science and technology 
research projects of Chongqing Three Gorges University (Project No. 10QN-
22, 24 and 30). 
978-1-4244-7941-2/10/$26.00 ©2010 IEEE
Step4, spatial topological relation is denoted by binary digit 
as following table I. 
TABLE I.  SPATIAL TOPOLOGICAL RELATION 
No. Topological relation Spatial Predicate Binary Digit 
1 disjoint disjoint (Ot, ik) (001)2 
2 touch touch (Ot, ik) (010)2 
3 overlap overlap (Ot, ik) (011)2 
4 cover cover (Ot, ik) (100)2 
5 contain contain (Ot, ik) (101)2 
6 covered covered (Ot, ik) (110)2 
7 inside inside (Ot, ik) (111)2 
Here, we let (000)2 express this spatial relation that there 
are no non-target objects in buffer of target objects. 
Example, item sets of spatial non-target objects class is 
expressed as I = {i1, i2, i3, i4, i5}, we also define the order of 
binary digit according to the order of item sets. 
Suppose here is an entity of target object class denoted by 
Ot, Ot is inside of an entity of non-target object class as i2, 
spatial predicate is denoted by inside (Ot, i2), namely, binary 
digit is expressed as (111)2. Ot touches an entity of non-target 
object class as i3, spatial predicate is denoted by touch (Ot, i3), 
namely, binary digit is expressed as (010)2. Ot contains an 
entity of non-target object class as i4, spatial predicate is 
denoted by contain (Ot, i4), namely, binary digit is expressed as 
(101)2. All the entities of two non-target objects class as i1 and 
i5 are not in the buffer of the entity of target object class as Ot. 
The spatial topological relation may be expressed as Fig. 1, we 
also may use (000, 111, 010, 101, 000)2 express the spatial 
topological relation. 
 
Figure 1.  The spatial topological relation 
Definition 2 Topological Relation Bit, it is a binary digit 
with 3 bit, which expresses a kind of topological relation 
between two entities of target object class and non-target object 
class. 
Example, if a spatial transaction is denoted as a binary digit 
(000, 111, 010, 101, 000)2, we think (111)2, (010)2 and (101)2 
as Topological Relation Bit. 
Definition 3 Spatial Transaction to Integer, a spatial 
transaction expressing spatial topological relation is denoted by 
an integer. 
Example, if a spatial transaction is denoted by this binary 
digit (000, 111, 010, 101, 000)2, we will use this integer 3752 
to express this spatial transaction. 
Definition 4 Spatial Transaction Length, which is denoted 
as STL. Its value equals the number of non-target objects class 
in buffer of entity of target object class. Namely, it also equals 
the number of spatial topological relation between two entities 
of target object class and non-target object class. 
Example, the spatial transaction as Fig.1 is expressed as 
{inside (Ot, i2), touch (Ot, i3), contain (Ot, i4)}, which is 
expressed as binary digit p = (000, 111, 010, 101, 000)2, its 
length equals to 3, namely, STL (p) = 3. 
Definition 5 Transaction Relation to Integer Relation, a 
spatial transaction ST1 is expressed as integer I1, another ST2 is 
expressed as integer I2, if ST1? ST2, and we will define I1? I2. 
Example, item sets of non-target spatial object class is 
expressed as I = {i1, i2, i3, i4, i5}. Let ST1 be {inside (Ot, i2), 
touch (Ot, i3), contain (Ot, i4)}, denoted by 3752, let ST2 be 
{inside (Ot, i2), contain (Ot, i4)}, denoted by 3624. Obviously, 
ST2? ST1, and then we record 3624? 3752. 
Definition 6 Constraint Condition, denoted by CC, it is 
made of some non-target objects classes given by user, and it is 
also pure subset of spatial non-target objects class sets. 
Example, item sets of non-target spatial object class is 
expressed as I = {i1, i2, i3, i4, i5}, CC ?  I, such as {i2, i5}. 
Property 1 There are two binary digits p and q with m 
Topological Relation Bits, p is used to express a spatial 
transaction STp, q is used to express a spatial transaction STq. 
The necessary and sufficient condition for STp? STq is p ? q 
= p, and STL (q? (~p)) = STL (q) – STL (p). 
Proving of sufficient condition is expressed as follows: 
We use TRBi express value of No.i Topological Relation 
Bit in a binary digit. 
Suppose, TRBi? 0 (i = j1, j2…jk, k<m) in this binary digit p, 
and others are 0. In these Topological Relation Bits, we let 
No.bs (s =1, 2…t, t ? 3m) binary bit be 1, and others are 0. For 
p ? q = p, and so in these Topological Relation Bits of q, these 
No.bs (s =1, 2…t, t ? 3m) binary bits are all equal to 1 
(otherwise, p ? q ?  p), and others are 0 or 1. 
And for STL(q?(~p))= STL(q) - STL(p), and so TRBi ?  0 
(i = j1, j2…jk, k<m) in this binary digit q are all equal to the 
same Topological Relation Bit in this binary digit p (otherwise, 
STL(q?(~p)) ?  STL(q) - STL(p)), and others are 0 or 1. As 
definition 1 and 5, we know STp ?  STq. 
Proving of necessary condition is expressed as follows: 
Suppose, TRBi? 0 (i = j1, j2…jk, k<m) in this binary digit p, 
and others are 0. In these Topological Relation Bits, we let 
No.bs (s =1, 2…t, t ? 3m) binary bit be 1, and others are 0. For 
STp? STq, according to definition 1 and 5, and so TRBi ?  0 (i 
= j1, j2…jk, k<m) in this binary digit q are all equal to the same 
Topological Relation Bit in this binary digit p (otherwise, here 
is No.jk spatial topological relation, it belongs to STp, but it 
doesn’t belong to STq, this contradicts with STp? STq), and so 
in these Topological Relation Bits of binary digit q, these No.bs 
(s =1, 2…t, t ? 3m) binary bits are all 1, and others are 0. And 
so the rest of binary bits in binary digit q are 0 or 1. Hence, p 
? q = p, and STL (q? (~p)) = STL (q) – STL (p). 
Deduction 1 There are two binary digits p and q. If p is 
turned into integer Ip, q is turned into integer Iq, and p ? q = p, 
and Ip ? Iq. 
Deduction 2 Let integer Ip express a spatial transaction STp, 
and let integer Iq express a spatial transaction STq. If Iq ? Ip, and 
STp? STq. 
Property 2 Let binary digit p express spatial transaction 
STp, and let binary digit q express spatial transaction STq. And 
p ? q = p, and STL (q? (~p)) = STL (q) – STL (p). 
If STq is a frequent item set, and STp is also a frequent item 
set. 
If STp is not a frequent item set, and STq is not also a 
frequent item set. 
III. MINING SPATIAL TOPOLOGY ASSOCIATION RULES WITH 
CONSTRAINT CONDIOTION 
A. Forming Transaction Database 
In order to form mining database of spatial topology 
association rules, from original spatial database, we need make 
each spatial transaction turn into an integer. The course of 
turning used by the algorithm is expressed as follows: 
Firstly, we define target object class O and non-target 
object class ik (k=1…m), and then define the order of non-
target object class as I = {i1, i2…im}. 
Secondly, each non-target objects class Ik existing in spatial 
transaction has an order denoted by Nk. If there is a kind of 
spatial topological relation as table I between entities of target 
object class and non-target object class Ik, obviously, according 
to definition 1 and 2, this spatial topological relation is able to 
be denoted by some Topological Relation Bit as table I.  
Thirdly, then we will put this Topological Relation Bit into 
No.k location.  
Finally, we will gain a binary digit with 3m bit, and then 
turn the binary digit into integer. 
According to this way, the algorithm will gain an integer by 
scanning each spatial transaction, and mining database is 
formed of these integers. 
Now we save these integers by this data structure expressed 
as follows: 
Structure spatial transaction { 
Int Digit; // saving integer expressed as spatial transaction 
Int Count; // saving the sum of same integer expressed as 
spatial transaction} ST 
Example, here is three entities of target objects class as O1, 
O2 and O3, and non-target object class I = {i1, i2, i3, i4, i5}. 
No.1 spatial transaction ST1 is expressed as {overlap (O1, i2), 
contain (O1, i3), covered (O1, i4)}, we use binary digit p = (000, 
011, 101, 110, 000)2 to express this spatial transaction, namely, 
this integer 1904 may express ST1. 
ST [1].Digit=1904, ST [1].Count=1. 
No.2 spatial transaction ST2 is expressed as {overlap (O2, i3), 
inside (O2, i4)}, we use binary digit p = (000, 000, 011, 111, 
000)2 to express this spatial transaction, namely, this integer 31 
may express ST2. 
ST [2].Digit=31, ST [2].Count=1. 
No.3 spatial transaction ST3 is expressed as {overlap (O3, i2), 
contain (O3, i3), covered (O3, i4)}, we use binary digit p = (000, 
011, 101, 110, 000)2 to express this spatial transaction, namely, 
this integer 1904 may express ST3. As this information has 
been saved, we only add 1 to Count. 
ST [1].Digit=1904, ST [1].Count=2. 
… 
B. Generating frequent topological item sets with constraint 
condition 
The course of generating frequent topological item sets 
with constraint condition is similar to Apriori, namely, 
according to up search strategy, the algorithm uses three stages 
to generate frequent topological item sets with constraint 
condition, which is expressed as follows: 
Firstly, the algorithm computes all these 1-topological item 
sets, and gains all the 1-frequent topological item sets. 
Secondly, the algorithm connects 1-frequent topological 
item sets to generate these entire 2-candidate frequent 
topological item sets. 
Finally, the algorithm computes (k+1)-candidate frequent 
topological item sets with constraint condition (k>1), and 
generates all these (k+1)-frequent topological item sets with 
constraint condition by iteration connecting. 
C. The method of computing support 
According to the principle of property 1, we know that the 
method of computing support includes two steps as follows: 
Let an integer Iq express a spatial transaction STq, let 
another Ip express a candidate frequent item sets CSTp with 
constraint condition. 
Step1, the algorithm computes this expression Ip ? Iq , if Ip 
? Iq ?  Ip, we will know that CSTp? STq, namely, the spatial 
transaction STq does not support candidate frequent item sets 
CSTp, and stop computing support. If Ip ? Iq = Ip, then going to 
step2. 
Step2, if STL(Iq?(~Ip)) = STL(Iq) - STL(Ip), and CSTp? STq. 
And so we will know that the spatial transaction STq supports 
candidate frequent item sets CSTp. Otherwise, the spatial 
transaction STq does not support candidate frequent item sets 
CSTp. 
D. The process of mining topology association rules with 
constraint condition 
According to the up search strategy similar to Apriori, the 
process of mining topology rules with constraint condition is 
expressed as follows: 
Step1, the algorithm computes all these 1-topological item 
sets, and gains all the 1-frequent topological item sets. 
Step2, the algorithm connects 1-frequent topological item 
sets to generate these entire 2-candidate frequent topological 
item sets. 
Step3, the algorithm computes (k+1)-candidate frequent 
topological item sets with constraint condition, and generates 
all these (k+1)-frequent topological item sets (k>1) by iteration 
connecting. 
Step4, the algorithm outputs all frequent topological item 
sets with constraint condition. 
Step5, according to confidence given by user, the algorithm 
computes all topology association rules with constraint 
condition. 
IV. THE ANALYSIS AND EXPERIMENTAL RESULT OF 
ALGORITHM 
Nowadays, there are very little documents of research 
spatial topology association rules with constraint condition. 
Here we only present the capability and experimental result of 
the algorithm: 
A. The Analysis of Capability 
The algorithm is suitable for mining short frequent 
topological item sets with constraint condition because it 
adopts up search strategy to generate candidate frequent 
topological item sets with constraint condition. The algorithm 
realizes fast mining spatial multilayer transverse association 
rules with constraint condition from spatial database because it 
compresses a kind of spatial topological relation to create an 
integer, namely, it adopts an efficient data store of spatial 
topological relation compressing. 
B. The experimental result of the algorithm 
Now we use experiment to prove above analyses. The 
mining algorithms (MSTARCC) is used to generate frequent 
topological item sets with constraint condition from 71650 
spatial transactions, which are denoted by integer from 1 to 
4095, the constraint condition is expressed as CC1 = 5, which 
expresses {contain(O?D)}, the another is expressed as CC2 = 
10, which expresses {disjoint (O?C)?touch (O?D)}. O is 
target object class, C is the third non-target object class, and D 
is the fourth non-target object class. The number of spatial non-
target object class is denoted by m=4. 
These spatial transactions observe the discipline which is 
expressed as follows: 
Spatial transaction denoted by 4095 has five instances. 
Spatial transaction denoted by 4094 has thirty instances. 
Spatial transaction denoted by 4093 has five instances. 
Spatial transaction denoted by 4092 has thirty instances. 
… 
The runtime of the algorithms is expressed as Fig.2 as 
support changes for CC = 5 and CC = 10. 
Our experimental circumstances are expressed as follows: 
Intel(R) Celeron(R) M CPU 420 ? 1.60 GHz, 1GB, language 
of the procedure is Visual C# 2005.NET, OS is Windows XP 
Professional. 
MSTARCC
0
2000
4000
6000
8000
10000
12000
0.419 0.279 0.140 0.070 0.028 0.014 0.007 0.004
Support(%)
Ru
nt
im
e(
Mi
ll
is
ec
on
d)
CC=5 CC=10
 
Figure 2.  The runtime of the algorithms for CC=5 and CC=10 
V. CONCLUSION 
This paper introduces an algorithm of mining spatial 
topology association rules with constraint condition based on 
Apriori, which uses spatial topological relation as example to 
present multilayer spatial association rules mining with 
constraint condition.  
ACKNOWLEDGMENT 
This work was fully supported by science and technology 
research projects of Chongqing Education Commission 
(Project No. KJ061101 and KJ091108), and it was also fully 
supported by science and technology research projects of 
Chongqing Three Gorges University (Project No. 10QN-22, 24 
and 30). 
REFERENCES 
[1] MA, R.H., PU, Y.X., Ma, X.D.: GIS Spatial Association Pattern Ming. 
Science Press, 2007 Beijing.(in Chinese) 
[2] ZHANG X.W., SU, F.Z., SHI, Y.S., ZHANG, D.D.: Research on 
Progress of Spatial Association Rule Mining. Journal of Progress in 
Geography, vol.26(6), pp.119-128, 2007. (in Chinese) 
[3] LIU, Y.L., FANG, G.: The research and application of a transaction 
complement mining algorithm. Journal of Computer Engineering and 
Applications, vol. 44(35), pp.168-170, 2008. (in Chinese) 
[4] FANG, G., WEI, Z.K., YIN, Q.: Extraction of Spatial Association Rules 
Based on Binary Mining Algorithm in Mobile Computing. In: IEEE 
Information Conference on Information and Automation, pp. 1571-1575. 
IEEE press, 2008, China, Zhangjiajie. 
[5] FANG, G., LIU, Y.L.: Application of Binary System Based Spatial 
Mining Algorithm in Mobile Intelligent Systems. Journal of Southwest 
University (Natural Science Edition), vol.31(1), pp. 95 - 99, 2009. (in 
Chinese) 
 
