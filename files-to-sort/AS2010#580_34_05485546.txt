An Efficient Algorithm for Mining Association Rules from Multiple Databases*
Guoling Liu, Runian Geng 
School of Information Science and Technology 
Shandong Institute of Light Industry 
Jinan, China 
maindollar@126.com 
Abstract—The mining objects of traditional mining association 
rules techniques mainly focus on mono-database. With the 
rapid development of database technologies, multi-database 
mining is becoming more and more important. In order to 
make the synthetic result of multiple data sources more 
accurate, the parameter C, which indicates the number of 
transactions in local branch database, is proposed. We design a 
novel and efficient multi-databases mining algorithm using the 
parameter C. It can reduce the network congestion and solve 
the new incremental addition of transaction data effectively. 
Experiment results demonstrate the algorithm is efficient. 
Keywords-association rules; data mining; multi-database; 
incremental addition 
I. INTRODUCTION
Data mining can be known as a knowledge discovery 
process in databases [1]. Database mining is the automated 
process of extracting interesting and previously unknown 
patterns and correlations from large databases. Association 
rule mining [1-6] is the process of discovering items, which 
tend to occur together in transactions based on some kind of 
rules. With the rapid development of database technologies, 
multi-database mining is becoming more and more 
important. The mining objects of traditional mining 
association rules techniques mainly focus on mono-database. 
Very little work has been done in mining association rules in 
multiple large databases. A direct application of general 
algorithms to multiple large databases is not effective, 
because it requires a large amount of communication 
overhead. 
If the data to be mined were stored by relational models 
in multiple databases, we can break multiple data sources 
mining task down into three sub-tasks: 1) Clear multiple data 
sources; 2) Mine the knowledge of each sources; 3) Integrate 
the knowledge of every branch database [7]. 
In this paper we presented a novel and efficient algorithm 
for mining association rules from multiple databases. 
Incremental addition of the data set should not necessitate re-
computation of rules for the entire data set. Also, the local 
branch databases should not necessitate moving data to the 
headquarters database. 
                                                                       
  
 *This work is partly supported by The Project of Shandong Province 
Higher Educational Science and Technology Program(No. J09LG32), the 
Project of Youth Science and Technology Star Program of Jinan (No. 
20090202) The Project of Youth Science and Technology Star Program of 
Jinan (No. 20090202).
II. LOCAL BRANCH DATABASES MINING
The development of multi-database association rule 
mining is a challenging and critical task since it requires 
knowledge of all the data stored in different locations and the 
ability to combine partial results into a single result from 
individual RDBMS. Suppose there is a company which has 
several branches in different locations, and each branch 
having its own database. The main branch or top level within 
the organizational hierarchy is responsible for making 
development and decision of the entire company. The above 
situation can be presented as Fig 1. 
Figure 1. Multi-database environment 
The individual databases have to be analyzed to generate 
rules to make local decisions. It would be easier for the 
organization to make decisions based on the rules generated 
by the individual branches, rather than by the raw data. If the 
raw data from each of the individual databases were sent to a 
single database to generate the rules, then certain useful rules 
which would aid in making decisions about local branches, 
would be lost. For example, a rule such as “50% of the 
branches in some city saw a 10% increase in the purchase of 
digital photo frame when digital cameras and memory cards 
were purchased together” would not be generated if the raw 
data was transferred. If the raw data from all the databases 
were transferred to a single database, then each of the 
individual branches would not be generating the rules of its 
data. In this case, the organization may lose some important 
rules that were prominent in branches and were not found in 
the other branches similar to the above example. Generating 
such rules would aid in making decisions about specific 
branches. 
Most of the algorithms for discovering association rules 
[5, 6, 8] require multiple scans about the database. The 
database was read completely for each pass, which results in 
a large number of disk readings and places a huge burden on 
the I/O sub-system. Network congestion problems and poor 
resource utilization was common in cases where data was to 
be retrieved from a central database server by a network. 
DBMS 
Local branch 1 
DBMS
Local branch 2 
DBMS
Local branch 3 
DBMS
V4-349978-1-4244-6349-7/10/$26.00 c©2010 IEEE
Instead of moving data from one database to another, a 
partitioned approach would be appropriate.  
The patterns in multi-databases can be divided into the 
following classes: local and global. Local branches need 
consider the original raw data in their datasets so they can 
identify local patterns for local decisions. Global patterns are 
the patterns that are supported by most of the branches and 
are used for making global decisions. 
Many association rules that are mined in branches only 
may appear in one or two companies. They have not any 
effect on the headquarters’ decision-making. In this paper, 
we introduce the concept of lift. The degree of lift indicates 
correlation in statistic. It reflects the satisfaction degree and 
can be used to prune noise rules. We would delete those rules 
whose degree of lift is less than an assigned value 1 [8,9]. 
In order to make the synthetic result of multiple data 
sources more accurate, we propose the parameter C which 
indicates the number of transactions in local branch database. 
When mining the association rules in each local branch 
database is done, the number of transaction rows is assigned 
to the parameter C. The frequent itemsets and theirs support 
degree are submitted to the headquarters along with the 
parameter C as shown in table 1. Specially, 1-itemset’s 
support degree is also recorded and transferred to the 
headquarters. 
TABLE I. ITEMSETS, SUPPORT DEGREE AND C
Branch Code China0532 
 Itemset L,R L R 
Support Degree 0.70 0.85 0.66 
C 2800 
For incremental addition of local branch databases, the 
mining process is similar. The new mining result is 
submitted to the headquarters and merged into the table with 
the same branch code. 
III. THE SYNTHETICAL MODEL
The synthetical model is formed in the headquarters. It 
includes two parts: the new support degree of association 
rules and the global association rules. 
A.  The New Support Degree of Association Rules 
When the mining in local branch DBMS(database 
management system) is done, the mini confidence degree 
and the mini lift degree are used to prune the frequent 
itemsets in order to submit useful association rules to the 
headquarters. In the headquarters we could compute the new 
support degree of association rules by the following formula. 
Support (L)= Support1 (L)×C1/C0+ Suppor2 (L)×C2/C0
+…+ Supportn (L)×Cn/C0                                                      
(1) 
Support(R) = Support1 (R)×C1/C0+ Support2 (R)×C2/C0
+…+ Supportn (R)×Cn/C0                                                      
(2) 
Support(LR)= Support1 (LR)×C1/C0+ Support2
(LR)×C2/C0 +…+ Supportn (LR)×Cn/C0                      
(3) 
Conf (L?R)= Support(LR) / Support(L)                       (4) 
Lift(L?R)=Conf(L?R)/Support(R)=Support(LR)/Suppo
rt(L)× Support (R)                                                               (5) 
The parameter Ci is the real exact number of transaction 
row in local branch database. For the above formulas, the 
local association rules are merged into the global association 
rules losslessly. The parameter C0 is the sum of all Ci and 
represents the total number of transactions. 
Whether the branch is large or small, they are equal in 
the synthetic model. Whatever the sales is, every branch 
plays a important role. The branch makes decision according 
to the local association rules individually. The organization 
makes decision by the global association rules. This model 
not only reduces the I/O burden, but also enhances the 
accuracy and authenticity of distributed local databases. 
While we compute the support degree and the confidence 
degree of the global association rules, we could compute the 
lift degree by the following formula. The lift degree is used 
for selecting the effective global association rules. 
  The algorithm C-newSupp to calculate new global 
degree of support is as the following. 
Algorithm C-newSupp  
Input: R,  //a association rules;  
Ci, //the number of the individual database row  
Output: new RS,  //the support degree of association rules 
in global database 
(1) RS?0 
(2) For i=1 to n  //each of individual data source   
(3) RS?Support (R) ×Ci /C + RS
B. The Global Association Rules 
The global association rules must meet the min support 
degree and min-confidence degree. But strong association 
rules may not be meaningful. The lift degree of reflects the 
satisfaction degree. The following algorithm G-finalRule is 
to generalize final meaningful association rules using the lift 
degree. 
Algorithm G-finalRule 
Input: R1, R2... Rk,  // a set of association rules;   
      min-support, min-conf, min-lift 
Output: RS// a set of final meaningful association rules 
(1) For i=1 to k, //R1, R2, .., Ri,…, Rk, each of 
association rule L?R 
(2)   Support(LR) ?Call  C-newSupp; 
(3)   Support(R)?Call  C-newSupp; 
(4)   Conf(L?R) ? Support(LR)/ Support(R) 
(5)   If  Support(LR)>=min-support and     
Conf(L?R) >=min-conf  then 
(6)    Lift ?Conf(L?R)/ Support(R); 
(7)    If  lift>=min-lift then 
(8)         RS?Ri
V4-350 2010 2nd International Conference on Computer Engineering and Technology [Volume 4]
IV. EXPERIMENTS AND ANALYSIS
To evaluate the synthetic algorithm correctness and 
efficiency, we use the synthetic classification data sets of the 
famous site Kdnuggets in the rule synthesis. Table 2 shows 
the parameters of the data sets. 
While we mined a total of 2072 association rules from 
these databases with Apriori algorithm, we have acquired 
2105 association rules with our synthetic model. The prior 
10 itemsets are same in term of support degree. The itemsets 
are shown in table 3. The experiment shows the synthetic 
algorithm is correct and effective. 
TABLE II. THE PARAMETERS OF THE EXPERIMENT DATA SETS. 
Database |R| T I |r| 
T5I2D100KN1 968 5 2 19985 
T5I2D100KN2 965 5 2 20046 
T10I2D100KN1 960 10 4 19774 
T10I2D100KN2 967 10 4 19798 
T20I6D100KN1 968 20 6 19408 
TABLE III. THE PRIOR 10 ITEMSETS IN TERM OF SUPPORT DEGREE
Item set Support G-finalRule Support Apriori 
C9,E15 0.052870 0.052877 
A11,C9 0.052440 0.052400 
A27,B247 0.052430 0.052 
A27,D103 0.052290 0.052 
B247,D103 0.052290 0.052 
A27,F12 0.052280 0.052 
B247,F12 0.052280 0.052 
D103,F12 0.052280 0.052 
A27,B247,D103 0.052280 0.052 
A27,B247,F12 0.052280 0.052 
For multi-processors, we could divide a large database 
into several partitions and run the synthetic algorithm. 
V. CONCLUSIONS 
In this paper, we designed a novel and efficient algorithm 
and proposed the parameter C as the stamp. Using lift, the 
noise rules are deleted in local branch mining. Our proposed 
algorithm also has the following features: 
• It avoids I/O transfers and network congestion.  
• It focuses on the number of the itemset as well as 
support degree, thus greatly heightening the accurate 
of the global association rules mining. 
• It only scans the whole databases only one and 
avoids re-scanning the old databases to acquire new 
knowledge from incremental addition to dataset. 
This paper only discussed the positive association rules 
mining over multi-databases. Negative association rule is 
another aspect of data mining and different from positive 
association rules. In future work, we will discuss the case of 
negative association rules mining over multi-databases. 
REFERENCES
[1] Han Jiawei, Kamber M. Data Mining: Concepts and Techniques[ M]. 
Morgan Kanfmann Publishers. Simo Fraser University, 2000. p.187 - 
198.  
[2] Xindong Wu, Shichao Zhang, "Synthesizing High-Frequency Rules 
from Different Data Sources," IEEE Transactions on Knowledge and 
Data Engineering, vol. 15, no. 2, pp. 353-367, Mar./Apr. 2003, 
doi:10.1109/TKDE.2003.1185839 
[3]  R. Agrawal, T. Imielinski, and A. Swami, “Mining Association Rules 
Between Sets of Items in Large Databases,” Proc. 1993 ACM-
SIGMOD Int'l Conf. Management of Data, pp. 207-216, May 1993. 
[4]  Chang-Hung Lee , Cheng-Ru Lin , “Ming-Syan Chen, Sliding-
window filtering: an efficient algorithm for incremental mining,” 
Proceedings of the tenth international conference on Information and 
knowledge management, October 05-10, 2001, Atlanta, Georgia, 
USA  
[5] R. Rastogi , K. Shim, “Mining Optimized Association Rules with 
Categorical and Numeric Attributes,” IEEE Transactions on 
Knowledge and Data Engineering, v.14 n.1, p.29-50, January 2002  
[6]  D.W. Cheung, V.T. Ng, W. Fu, and Y. Fu, “Efficient Mining 
Association Rules in Distributed Databases,” IEEE Trans. Knowledge 
and Data Eng., vol. 8, no. 6, pp. 911-922, Dec. 1996. 
[7] J. Chattratichat, “Large Scale Data Mining: Challenges and 
Responses,” Proc. Third Int'l Conf. Knowledge Discovery and Data 
Mining, pp. 143-146, 1997  
[8] Thomas, S. and S. Chakravarthy. “Incremental Mining of Constrained 
Associations,” Proc. of the 7th Intl. Conf. of High Performance 
Computing (HiPC). 2000.  
[9] Ming-Cheng Tseng , Wen-Yang Lin , Rong Jeng, “Incremental 
maintenance of generalized association rules under taxonomy 
evolution,” Journal of Information Science, v.34 n.2, p.174-195, April 
2008 
[Volume 4] 2010 2nd International Conference on Computer Engineering and Technology V4-351
