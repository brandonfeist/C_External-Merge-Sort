 644
An Algorithm for Mining Conditional Hybrid Dimensional Association Rules using 
Boolean Matrix  
 
 
Neelu Khare1     Neeru Adlakha2   K. R. Pardasani3 
Department of Computer Applications   Department of Applied Mathematics     Department of Mathematics 
Maulana Azad National Institute of Technology    SVNIT, Surat, Gujarat   Maulana Azad National Institute of Technology 
Bhopal (M.P.) India     nad@ashd.svnit.ac.in   Bhopal (M.P.) India 
neelukh_29@yahoo.com             kamalrajp@hotmail.com 
 
 
Abstract— In this paper, we present an algorithm of mining 
hybrid dimension association rules which satisfies the definite 
condition on the basis of multidimensional transaction 
database.  Boolean Matrix based approach has been employed 
to generate frequent itemsets in multidimensional transaction 
databases. It adopts Boolean relational calculus to discover 
frequent predicate sets. When using this algorithm first time, it 
scans the database once and will generate the association rules. 
Apriori property is used in algorithm to prune the item sets. It 
is not necessary to scan the database again; it uses Boolean 
logical operations to generate the association rules. We 
illustrate the implementation of algorithm with the help of a 
simple example. 
Keywords- Boolean matrix; hybrid dimensional association rule; 
relational calculus; multidimensional transaction  database. 
 
I. INTRODUCTION 
Mining association rules in transactional or relational 
database is an important task in data mining [5]. The 
association rules are for discovering the interesting association 
relationships among huge amounts of business transaction 
records. An association rule is an implication of the form 
A  B, where A ? I , B ? I , and A ?B= ? . The rule A  B 
holds in the transaction set D, with support s, where s is the 
percentage of transactions in D that contain A ? B (i.e., the 
union of sets A and B, or say, both A and B). This is taken to 
be the probability, P(A ?B).The rule A  B has confidence 
c in the transaction set D, where c is the percentage of 
transactions in D containing A that also contain B. This is 
taken to be the conditional probability, P(B|A). That is, 
 )()( BAPBASupport ?=  
)|()( ABPBAConfidence =  
Rules that satisfy both a minimum support threshold (min 
sup) and a minimum confidence threshold (min conf) are 
called strong. The support defined in the equation given 
below is referred to relative support, whereas the occurrence 
frequency is called the absolute support[4]. The set of 
frequent k-itemsets is commonly denoted by LK. 
)(
)()|()(
ASupport
BASupportABPBAConfidence ?==  
Association rule mining can be viewed as a two-step process: 
1. Find all frequent itemsets: Each of these itemsets will 
occur at least as frequently as a predetermined minimum 
support count, min sup. 
2. Generate strong association rules from the frequent 
itemsets: These rules must satisfy minimum support and 
minimum confidence, min_conf. 
Among them searching for frequent itemsets is the key step. 
Because it’s easy to generate rules from frequent itemsets, 
    R. Agrawal [1] and some others [10][3] presented the 
algorithm for mining the simplest form of association rules.  
The  Apriori algorithm proposed by R. Agrawal and R. 
Srikant [2]. Apriori employs an iterative approach known as 
a level-wise search, where k-itemsets are used toexplore 
(k+1)-itemsets. Apriori principle: If an itemset is requent, 
then all of its subsets must also be frequent. It works in two 
steps-  Join Step:    Ck is generated by joining Lk-1with itself. 
 Prune Step: Any (k-1)-itemset that is not frequent cannot be 
a subset of a frequent k-itemset. (Ck: Candidate itemset of 
size k and Lk : frequent itemset of size k) 
Moreover, it is necessary to repeatedly scan the database 
for finding frequent itemsets. Therefore the run-time of the 
Apriori will increase by index grade with the increase of 
transaction item quantity. 
Association rules can be classified as single-dimensional 
association rules and multidimensional association rules on 
the basis of dimension appearing in rules. In multi-
dimensional databases, we refer to each distinct predicate in 
a rule as a dimension. Hence, we can refer to buys (X, 
“Digital camera”)  buys (X, “HP Printer”) is a single 
dimensional or intra-dimensional association rule because it 
contains a single distinct predicate (e.g., buys) with multiple 
occurrences (i.e., the predicate occurs more than once within 
the rule). Association rules that involve two or more 
dimensions or predicates can be referred to as 
multidimensional association rules, age(X , "20" ) 
? occupation (X , "student" )  buys (X , "laptop" ), 
contains three predicates (age, occupation, and buys), each 
of which occurs only once in the rule. Hence, we say that it 
has no repeated predicates [12]. Multidimensional 
association rules with no repeated predicates are called 
inter-dimensional association rules. We can also mine multi-
dimensional association rules with repeated predicates, 
which contain multiple occurrences of some predicates. 
These rules are called hybrid-dimensional association rules.
Volumn 2
 978-1-4244-5586-7/10/$26.00      2010 IEEEC
 645
In this the mining of single-dimensional association rule and 
non-repetitive predicate multi-dimensional association rule 
are integrated. We propose an algorithm for mining of 
hybrid-dimensional association rule using Boolean matrix.  
It mines hybrid-dimension association rules from multi-
dimensional transaction database. We  set definite condition  
that restricts to the hybrid-dimension association rules mined. 
When we design the hybrid dimension association rule mining 
algorithm, we stress on the extension and improvement of the 
Apriori Algorithm the simple Single-dimensional mining 
algorithm. Therefore, the following text will give a brief 
analysis to the Apriori 
II. THE APRIORI ALGORITHM 
The classical Apriori algorithm [1] employ an iterative 
method to find all the frequent iemsets. First, the frequent 1-
itemsets L1 is found according to the user-specified minimum 
support threshold, then the L1 is used to find frequent 2-iemsets 
L2, and so on, until there is no new frequent itemsets could be 
found. After finding all the frequent itemsets using Apriori, we 
could generate the corresponding association rules, according 
to the second step in the process of association rules mining. 
Thus we find the association relationships among transaction 
items [10]. 
The conditional restrict is: in the rules, the predicates 
represent the main attribute (the attribute refers to the 
transaction itemset) can occur many times, but the other 
predications refer to subordinate attributes (some other relevant 
attributes) can only occur once [6]. Therefore, to achieve our 
aim, we design an algorithm for mining hybrid-dimension 
association rules, which meet the definite condition, from 
multidimensional transaction database. 
III. CONDITIONAL HYBRID-DIMENSION ASSOCIATION 
RULES MINING 
The generation of frequent itemsets is the core of all the 
association rules mining algorithms. Previous studies on 
mining multi-dimensional association rules we focused on 
finding non-repetitive predicate multi- dimensional rules.  
We integrate the single-dimensional mining and non-
repetitive predicate multi-dimensional mining, and present a 
method for mining hybrid-dimensional association rules 
using Boolean Matrix.
A. The join process 
There are two steps in generation of the frequent itemsets 
and frequent predicate sets. The two steps are joining and 
pruning. 
 (1) The join generating candidate 2-itemsets C2 ; 
    We find frequent 1-itemsest based on each attribute, at 
the same time we mark items belong to every main attribute. 
So it will be clear that the marked items are the items of 
main attribute and unmarked items are the subordinate items. 
When we search for C2, if both of the two joining items are 
marked items, we call the function for intra-dimensional 
join between the items as well as inter-dimensional join, but 
only proceed with inter-dimensional join on the other 
occasions. 
(2) The join on other occasions 
When we generate frequent itemsets directly according to 
the join mode of the Apriori, it would occur 
intradimensional join as well as inter-dimensional join. But 
there are some restrictions to the generation of intra-
dimensional join and inter-dimensional join. Therefore we 
make the following modifications to the joining step of the 
Apriori. 
  We assume that items within transaction and itemset are 
sorted in lexicographic order. We could take two steps to 
find Lk  
• Distinguish the intra-dimensional join and inter-
dimensional join; If all the items within the two (k-1)-
itemsets  belong to the main attribute; we proceed with 
intra-dimensional join, and proceed with inter-
dimensional join on other occasions. 
• Implement join L k -1   L k -1  , and choose the 
corresponding  joining condition according to the 
characteristic of the join (intra-dimensional join or 
 inter-dimensional join) [6].  
B. The conditional restriction in hybrid-dimension 
association rules  
First the frequent itemsets are obtained, and then we  
generate the hybrid-dimension association rules from the 
frequent itemsets. In the process of generating frequent itemsets, 
we make both intra-dimensional join and inter-dimensional join, 
as well as the conditional restrictions while proceeding with 
join, all of the frequent itemsets have such a character: the 
values within main attribute field occur many times, while the 
values within subordinate attribute fields occur only once. Thus, 
the  rules generated by the algorithm may include many 
predicates, or include the same predicate. So the hybrid 
dimension association rules are formed. 
IV. DEFINITIONS 
A. Association Rules 
Definition 1: Let I = {i1 , i2, i3,……. in} be a set of items. D 
is a database of transactions.  Each transaction T is a set of 
items and has an identifier called TID. Each T ? I. [9] 
Definition 2: Association rule is the implication of the form 
A  B, where A and B are itemsets which satisfies A ? I , 
B ? I and A ?  B = ? . 
Definitio 3: The strength of an association rule can be 
measured in terms of its Support and Confidence.  5XOH
A  B?is true inD with a support (denoted by?sup?
and a confidencedenoted by?conf?whereA and B 
are  set of items. Support ?sup? is a percentage of 
transactions including bothA and B A ? Bin transaction 
sets DConfidence ?conf?is a percentage of transactions 
including bothA and%A ? B in transactions that contain 
A>@ sup   PA ? B_'_  conf   PBA
PA ? B3$
Definition 4Boolean Matrix: is a matrix with element ‘0’ or 
‘1’.  
Definition 5The Boolean AND operation is defined as 
follows:      0.0=0    0.1=0   1.0=0 1.1=1. Where logical 
Volumn 2
 646
implication is denoted by ‘.’ or AND. If we write C=A.B, then 
C can be determined by listing all possible combinations of A 
and B. Truth  table for AND will be:  
 7$%/(,$1'23(5$725
A B C=A.B 
0 0 0 
0 1 0 
1 0 0 
1 1 1 
Definition 6The Boolean ‘AND calculus’ is carried out to 
an arbitrary k columns vector of the Boolean matrix; the 
sum of ‘1’ of the operation result is called k- support of the 
k columns vector. 
Proposition 1: If the sum of ‘1’ in a column vector Ai is less 
than min_sup_num, it is not necessary that Ai will attend 
calculus of the next level supports. 
Rationale: According to the principle of the Boolean AND 
calculus, the result is ‘1’ when the value of all vector 
elements (in a record) is ‘1’ [7].  
Proposition 2: Itemset A is a k-itemsets (each item belongs 
to different dimension/attribute); |LK-1(j)| presents the 
number of values in a dimension/attribute ‘j’ in all frequent  
(k-1)-itemsets of the frequent set LK-1. There is an item j in 
X. If  |LK-1(j)| is smaller than k-1, itemset X is not a frequent 
itemset [7]. 
V. METHOD 
Let D is a multi-dimensional transactional databaseZLWK
m UHFRUGV DQG n GLPHQVLRQV and min_sup is the 
minimum support of D. The minimum support number 
min_sup_num can be defined as: min_sup_num= min_sup 
×m [8]. 
 Dimensions, which are also called predications, attributes 
or fields, constitute a dimension combination with a formula 
dd?dnin which dj represents jWK dimension. 
The iWKrecord can be expressed as value combination 
with a formula vivi?vin where vij represents 
j-th value in i-th record, ?  i ? m DQG?  j ?  nThe form
djvijis called an “item” in relational database or other 
multidimensional data sets, which is denoted by IijThat is:
Iij  djvij where ?  i ? m DQG ?  j ?  n>@
Among the n attributes, (n-1) attributes are subordinate 
attributes and QWK attribute is the main attribute. 
A set constituted by some “item” Iij is called 
“itemset”. The “itemset” which may consist of the items 
from subordinate attributes or main attribute only or from 
subordinate and main attributes. 
The Boolean AND operation is carried out to an arbitrary 
n column vector of the Boolean matrix; the sum of 1’s of the  
operation result is called n-support of the n column 
vector[8]. 
VI. ALGORITHM 
The algorithm consists of following steps: 
1. Transforming the multidimensional transaction 
database into two Boolean matrices one for subordinate 
attributes (Am*p) and one for main attribute (Am*q). 
2. Generating the set of frequent 1-itemset LA1 (from the 
subordinate attributes matrix) and LB1 (from the main 
attribute matrix). 
3. Pruning the Boolean matrices. 
4. Perform AND operations to generate 2-itemsets:        
LA1    LB1 and LA1    LA1    for inter-dimension join 
and LB1    LB1  for intra-dimension join. 
5. Repeat the process to generate (k+1)-itemsets from Lk. 
A. Transforming the multidimensional transaction database 
into Boolean matrix 
The multidimensional transaction database D has m 
records and n dimensions. Each dimension has different 
value combinations or categories. To extract such patterns 
from the database, the categorical and symmetric binary 
attributes are transformed into “items” [8]. This type of 
transformation can be performed by creating a new item for 
each distinct attribute-value pair. Then association rule 
mining algorithm can be applied. If there are k value 
combinations in a dimension then k(k-1)/2 binary items will 
be created.  
We set up separate Boolean matrix for subordinate 
attributes and main attribute. A Boolean matrix Am*p which 
has m (records or transactions) rows and p (for (n-1) 
subordinate attributes values) columns and another Boolean 
matrix Bm*q which has m (records or transactions) rows and 
q (for (nth) main attributes values) columns. For each 
transaction in subordinate attributes matrix, only one 
category of each dimension contains the value 1, rest will 
contain 0. Whereas in main attribute matrix there can be 
more than one category have value 1 in a transaction. 
 B.  Generating the frequent 1-itemset L1       
      The Boolean matrices Am*p and Bm*q  are scanned and 
support numbers of all dimension values are computed. The 
Support number  =  Ij * Sup_num,  of Ij ,  is the number of 
‘1s’ in the jth column of the Boolean matrix. If Ij *sup_num 
is smaller than min_sup_num, itemset { Ij } is not a frequent   
1-itemset and the jth column will be deleted from the matrix . 
Otherwise itemset { Ij } is the frequent 1-itemset and is 
added to frequent one itemset list L1. 
   C.  Pruning the Boolean matrix 
       Pruning the Boolean matrix means deleting some 
columns from it. This is described in detail as: Let I be the 
set of all items in the frequent set   LK-1, where k>2. 
Compute all     |LK-1(j)| where jI, and delete the column 
of correspondence item j if |LK-1(j)| is smaller than 
min_sup_num.  
  D. Generating the set of frequent k-itemsets Lk 
       Frequent k-itemsets are discovered by AND relational 
calculus, which is carried out for the k-vectors combination. 
If the Boolean matrix Ap*q  has q columns where 2<Tn and 
min_sup_num is hpm, (Cq )k, combinations of k-vectors 
will be produced. The AND relational calculus is for each 
Volumn 2
 647
combination of k-vectors. If the sum of element’s values in 
the ‘AND’ calculation result is not smaller than the 
minimum support number min_sup_num, the k-itemsets 
corresponding to this combination of k-vectors are the 
frequent k-itemsets and are added to the set of frequent k-
itemsets Lk. The rules generated from the algorithm may 
include many predicates, or include the same predicate. So 
the hybrid dimension association rules are formed. 
VII.  ILLUSTRATIVE EXAMPLE  
We integrate the single-dimensional mining and non-
repetitive predicate multi-dimensional mining, and present a 
method for mining hybrid- dimensional association rules 
using Boolean Matrix. 
Let a multi-dimensional transaction database Order, 
which includes two subordinate attributes Age and Income 
and one main attribute Ordered_items as given below. 
TABLE II. ORDER 
   
 
 
 
 
 
 
 
 
 
 
 
 
In order to simplify the implement process, we preprocessed 
some attributes before algorithm executes, shown below: 
  TABLE III. Mapping Age           TABLE IV. Mapping Income 
        
                                TABLE V.  ORDER   
 
 
 
 
 
 
 
 
 
 
 
 
 The multidimensional transaction table Order is 
transformed into two Boolean Matrices: Am*p   as 
subordinate attributes matrix and Bm*q  as main attribute  
 matrix. Which are as given below: 
Let the minimum support is 0.4; m=10 is the number of 
transactions. Therefore min_sup_num=10 × 0.4=4.0. We 
compute the sum of the elements value of each column in 
the Boolean matrix A10*5 and B10*5 set of frequent 1-itemset 
is :    LA1 = {{y},{m},{h},{l}},  LB1 ={ {I1},{I2},{I3},{I5}} 
smaller than the minimum support number. Now we 
perform the ‘AND’ operation 
to join LA1 and LB1 (according to the type of join) to 
generate L2.  
  The possible 2-itemsets  are: 
Inter-dimensional join (LA1   LB1 and LA1    LA1): 
  It is performed by AND operation among the columns of 
Matrix Am*p AND Bm*q  and Am*p AND Am*p. 
Intra-dimensional join (LB1 LB1): 
 
It is performed by AND operation among the columns of 
Matrix Bm*p AND Bm*q. The possible 2-itemsets from LA1 
and LB1 are: (y,l), (m,h), (h,1), (h,2),(h,3),(h,5), (l,1),(l,2), 
(l,3),(l,5),(y,1), (y,2),(y,3),(y,5), (m,1),(m,2),(m,3),(m,5), 
(I1,I2),(I1,I3),(I1,I5),(I2,I3),(I2,I5),(I3,I5). 
After performing   ‘AND’  operation to get the support 
numbers of these mentioned item sets the Boolean matrices 
A10*18 and B10*6 are generated. 
 Now again we compute the sum of the columns of matrices 
A10*18  and B10*6. And prune the columns of the 2-itemsets 
those are not frequent. Same process will be repeated till for 
next higher itemsets. Figure 1. shows the process of 
searching for frequent itemsets in detail. In the figure, we 
pruned the candidates generated in each level. For each 
generated frequent itemset, we find that it should meet the 
characteristics of the frequent itemsets that are generated by 
hybrid-dimension association rules mining algorithm. 
Therefore, we can easily generate corresponding hybrid-
dimension association rules from the frequent itemsets 
generated by the algorithm. For example:  In figure 8, {m, h, 
I1, I2:4} is a frequent itemset. We can generate such a 
hybrid-dimension association rule:  
 21 IIhm ?? (Support=40% and Confidence=100%)  
 
Figure 1. The process  of searching for frequent itemsets. 
(Support=40% and Confidence=100%) 
2)1,"("_)10000..6000,"(")40..31,"(" IIXItemsorderedXIncomeXAge ??  
Obviously, in this rule the subordinate attributes Age and 
Income appear at most once, and the main attribute 
Ordered_items appears many times, which meets our 
restriction.This further testifies that it is feasible to mine 
ID Age  Income  Ordered_items  
1 31..40 6780 I1, I2, I5 
2 31..40 7800 I1, I2 
3 31..40 9500 I1,I2,I5 
4 21..30 4850 I2, I4 
5 41..30 7700 I1, I3 
6 31..40 8650 I1, I2, I4 
7 31..50 3500 I1, I3, I5 
8 21..30 4600 I2, I5 
9 21..30 3950 I1, I2, I3 
10 21..40 5400 I3, I4  
Interval Name
  4000-6000 l 
6000-10,000 h 
Interval Name 
  21..30 y 
31..40 m 
41..50 s 
ID Age  Income  Ordered_items  
1 M H I1, I2, I5 
2 M H I1, I2 
3 M H I1,I2,I5 
4 Y L I2, I4 
5 S H I1, I3 
6 M H I1, I2, I4 
7 M L I1, I3, I5 
8 Y L I2, I5 
9 Y L I1, I2, I3 
10 Y L I3, I4  
A10*4                     
Age        Income 
        
 
 
 y         m        h        l 
































1010
0110
0110
0100
1001
1001
0101
0110
0100
1001    
B10*4      
Ordered_Items 
       I1     I2     I3    I5 
































0100
0111
1010
1101
0010
0101
0011
1010
0011
1011
Volumn 2
 648
hybrid-dimension association rules on multidimensional 
transaction database by means of the Boolean Matrix Based 
algorithm. 
VIII.  EXPERIMENT 
To test whether the proposed method is fast, expansible 
and effective our experiments are made on machine with 
Intel(R) Core 2Duo, 1.5GHz and 1GB memory. The 
operating system is Windows XP. We use a database that 
has 500 records and 5 attributes, which have 2~8 different 
values/categories.  
 
Fig 2. Execution Time with different record numbers 
 
IX.    RESULT AND DISCUSSION 
The confidence of association rules has a specific meaning:  
when the antecedent of the rule is satisfied, the consequent 
of the rule will have c% (here c refers to the confidence of 
the rule) possibility of being satisfied. In association rules, 
only in the antecedent part of multidimensional association 
rules include several predictions at the same time. We can 
say that the result of prediction on multidimensional 
association rules is better and more precise than on single-
dimensional association rules. For example, TABLEI 
presents a multidimensional transaction database Order. If 
we make a single dimensional association analysis on the 
predicate Ordered_items, which presents itemsets in 
transaction, the result of analysis will only include the 
relevance of Order itemsets. But, if we make a hybrid-
dimension association analysis, the result of analyzing not 
only includes the relevance of Order itemsets, but also 
includes the relevance of customers’ information, eg: Age, 
Income. Thus when we proceed with predictions on the 
product order of customers’ by means of the result of 
association analysis, obviously, the conditions included in 
the antecedent of multidimensional association rules is more 
abundant, and will bring better prediction result.  
X.   CONCLUSION 
The proposed algorithm uses Boolean matrix and meet the 
definite condition to generate conditional-hybrid 
dimensional association rules, from multidimensional 
transactional database. The main features are: it scans the 
database only once, it does not generate the candidate item 
sets, and it uses the Boolean vector “relational calculus” to 
generate frequent item sets. It stores data in the form of bits, 
so it needs less memory space and can be applied to large 
relational databases. The further work is to optimize the 
algorithm, and increase the efficiency of the algorithm. 
 
REFERENCES 
[1] R. Agrawal, T. Imielinski, and A. Swami. “Mining association rules 
between sets of items in large databases”. Proceedings of the ACM 
SIGMOD Conference on Management of data, pp. 207-216, 1993. 
[2] R. Agrawal and R. Srikant.” Fast algorithms for mining association 
rules”. In proceeding of the VLDB Conference,1994. 
[3] H. Mannila, H. Toivonen, and A. Verkamo. “Efficient algorithm for 
discovering association rules”. AAA1 Workshop on Knowledge 
Discovery in Databases. 
[4] Jiawei Han, Micheline Kamber, “Data Mining Concepts and 
Techniques”. Higher Education Press 2001. 
[5] ZHi-jie LI, Fei-xue HUANG, Dong-qing ZHOU, Peng ZHANG 
“Using Data Cube for Mining of Hybrid Dimensional Association 
Rules” GCC 2003 LCNS3033  pp-899-902 , 2004 © Springer – 
Verlag Berlin Heidelberg 2004.  
[6] Yan Xin, Shi-Guang Ju , “Mining Conditional Hybrid-Dimension 
Association Rules On The Basis Of Multi-Dimensional Transaction 
Database”, Proceedings of the Second International Conference on 
Machine Learning and Cybernetics, Xi’an, 2-5 November 2003. 
[7] Wan-xin xu, ru-jing wang, “A fast algorithm of mining 
multidimensional association Rules frequently”, , Chinese Academy 
of Sciences, Proceedings of the Fifth International Conference on 
Machine Learning and Cybernetics, Dalian, 13-16 August 2006 
[8] Hunbing Liu and Baishen wang, “An association Rule Mining 
Algorithm Based On a Boolean Matrix” , Data Science Journal, 
Volume 6, Supplement 9, S559-563, September 2007. 
[9] Maurice Houtsma, A run Swam i. “Set-oriented mining of association 
rules”. Research Report RJ 9567, IBM Almaden Research Center[C]. 
San Jose, Califomia:[s.n.] 1993 
[10] Jiawei Han, Jian Pei, and Yiwen Yin, Mining Frequent Patterns 
without Candidate Generation, in Proc. Of the ACM Int. Conf. On 
Management od Data, Dallas, TX, May 2000 
[11] Reda ALHAJJ, Mehmet KAYA, “Integrating Fuzziness into OLAP 
for Multidimensional Fuzzy Association Rules Mining”, ADSA Lab 
& Department of Computer Science,University of Calgary,Calgary, 
Alberta, Canada Third IEEE International Conferenceon Data Mining 
(ICDM’0 (ICDM’03)  
[12] Anjna Pandey, K. R. Pardasani,”Rough Set Model for Discovering 
Hybrid Dimensional Association Rules”,International Journal of 
Computer Science and Network Security, Vol 9, No.6, pp159-
164,2009. 
[13] Rolly Intan, “A Proposal Of  Fuzzy Multidimensional Association 
Rules”, Jurnal INFORMATIKA VOL 7: 85-90, NOV 2006. 
[14] Jurgen M. Jams Fakultat fur Wirtschafts- irnd, “An Enhanced Apriori 
Algorithm for Mining Multidimensional Association Rules,   25th Int. 
Conf. Information Technology interfaces ITI  Cavtat, Croatia (1994). 
[15] R.Agrawal,H.Mannila,R.Srikant,H.Toivone and A.I.Verkamo. Fast 
discovery of association rules. In U.M. Fayyed, G.Piatetsky-Sharpiro, 
P.Smyth, and R.Uthurusamy, editors, Advances in knowledge 
Discovery and Data Mining, pages 307-328.AAAI/MIT press, 1996. 
[16] R.Srikant and R. Agrawal. Mining generalized association rules. In 
Proc. of Intl. Conf. On Very Large Databases (VLDB), Sept. 1995. 
A10*5                 
 Age              Income 
      


 
    y        m        s       h         
l    









10001
01001
01010
01100
10001
Ba10*5       
Ordered_Items 
 I1    I2    I3    I4     I5 
 




























00111
10010
10101
01010
00101
01011
10010
00011
10011
Volumn 2
