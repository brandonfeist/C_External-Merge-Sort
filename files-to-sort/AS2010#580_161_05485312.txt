Association Rules parallel Algorithm Based on FP-tree 
Shen Xue-li 
School of Electronic and Information Engineering 
Liaoning Technical University, 
Huludao, China 
shenxueli@sina.com 
Abstract-FP-tree algorithm is the best algorithm in 
association rules algorithm, it dose not need to scan the 
database more times, and it dose not need to generate the 
candidate item set. Therefore, it has repeatedly been quoted by 
many researchers, and make more depth study based on it and 
they have made a lot of good results. But when faced with 
large-scale database, the eiTect is still not very good, In this 
paper, we propose a parallel algorithm based on parallel 
mechanism, we divide the large-scale data into many blocks 
and the blocks are allocated to diiTerent computer nodes for 
processing. By the way, we found it is very good in time 
efficiency, and it is fit for any large database to data mining. 
Keywords-FP-tree; paraUel Algorithm; MPI 
I. INTRODUCTION 
With the development of science and technology, people 
have accumulated large amounts of data in scientific 
research and daily work, How to discovery potential useful 
knowledge in them, it has became research focus by 
scientists. So association rule data mining was proposed 
base on it, the aim is to discover a large number of 
potentially useful rule in the database. 
II. QUESTION PROPOSE 
In the process of data mining, depend on whether 
generate candidate item set. There are two representative 
algorithms: one is Apriori algorithm, it needs to scan the 
database many times, generate a large number candidate sets 
to get association rule. because it need to scan database 
many times and generate a great deal of candidate item set, 
Therefore, efficiency is not good. The other algorithm is 
FP-Growth algorithm, It needs to generate a large frequent 
pattern tree by recursively, Storage and mining these 
conditions FP-tree, it needs to spend much time and waste 
much storage room, When face with large-scale database, 
efficiency is not very high. so we propose a parallel 
association rule algorithm, we divide the database into many 
blocks to carry association rule mining, at last we get the 
result by collecting the information from different nodes. 
III. RELATED CONCEPTS AND DEFINITIONS 
FP-tree algorithm[ 1]: the idea is to convert association 
rule to be a frequent pattern tree but do not generate 
candidate item set, and found association rule 
recursively. step: (1) scan database and get frequent - Item 
Sets. (2) establish FP-tree Separately, While retain their 
associated information, mining recursively. 
Li Tao 
Institute of Graduate 
Liaoning Technical University, 
Huludao, China 
jakelilintao@163.com 
IV. FP-TREE MININoALOORITHM 
Procedure FP-growth(FP-tree, a )[2]: 
(1) if Tree includes a single path p then 
(2) for each combination of p in the path of nodes ( 
Named ?) 
(3) Generate mode ? U a, the degree of support=?, the 
support degree is the least in nodes. 
(4) else for each ai is in the head of theTree { 
(5) Generate a mode ?ai U a , the degree of 
support=aLsupport 
(6) Construct the conditional pattern base of the ?, 
then Construct the condition FP-tree of the Tree ?; 
(7) if Tree ?* <t> , then 
(8) call FP-growth Algorithm (Tree?, ?)} 
The step of construct tree[3]: 
(1) scan the database at first, get the frequent - Item Sets 
(2) sort it in decreasing according to the degree of 
support of the items 
(3) can the database again, construct FP-tree 
Recursive Mining FP-tree, the main steps: 
(1) generated the Conditional model library for each 
node in FP-tree. 
(2) construct FP-tree according to the conditional 
pattern base. 
(3) Construct condition FP-tree recursively, at the 
same time increase frequent set that it contains: if 
condition FP-tree only include a path, so generate 
the frequent set that it included directly. 
V. PARALLELALOORITHM 
The step[4]: 
(1) Task division, to divide a large task into smaller 
sub-tasks, distribute them in the different processor 
nodes. 
(2) Communication, exchange information between the 
various nodes. 
(3) Combination. the result compose together. 
(4) Mapping. each task is mapped to each processor 
node. 
VI. ALoORITHMIDEA 
When we carry on frequent pattern data mining, at first 
scan database to form frequent one set and to sort by 
descending, delete the set that less than the minimum degree 
of support, then divide candidate one set into many blocks 
978-1-4244-6349-7/10/$26.00 @2010 IEEE V4-687 
and use master-slave mode computer, host computer 
distribute tasks to many different computer nodes, make all 
frequent mode tree become smaller ,through task distribution 
to accelerate the speed of implementation. 
Step: 
Step(I):At first scan database to form candidate one set, 
if the candidate is less than the minimum degree of support. 
we will delete it . 
Step(2):Divide candidate one set into many blocks then 
construct FP-tree and retain their associated information. 
Step(3):Use master-slave mode then assign tasks to 
different computer nodes and carry on FP-tree mining 
separately. 
Step(4):The host collected the information from various 
slave computers. 
Step(5):Output. 
FP-tree parallel idea: 
Examples: 
(1) Scan database to form frequent-item set (minimum 
d f . 2) egree 0 support IS 
TID Items bought 
100 a, p, c, m, f, g 
200 p, b, a, c, g, f 
300 f, a, b, y 
400 g, c, f 
500 y, c, a, m, f 
Frequent items 
f, a, c, g, p, m 
f, a, c, g, p 
f, a, y 
f, c, g 
f, a, c, m, Y 
Figure I. Frequent one items 
(2) Construct FP-tree 
Header Table 
Item cOUIl1 
I ! ----]r - ----
g ; , ..... .... --- a4 
,?, ; ?J:: y ?? ('3'"' 
'---- ---??"= "-??t'-I? " B 
Figure 2. Frequent model tree 
(3) construct the conditions model library for every 
node 
Item the condition model library 
a f:4 
C fa:3,f:1 
g fac:2,fc:1 
p facg:2 
m facgp: l.fac: 1 
Y facm: 1 ,fa: 1 
Figure 3. conditions model library 
(4) construct condition pattern tree of FP-tree. 
(5) Output the result 
TID 
100 
200 
300 
400 
500 
600 
700 
800 
900 
1000 
...... 
VII. EXAMPLES 
t e ( h  d egree 0 f 
. 2) support IS 
Items bought Frequent 
items 
a,c,d,b,f,e c,b,d,f,e,a 
f,c,d c,d,f 
b,f,d,c,e c,b,d,f,e 
e,d,c,f,b c,b,d,f,e 
c,b, a c,b,a 
a,C,D,ffi,e C,a,ffi,e,n 
m,b,n,c,a c,a,m,b,n 
c,b c,b 
c,a,m,b, e c,a,ffi,b,e 
C,a,ffi C,a,ffi 
...... ...... 
Figure 4. Tasks distribute 
Host f>rocCSSOI 
Taskdislribut( 
-----
Cpu 
CpUl 
CpU2 
CpUn 
Figure S. Tasks distribute in different processors 
FP-tree parallel algorithm description[5]: 
( 
MPCInt( &argc,&argv); 
MPCComm_size(MPCCOMM_ WORD,&nproc );// get 
the number of processes 
MPCComm_rank(MPCCOMM_ WORLD,&myid):// 
get the process ID 
Data_input(Di);// read into the data block of the Di 
MPCBarrier(MPCCOMM_ WORD); //every process 
synchronization 
if(myid= =0) 
Starwtime=MPC WtimeO; 
for(i=O;i<COLUMN;i++)// distribution the tasks to 
different computer nodes 
(procedure FP-growth(FP-treei, a ) ; 
} 
if(myid= =O){ 
MPCGather(Pfars,FARs,MPCCOMM_ WORLD);// 
gather all association rules 
endwtime=MPC WtimeO; 
print( "wall clock time=%t\n" ,endwtime-startime); 
} 
MPCFinalizeO; 
} 
V4-688 2010 2nd International Conference on Computer Engineering and Technology [Volume 4] 
VIII. TEST 
We test it with 2pc and 3pc,and they are different in 
configuration, cpu and memory respectively are 
2.0GHz(dual),lG;1.60(dual),2G;1.73GHz,O.99G.we got the 
data from http://archive.ics.uci.edulrnl/data-sets.html. 
By experiment, we found if the processors are more the 
time they cost is least. we get the result the next. 
2: 
----. 20 
g '" 
.§ I; 
oJ) 
c 
'u; '" 
8 Ie 
2 
Q.. 
... FF-trcc 
... FF·lrcc with 2 pc 
-A- FF·lrcc with 3 pc 
20 Ir 
minimum degree of support (%) 
Figure 6. Algorithm time comparison 
IX. CONCLUSION 
The way is fit for large database to carry on data mining, 
It helps to reduce the time of execution. 
REFERENCES 
[ I] Jia Caiyan, Ni Xianjun. assocIatIOn rules research 
commentary[J].computer Science,2003. 
[2] Liu Aidi. Frequent Pattern Mining Technique study[D],20070520. 
[3] LaoWei. A New Association Rules Mining Base On Parallel 
Algorithm[D],2005. 
[4] Du Zhihui, High-performance computing parallel programming 
techniques[M]. 
[5] Zhang Iinbo,Chi Xuebin,Mo Zeyao,LiRuo.Introduction to Parallel 
Computing[M].2006. 
[Volume 4] 2010 2nd International Conference on Computer Engineering and Technology V4-689 
