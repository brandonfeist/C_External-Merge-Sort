  
Algorithm Research for mining  
maximal frequent itemsets Based on Item Constrain s 
Sang lin ,Hu-yan cui ,Ren ying,Zhou-lin lin 
Department of Mathematics; Dalian Maritime University; Dalian; Liaoning 116026 
  
 Abstract:Frequent item mining has been extensively used in associ-
ation rules mining. The goal of frequent itemset mining is to discover 
all the itemsets whose supports in the database exceed a user-
specified threshold. However, it often generates a large number of 
candidate itemset,which reduce the e?ectiveness of the mining algo- 
rithms. Constraint-based mining enables users to provide restraints on 
mining their interested association rules and can greatly improve the 
e?ciency of mining tasks. In this paper, we propose  a fast 
constraint-based algorithm for mining maximal frequent itemsets.The 
algorithm introduces item-constraints into the Eclat algorithm, and 
adopts itemset extension pruning strategy to prun search space. Empi- 
rical evaluation showed that the algorithm is very e?ective and can 
solve the lack of constrained frequent itemsets algorithm in mining 
long pattern and intensive database. 
Keywords: Association rules;Maximal frequent itemsets; 
constrained-based mining 
 
I. INTRODUCTION 
Association rule mining is to discover all association rules  
among itemsets in a given database, where the supports and 
confidences of these association rules must satisfy the user-
specified minimum support and minimum confidence. This 
task  is usually decomposed into two steps: (1) Generate all 
itemsets that exceed the minimum support; (2) Construct all 
association rules that satisfy minimum confidence from the 
frequent itemsets in step one. 
In a variety of data mining problems, mining frequent item 
is the basic process but also a key step [1] . Frequent item min- 
ing has been extensively used in association rule 
mining [2][3][4] . The goal of frequent itemset mining is to 
discover all the item- sets whose supports in the database 
exceed a user-specified threshold. However, frequent itemset 
mining algorithms often generate plenty of frequent itemsets 
and rules.In these associa- 
tion rules, often only a small part of the user concerned. Users 
can not very intuitive to find that the focus of mining and val-
uable rule has been overshadowed by a large number of 
invalidrule. 
But for a frequent itemsets that length is L, there are 2 -1L  
frequent subset. When L is very large, mining all the frequent 
itemsets is much difficult. As the maximal frequent itemsets 
has been implied all the frequent itemsets, and many data min- 
ing applications need only mining maximum frequent itemsets 
instead of mining all the frequent itemsets, So which in recent 
years, many people have embarked on researching for maxim- 
al frequent itemsets mining [5][6] . 
At present mining maximum frequent itemsets algorithm 
is mainly based on improved algorithm for Apriori [7]  or FP-
growth [8] algorithm. Apriori-based algorithms need to repeat- 
edly scan data sets, and will produce a large number of candi- 
date item set. Although the FP-growth algorithms do not gen- 
erate candidates, but the FP-tree construction and traversal 
affecting the efficiency of FP-growth algorithm is the bottle- 
neck. To improve the e?ectiveness and e?ciency of mining 
tasks, constraint-based mining enables users to concentrate on 
mining their interested association rules instead of the comp-
lete set of association rules. this paper presents a fast 
constraint-based algorithm for mining maximal frequent item- 
sets,which is based on Eclat algorithm and can solve the lack 
of constrained frequent itemsets algorithm in mining long 
pattern and intensive database. 
The remaining of this paper is organized as follows: In 
section 2, a brief description about Edat algorithm and constr- 
ained association rule mining theory is explained. The next 
section introduces our new detailed method. Following section 
we conduct a series of experiments to show the e?ciency and 
scalability of our proposed algorithms. Conclusions is presen-
ted in last section. 
II. PROBLEM    STATEMENT  
A. Edat algorithm [9]  
Edat algorithm uses a vertical database structure.Vertical 
tid-list of the database refers each  record of database that cons- 
titutes by a project and its all ever appeared transaction-records 
list. So that the support degree for any frequent set can obtaine- 
de  through a number of tid-hst intersection operations. Table 1 
is a example of transaction database, table 2 is its tid-list of the 
sample database. 
1 a b c d e  
2 a c e f  
3 b d  
4 c e f 
5 a c d e f 
 
Table 1. Sample database      Table 2.  tid-list of sample database 
 
Definition 1. Assume that L is an ordered collection.If for all 
X,Y L? ,there is ( )X Y X Y L? ? ? , then L is called a join 
semi-concept lattice; If it is not only a join semi-lattice but 
also a meet semi-concept lattice, then L is called a concept lat-
a b c d e f 
1 1 1 1 1 2 
2 3 2 3 2 4 
5  4 5 4 5 
  5  5  
The National Natural Science Foundation of China (60,575,026))
t
Second International Symposium on Information Science and Engineering
978-0-7695-3991-1/09 $26.00 © 2009 IEEE
DOI 10.1109/ISISE.2009.141
629
  
tice; If the subset S of L exists S S?? ? , then L is called the 
completion-concept lattices; If for X,Y?M, that is X Y M? ? , 
X Y M? ? ,then an ordered collection M L? called  the latti- 
cesub lattice sub-concept lattice. 
Edat algorithm can be summarized into the following two 
steps: First, find out all frequent 1-itemsets and frequent 2-item 
sets(as atoms). Second, the search space (concept lattice) is 
divided into smaller sub-spacethe(sub-concept lattice) by use of 
the equivalence relations,and each sub-concept lattice generates 
independently frequent itemsets. It scans the database only two 
times and calculate the support by use of cross-operation, 
which has achieved good results in practice. 
B. Constrained association rule mining theory 
Many constraint-based frequent itemset discovery techni- 
ques have been proposed recently for various constraint mod- 
els. These constraints include the types of knowledge constra- 
ints, data constraints, dimension / level constraints, interests 
degree constraints and rule-bound, etc. Depending on the app- 
lication of the actual requirements, the most useful constraints 
is item constraint, that is, mining the maximum frequents that 
contain a project (or contain a number of items) . Item constr-
aints in frequent itemset mining were first discussed in Srikant 
et al. (1997), which considered the problem of integrating 
constraints that are Boolean expressions over the presence or 
absence of items into the association rule discovery 
algorithms.  
Definition 1. A constraint B is a predicate on the powerset of 
the  set of items I , i.e., B : 2I ?{true, false}. An itemset X  
satisfies a constraint B if and only if B(X)is true. The comple-  
te  set of itemsets satisfying a constraint B is 
   BSAT (I) {X I | X satisfying B}= ? . 
Definition 2. For item sets X I? , X’support degree expresses 
as X_support, and min_support as a given minimum support. 
If X._support?min_support,and Y_support<min_support 
(for any Y X? ),then claimed X was the largest frequent item- 
set. 
Note that if any superset of a frequent X is infrequent 
then the X is maximum frequent. 
Definition 3. For the maximum frequent itemsets X I? , if X 
satisfy the constraint B, then X is constrained maximum frequ- 
ent itemsets. 
Theorem 1. For any item set X? I, if X satisfy the constraints 
B then any superset Y of X must satisfy the constraints B. 
Proof: Since X satisfy the constraints B , there exists jB ?B 
(j=1,2,…,n)makes jB X? .That is, any superset of X contains    
jB .Therefore, theorem 1 is proved.  
Corollary 1. For any frequent item set constraints X? I, there 
is constrained maximum frequent itemset Y?X. 
Note that any constrained-frequent itemset must be a sub- 
set of the largest frequent itemsets.So,founding frequent item- 
sets can be turned into the problem that discover constrained 
maximum frequent itemset.  
To introduce constraint into the Eclat algorithm, it is nec- 
essary to sort items of the database. After introduction of con- 
straints, we will need to re-sort for the items when mining 
B’maximal frequent itemsets that satisfy constraint iB .First 
order B: when iB  has iij¬ , put iij¬ on the front of the conjunc- 
tion items iB ; Then sort the items of I: put the m projects in 
iB as m items of I  in front. The enumeration tree of diction- 
ary sequence subset sort the items by dictionary order way.So 
it ensure that each itemset expression is the only ,which  de- 
fine the node hierarchical-expansion structure using inclusion 
relationa between the subsets. 
Pruning strategy:Application IEP algorithm(Itemset Ext -
ension Pruning Strategy ) [10]  prun search space,which can im- 
prove the algorithm performance. 
Theorem 2. Assume that B is a item constraint.The maximal 
frequent itemsets can be obtained to satisfy the constraints ,by 
solving maximal frequent itemsets that satisfy each disjunct-
ion item.  
Theorem 3 The maximal frequent itemsets,which meet every 
item B, must be in the equivalence class of the disjunctive 
item.If B has m disjunctive items, maximal frequent itemsets 
must be in topmost equivalence class of P(I m ). 
Theorem 2 and theorem 3 tells us that the item constraint 
B can be broken down to the corresponding equivalence class 
according to disjunctive items,which is the core of dealing 
with constraints. The sorting operation ensure that Bi of B’dis- 
junction stands in the presence of the equivalence classes. So 
through these major equivalence  constrainting, the efficiency 
of algorithm can be greatly improved. Eclat adopts by top-
down enumeration algorithm, and finds out all the equivalence 
class by recur to enumerate intersection of each atomitem.  
Because we just want to mine the maximal frequent itemsets 
that satisfing the constraint, so we will discuss how to divide 
the equivalence classes so that improve the mining speed. 
Comparing with the previously proposed methods, the 
more representative is Separate algorithm [11] ,which generates 
less candidate sets. In Separate algorithm, the idea of Apriori 
algorithm is used to generates candidate sets and frequent item 
sets layer by layer. As the constraints of accession, Separate 
can directly generate candidate sets that meet the constraints 
B. According to the different constraint length,algorithm can 
gen- erate effectively the frequent itemsets of satisfy user 
specified constraints.However,due to Separate algorithm 
follows the conceptual framework of Apriori algorithm 
,therefore, it foll- owed the Apriori algorithm 
disadvantages.That is, it not only generates a large of frequent 
itemsets but also repeatedly scan the database;As stated 
in? 11? ,Separate algorithm also has important shortcomings 
that does’t prune candidate sets and produces a lot of useless 
calculations. 
III. MINING  ALGORITHM  
In this section, we propose Eclat_FCMFS algorithm to 
obtain maximum frequent itemsets  that satisfy the constraint 
B.On the specific constraints,the algorithm uses depth-first str- 
630
  
ategy and effective pruning method to mine rapidly maximum 
frequent. 
Symbol  definition:  
(1) Let constraints B? 1 2 kB B B"? ? ? ?each of iB  has the 
form  as following: i1 i2 imk k k"? ? ? ? ij Ik ? ? 
(2)set-of- iB : It expressed  the set form of iB  shaped like as 
{ i1 i2 im,k , ,k k" } in the B? 
(3) BiL ?frequent itemsets in the iB ? 
The proposed algorithm consists of three phases: 
Phase1: Scan the database once and get frequent 1 – itemsets; 
Phase2. According to disjunctive item i i1 i2 ijB k k k"= ? ? ? , 
Sort order the item set I,and mine maximal frequent 
itemsets in equivalence class { i1 i2 im,k , ,k k" }; 
Phase3.Find out the union set of all maximal frequent 
itemsets.  
Input: Given a transactional database T,a min_support and a 
constraints B? 1 2 kB B B"? ? ? , 
Output: The Max-frequent itemsets satisfying  B. 
Method:Call Eclat_FCMFS algorithm 
1. Scan the database once and get frequent 1 – itemsets 1L ;  
2.For each iB  perform Eclat_FCMFS( iB ); 
3. L=
1
k
i
i
L?
=
? 
Eclat_FCMFS( iB ) 
5?I={ i1 i2 ijk ,k , , k ," "" } ;              
6?C= 1 iset-of-BL ? ? 
7?For(t=1;t<|C|+1;t++){ 
8?R=set-or- k tB Y? ;                   // tY C?   
9?Tidset(R)=Tidset( iX )?Tdsiest( jX ); 
10?If (|Tidset(R)| ?minsupport*|T|) 
11? Bi BiL L R= ? ?}                   
12?C= BiL ; 
13? BiL =? ; 
14?For(t=1;t<|C|+1;t++){ 
15?For(n=t;n<|C|+1;n++){ 
16? t nR Y Y= ? ; 
17?For(j=1;j<i;j++){ 
18?If(set-of- jB R? ) 
19?Next t?} 
20?For(j=1;j<t;j++){ 
21?If(R? jY ) 
22?Next n?} 
23?Tidset(R)=Tidset( iX )?Tdsiest( jX ); 
24?If (|Tidset(R)| ?minsupport*|T|) 
25? tY R= ?} 
26?For(j=1;j<| BiL |+1;j++) 
27?If( t jY X?  and j BiX L? ) 
28? Bi Bi tL L Y= ? ?? 
29?Return BiL  
From above we can see that Eclat_FCMFS algorithm is  
searched out from the equivalence classes that meeting small- 
est frequent itemset iB . In Eclat_FCMFS algorithm, by large 
equivalence classes of atoms,  all  frequent  sets that meet  dis- 
junction are obtained. In the function Eclat_FCMFS ( iB ), it 
cuts invalid candidate pattern and comes into directly the next 
cycle when the pruning condition 17), 18) is satisfied. Thus it 
can  save greatly computing time;When the condition 20), 21) 
is satisfied, it will be merged into the next one set to dynamic- 
ally reduce the number of cycles; When the condition 24) is 
satisfied, the consolidation-item R will replace the original tY , 
and thereby accelerating speed of item consolidation and sav-
ing  computing tim. Furthermore, since the algorithm based on  
the Eclat algorithm  we only need to access the database can 
be twice, which greatly saves the time spent on accessing the 
database with regard to the time spent. 
 IV.    EXPERIMENTS AND PERFORMANCE EVALUATION  
Separate algorithm is one of more efficient and classic 
algorithms in the current mining frequent itemsets . In order to 
illustrate the performance of the Eclat_FCMFS algorithm,we 
compare it with the Separate algorithm.  
We conducted some experiments to evaluate e?ciency of 
our algorithms. These algorithms were implemented using 
C++ language and tested on a PC with a single Intel Pentium 
IV 80G processor and 512MB main memory using the 
Windows XP operating system. Experimental data sets using 
literature data on method of synthesis of [5]. We use V25F20- 
T50KN1KL100 to represent the default setting where the 
average size of the transactions is 25, the average size of the 
maximal potentially frequent itemsets is 20, the number of 
transactions is 50K, the number of items is 1K, and  the num-
ber of maximal potentially frequent itemsets is 100.  
To test the e?ect of a constraint on mining frequent item- 
sets, the selectivity? of a constraint B is defined as follow:  
Number of frequent itemsets not satisfying 
Number of frequent itemsets
B? = . 
Consequently, a constraint with 0% selectivity means 
every frequent itemset satisfies the constraint, while with100%,  
selectivity means every frequent itemset violates the 
constraint.  
A.  Mining time-varying conditions as the number of 
transactions increasing. 
In the first experiment, we wanted to investigate how run 
time changes as the transaction size vary. Therefore, we first 
set the minimum confidence at 0.5%, the constraint selective 
bind to take ? =20% and ? = 80% respectively. It is obvious 
from Fig.1 that the run time of both  Eclat_FCMFS and 
Separate algorithms increases as the number of transactions 
increases, and the excavation time is linear growth in each 
case.We can also observe that when ? = 20% ,Eclat_FCMFS 
631
  
algorithm for mining time is more longer than that when ? = 
80%;When ? = 20%, mining time of Eclat_FCMFS algo- 
rithm? is close to the  that of Separate algorithms. When ? = 
80%, Eclat_FCMFS algorithm for mining time is far less than 
that of  Separate algorithm. This is because that Separate algo- 
rithm is based on the idea of Apriori algorithm. When the con- 
straint selectivity is large, Separate algorithm requires contin- 
uous access to the database and produces a large number of 
candidate sets, which greatly increased the time of excavation. 
Eclat_FCMFS algorithm in these two areas significantly re- 
duced the excavation time through the use of effective strate- 
gies. 
Fig.1 Effect of the number of transactions
0
200
400
600
800
1000
1200
20K 40K 60K 80K 100K
Number of transaction in database
Mi
ni
ng
 t
im
e(
s)
Separate(20%)
Eclat_FCMFS(20%)
Separate(80%)
Eclat_FCMFS(80%)
 
B. Mining time-varying as the constraint selectivity 
increasing.  
The  minimum support sets 0.5%.  Fig. 2 shows how  the 
Eclat_FCMFS and Separate  algorithms changes as the constr- 
aint selectivity increases from 0% to100%. We can see that the  
execution time of the Eclat_FCMFS and Separate algorithm 
decreases as the constraint selectivity increases. But when ? = 
15%, Eclat_FCMFS mining algorithm is 40-50% times faster 
than the Separate algorithms. As the constraint selectivity incr- 
eases,  i.e.,  more frequent itemsets violate the constraint,  the 
Eclat_FCMFS algorithm can prune more search space.  
When the constraint selectivity is smaller, Eclat_FCMFS 
mining time is far less than the Separate algorithm.With the 
increase in selective constraint, Separate mining time  gradua- 
lly approximate the mining time of Eclat_FCMFS algori- 
thm.This is due to the number of mining frequent itemsets will 
be subsequently increased with decrease of the constraint, then 
it will dig out a large number of long frequent pattern. There-
fore, for the database-intensive digging, the performance of 
the Eclat_FCMFS algorithm is better than Separate algorithm.  
C. Mining time-varying conditions as the minimum support 
threshold. 
In this section, we wanted to investigate how run time 
changes as the minimum support value. The experiments are 
performed over the dataset with the default settings and the 
constraint selectivity? = 20% and ? = 80% respectively. Fig.3 
shows how the Eclat_FCMFS and Separate algorithms chan- 
ges as the minimum support threshold increases from 0.25% 
to 2%. In Fig.3, as the minimum support threshold increases, 
Fig.2 effect of the constraint selectivity
0
100
200
300
400
500
600
0% 20% 40% 60% 80% 100%
Constraint Selectivity
Mi
ni
ng
 t
im
e(
s)
Separate
Eclat_FCMFS
the execution time of all algorithms decreases because of the 
reduction in the number of frequent itemsets. This is because 
as the minimum support decreases the mining frequent item-
sets is also reduced, so can dig out the a large number of  long 
pattern frequent itemset.  
We can also observe that when ?  = 20% the mining-time 
of Eclat_FCMFS algorithm is more longer than that when ?= 
80%, which is due to the frequent itemsets generate very little 
when selective constraints is larger. Therefore, the algorithm 
excavation time will be very few. 
Fig.3 Effect of  minimum support threshold
0
100
200
300
400
500
600
700
800
900
1000
0.25% 0.50% 0.75% 1% 1.25% 1.50% 1.75% 2%
Minimum support(%)
Mi
ni
ng
 t
im
e(
s)
Separate(20%)
Eclat_FCMFS(20%)
Separate(80%)
Eclat_FCMFS(80%)
 V.     CONCLUSION 
Frequent itemset mining is one of the fundamental data 
mining problems in numerous studies. Constraint-based mining 
enables users to provide restraints on mining their interested 
association rules and can greatly improve the e?ciency of mining 
tasks.In this paper, we first  introduces the concept, theories 
and correlational algorithms of constrained association rules, 
then propose a fast constraint-based algorithm for mining maximal 
frequent itemsets. As Separate algorithm’s correctness and 
effectiveness have been proved by Cui Lixin and other 
scholars [15] .Therefore, this paper comparison Eclat_FCMFS 
algorithm with Separate algorithm in  aspect of  the number of 
transactions, minimum support and constraint length. The 
experimental results show that Eclat_FCMFS algorithm is very 
e?ective and can solve the lack of constrained frequent itemsets 
algorithm in mining long pattern and intensive database. 
 
ACKNOWLEDGMENT 
632
  
The authors are grateful to the anonymous referees for 
valuable comments and suggestions,which significantly imp- 
rove the presentation of this article. 
REFERENCES 
 [1] Agrawal R.Srikant R.Fast algorithms for mining  assoei ation rules.In 
Proeeeding of the 20th International Conferenee on Very Large 
Databases.Santiago,1994.487~499 
 [2] R.Agrawal,R.Srikant,Fast algorithms for mining associa- tion rules in 
large databases, VLDB, September 1994. 
[3] R. Agrawal, T. Imielin ´ ski, A. Swami, Mining association rules between 
sets of items in large databases, ACM SIGMOD, May 1993. 
[4] A.Savasere,E.Omiecinski,S.Navathe, An efficient algorithm for mining 
association rules in large databases, VLDB, 1995. 
[5] D.Burdick,M.Calimlim and J.Gehrke,Mafia:a maximal frequent itemset 
algorithm for transactional databases,Proc.of the 17th Int.Conf.on Data 
Engineering, 2001, 443-452. 
[6] K.Gouda and M.J.Zaki,GenMax:an efficient algorithm for mining 
maximal frequent itemsets,Data Mining and Knowledge Discovery. 
2005(11):1–20  
[7] Agrawal R,I mielinski T,Swami A.Mining Association Rules between Sets 
of Items in Large Database [A].Porceedings of ACM SIGOD Conference 
on Mangement of Data[C]. Washinton DC,1993:207-216. 
[8] Han J. Pei J,Yin Y. Mining frequent patterns without candidate 
generation[C]. Dallas,TX:ACM-SIGMOD,2000. 
[9] Mohammed J.Zaki. Scalable Algorithms for Association  Mining .Knowle- 
dge and Data Engineering, 2000,12(2):372-390. 
[10] Xu Yu-sheng,Ma Zhi-xin,Li Lian and Tharam s.Dillon,Effeetive Pruning 
Strategies for  Sequential Pattern Mining. First International Workshop on 
Knowledge Diseovery and Data Mining?Adelai?Australia 2008,January 
23, 19-23. 
[11]YAN Yue-Jin,Ll Zhou-Jun,CHEN Huo-Wang, Frequent ItemSets 
Mining Algorithms. computer science.2004,31(3),112-114. 
[12] CUI Li-Xin,YUAN Sen-Miao,ZHAO Chun-Xi, Algorithms for Mining 
Constrained Association Rules. CHINESE J.COMPUTERS, 2000,23(2): 
    216-220. 
[13] D.Burdick,M.Calimlim and J.Gehrke,Mafia:a maximal frequent itemset 
algorithm for transactional databases,Proc.of the 17th Int.Conf.on Data 
Engineering, 2001, 443-452. 
[14] SG J,Chen C.MMFI:an effective algorithm for mining maximal frequent      
itemsets[C]. Proceeding of the IEEE International Symposium on 
Information Processing,IEEE CS Press,2008:26-30. 
[15] Grahne G,Zhu JF.Fast algorithms for frequent itemset mining using FP-
trees[J]. IEEE Transactions on Knowledge and Data Engineering,. 
2005,10:1347-1362. 
[16]Bucila,C.,Gehrke,J.,Kifer,D.and White, W.,2002. a dual pruning  algori- 
thm for itemsets with constraints In: Procee dings of ACM International 
Conference on Knowledge Discovery and DataMining,pp.42–51. 
 
 
 
 
633
