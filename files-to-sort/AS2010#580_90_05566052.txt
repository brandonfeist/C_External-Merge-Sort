Notice of Retraction 
 
 
 
 
 
After careful and considered review of the content of this paper by a duly 
constituted expert committee, this paper has been found to be in violation of 
IEEE's Publication Principles. 
 
We hereby retract the content of this paper. Reasonable effort should be made to 
remove all past references to this paper. 
 
The presenting author of this paper has the option to appeal this decision by 
contacting TPII@ieee.org. 
Mining Top-k Fault Tolerant Association Rules by Redundant Pattern 
Disambiguation in Data Streams 
You Yuyang, Zhang Jianpei. 
College of Computer Science and 
Technology 
Harbin Engineering University 
Harbin, HLJ, P. R. China 
arthurwy@163.com 
Yang Zhihong 
Institute of Medicinal Plant 
Development 
CAMS and PUMC 
Beijing, P. R. China 
zhyang@implad.ac.cn 
Liu Guocai 
Center for Space Science and 
Applied Research 
Chinese Academy of Sciences 
Beijing, P. R. China 
arthurxl@sina.com 
Abstract—The real-world data may be usually polluted by 
uncontrolled factors or contained with noisy. Fault-tolerant 
frequent pattern can overcome this problem. It may express 
more generalized information than frequent pattern which is 
absolutely matched. The present research is integrated with 
previous research into an integrity new method, called Top-
NFTDS, to discover fault-tolerant association rules over 
stream. It can discover top-k true fault-tolerant rules 
without minimum support threshold and minimum 
confidence threshold specified by user. We extend the 
negative itemsets to fault-tolerant space and disambiguate 
redundant patterns by this algorithm. Experiment results 
show that the developed algorithm is an efficient method for 
mining top-k fault-tolerant association rules in data streams. 
Keywords-negative itemset; top-k; fault tolerant association 
rule; redundant pattern; data stream 
I.  INTRODUCTION 
A data stream is a massive, ordered sequence of data 
elements continuously generation at a rapid rate. 
Association rules mining in data stream environment is a 
major application of data stream mining. The research of 
mining top-k fault tolerant frequent patterns in data 
streams has been carried out. Here, we propose an 
effective algorithm, called Top-NFTDS, to disambiguate 
fault tolerant redundant pattern generated by Top-FTDS 
algorithm. The next process is constructing the fault 
tolerant association rule from the fault tolerant frequent 
patterns with confidence. There is the association rule if 
one has three out of four or even two out of four symptoms, 
coughing, fever, a headache, and a sore throat, then a 
doctor will diagnose one catching a cold but need not get 
all these symptoms at the same time [1]. It is called the 
fault tolerant association rule. Association rules are defined 
as the form X?Y where X and Y are frequent itemsets. Not 
all association rules with high support and confidence are 
significant. First, much of the information is probably 
inevitable, or is to be expected. Second, the information 
expressed by association rules may be invalid. Finally, the 
information expressed by association rules may be 
repeated. Therefore, help users to discover useful 
knowledge, we need to use a variety of techniques to 
effectively reduce the large number of redundant patterns. 
Currently, most researches of the association rule 
mining are based on the support and confidence 
framework and they focus on mining positive association 
rule. In practice, negative association rules also hide some 
useful information [2]. Negative association rules are 
defined as the form X?¬Y, ¬X?Y, and ¬X?¬Y where X 
and Y are frequent itemsets [3]. A negative pattern 
describes the negative relationships between the itemsets. 
Using statistical information of negative patterns and 
positive patterns, Top-NFTDS negate  lots of redundant 
patterns. Comparing with traditional static databases, data 
streams are continuous, unbounded, usually flowing with 
high speed and the data elements are not necessarily 
uniformly distributed. Since complexity of time and space 
of the algorithm has very stringent restrictions mining in 
data stream. Top-NFTDS algorithm adopts discovered 
fault tolerant frequent patterns to calculate the negative 
patterns but not rediscover the negative patterns. By this 
strategy, we improve the efficiency of the algorithm 
greatly. 
In preliminary work, we propose the Top-FTDS 
algorithm, and it consists of three phases: construction of 
Top-FTDS-tree phase, reconstruction of Top-FTDS-tree 
phase and fault-tolerant frequent pattern generation phase. 
The Top-FTDS-tree is an effective data structure. It is 
developed for maintaining essential information and 
mining top-k fault-tolerance frequent patterns of data 
streams within the current sliding window. Implementation 
procedure of Top-FTDS algorithm is no more repeated 
here. 
In this paper, an effective algorithm, called Top-
NFTDS, is designed to generate the fault tolerant 
association rules of data stream and more importantly to 
disambiguate the redundant patterns at the same time. 
Experiment results show the good effectiveness, the high 
efficiency and accuracy of the algorithm. 
The rest of this paper is organized as follows. Problem 
definition is presented in Section 2. Section 3 details the 
whole Top-NFTDS algorithm and gives detailed algorithm 
design. The experiment results are shown and discussed in 
Section 4. In Section 5, we conclude this paper. 
II. PROBLEM DEFINITION 
Association rules are defined as the form X?Y where 
X and Y are fault tolerant frequent patterns generated by 
Top-FTDS algorithm. Unlike traditional association rules, 
in the fault tolerant association rules mining field, support 
of the association rule is fault tolerant support. By 
allowing the existence of patterns mismatch, fault tolerant 
pattern must be with the higher value of fault tolerant 
support and the lower value of confidence of fault tolerant 
rules. A fault tolerant association rule is an expression X 
FTS? FTCY, where FTS is fault tolerant support of the fault 
tolerant rule. It is the joint probability of a transaction 
fault tolerant containing both X and Y denoted as supp(X
?Y). FTC is fault tolerant confidence of the fault tolerant 
rule. It is the conditional probability of a transaction that 
2010 International Conference on Intelligent Computing and Cognitive Informatics
978-0-7695-4014-6/10 $26.00 © 2010 IEEE
DOI 10.1109/ICICCI.2010.91
470
the transaction contains Y, given it contains, X denoted as 
conf(X?Y) [4] [5].   
if the itemset X?Y is frequent, the rule is frequent, i.e., 
supp(X?Y)?minimum support. A rule is confident if 
conf(X?Y) ?  minimum confidence, where minimum 
confidence is a value specified by user [6]. Top-FTDS 
algorithm has been successfully discovered top-k fault 
tolerant frequent patterns in data streams without 
minimum support threshold specified by user. Similarly, 
Top-NFTDS algorithm dose not predefine the minimum 
support threshold and minimum confidence threshold and 
then does not include redundant fault tolerant rules. 
Fault tolerant frequent itemsets have the following 
three properties, all these properties are the basis of fault 
tolerant association rules mining algorithm. 
Property 1. Let X, Y are different fault tolerant frequent 
itemsets, if there exist X?Y, and then there exist supp(X)? 
supp(Y). 
Property 2. Satisfied with prerequisite of fault tolerance 
parameter, superset of fault tolerant frequent itemsets may 
be fault tolerant frequent itemsets too. 
This property is significant different from the property 
of frequent itemsets. It is a unique property of fault 
tolerant frequent itemsets. 
Property 3. Satisfied with prerequisite of fault tolerance 
parameter, subset of fault tolerant frequent itemsets must 
be fault tolerant frequent itemsets too. 
Definition 1. For certain frequent itemsets X and Y, if 
there exist X?Y=?, and then there exist following eight 
association rules. 
X?Y, X?¬Y, ¬X?Y, ¬X?¬Y, and 
Y?X, Y?X ¬, ¬ Y?X, ¬ Y?¬ X 
The form X?Y is called positive association rule and 
X?¬Y, ¬X?Y, ¬X?¬Y are called negative association 
rules. A certain negative association rules must meet the 
following three conditions: 
1. X?Y=?. 
2. supp(X)? min_supp and supp(Y)? min_supp. 
3. supp(X?¬Y) ? min_supp or supp(¬X?Y) ? min_supp 
or supp(¬X?¬Y) ? min_supp. 
Top-NFTDS algorithm does generate fault tolerant 
association rules from fault tolerant frequent patterns 
which are mined by Top-FTDS algorithm. Simultaneously, 
it does reduce invalid rules by the technology of 
redundant pattern disambiguation, and Top-NFTDS 
algorithm need not to input minimum support threshold 
and minimum confidence threshold.  Description of 
calculating support of negative association rules is 
followed. 
Definition 2. For certain frequent itemsets X and Y, if 
there exist X?Y=? and X, Y?I, and then there exist 
following equations. 
1. supp(¬X)=1-supp(X). 
2. supp(X?¬Y)= supp(X)- supp(X?Y). 
3. supp(¬X?Y)= supp(Y)- supp(X?Y). 
4. supp(¬X?¬Y)= 1-supp(X)- supp(Y)+supp(X?Y). 
Description of calculating confidence of negative 
association rules is followed.  
Definition 3. For certain frequent itemsets X and Y, if 
there exist X?Y=? and X, Y?I, and then there exist 
following equations. 
1. conf(X?¬Y)=(supp(X)- supp(X?Y))/ supp(X)=  
1-conf(X?Y). 
2. conf(¬X?Y)=(supp(Y)- supp(X?Y))/ (1-supp(X)). 
3. conf(¬X?¬Y)=(1-supp(X) -supp(Y)+supp(X?Y))/ (1-
supp(X))=1- conf(¬X?Y). 
There have not only one definition of redundant 
association rules. 
Definition 4. For association rule X?Y and A?B, if 
support and confidence of rule of A?B are higher than 
support and confidence of rule of X?Y, one thing can be 
sure that rule A?B is redundant association rule of X?Y. 
Definition 5. Let rule X?Y and A?B satisfy X?Y= A?
B=I and X?A, that rule A?B can be called redundant 
association rule of rule X?Y. 
Definition 6. Let rule X?Y and A?B satisfy X?Y=I and 
A?B=L, if there exist L?I and  X?A that rule A?B can 
be called redundant association rule of rule X?Y. 
To illustrate redundant association rules more clearly, 
consider the following example [7]. 
TABLE I.  REDUNDANCY IN RULE GENERATION 
Rule Support Confidence 
X?YZ supp(X?Y?Z) supp(X?Y?Z) / supp(X) 
XY?Z supp(X?Y?Z) supp(X?Y?Z) / supp(X?Y) 
XZ?Y supp(X?Y?Z) supp(X?Y?Z) / supp(X?Z) 
X?Y supp(X?Y) supp(X?Y) / supp(X) 
X?Z supp(X?Z) supp(X?Z) / supp(X) 
Consider five different rules generated from frequent 
itemset X, Y, and Z with given support and confidence 
threshold as shown in Table 1. If rule X?YZ is true at a 
user specified value of support and confidence, then rules 
such as XY?Z, XZ?Y, X?Y, and X?Z are redundant. 
From Table 1, we can see that the support and confidence 
values of the rule X?YZ is less than the support and 
confidence values of those rules such as XY?Z, XZ?Y, 
X?Y, and X?Z. 
The definition of the correlation is as follows: 
Definition 7.  CorrX,Y= supp(X?Y) / supp(X) supp(Y). 
There are three possible cases for the values of the 
correlation CorrX,Y. First, if there exist CorrX,Y >1, then the 
association of X and Y are positive correlated. Second, if 
there exist CorrX,Y <1, then the association of X and Y is 
negative correlated. Finally, if there exist CorrX,Y =1, then 
the association of X and Y is interdependent. 
Technology of top-k has been introduced detailedly in 
preliminary work, here we will not repeat. 
III. MINING TOP-K FAULT-TOLERANT ASSOCIATION 
RULES OVER DATA STREAMS 
A. Calculating Fault-Tolerant Negative Itemsets 
In this section, we extend the theories of negative 
itemsets to fault-tolerant space. Obviously, fault-tolerant 
itemsets are always with higher value of support but lower 
471
value of confidence. Top-NFTDS algorithm is designed 
for mining top-k fault tolerant rules that the k is not the 
number of fault-tolerant frequent patterns but the number 
of fault-tolerant association rules. Top-NFTDS algorithm 
need not input the minimum support threshold and 
minimum confidence threshold. 
Property 2 shows that fault-tolerant itemsets are unlike 
traditional itemsets that is no anti-monotone. Here, we 
construct a specific example to illustrate that calculation of 
fault tolerant negative itemsets is different from calculation 
of traditional negative itemsets. 
 
Figure 1. Transactions in sliding windows. 
The transaction data stream TDS consists of two 
consecutive sliding windows, i.e., SW1 and SW2. Let 
window size W is 6 transactions [8]. Let fault tolerant 
factor is 1. For mining k most frequent itemsets, Top-
NFTDS algorithm need not input the minimum support 
threshold and minimum confidence threshold. Let all 
generated positive itemsets and negative itemsets are 
frequent. In Fig.1, let itemset (a, b, c) is X and (b, c, d) is Y. 
Table 2 shows the positive support, negative support, 
positive fault tolerant support, negative fault tolerant 
support, confidence, and fault tolerant confidence of X and 
Y. 
TABLE II.  REDUNDANCY IN RULE GENERATION 
Itemsets Supp Conf FT-Supp FT-Conf 
X 16.7  83.3  
Y 33.3  50  
¬X 83.3  16.7  
¬Y 66.7  50  
X?¬Y 0 0 50 60 
¬X?Y 16.7 100 0 20 
¬X?¬Y 66.7 80 0 0 
By calculating above, we can get more useful 
information. For negative rule ¬X?¬Y, traditional 
calculation method can draw the conclusions that rule 
¬X?¬Y is true. However, by fault tolerant theory, rule 
¬X?¬Y is false, the same as rule X?¬Y. If we extend the 
theories of negative itemsets to fault-tolerant space then we 
can get higher value of fault tolerant support and fault 
tolerant confidence. More useful information can help us 
to judge the effectiveness of discovered rules. By means of 
Top-NFTDS algorithm, we may achieve the goal of 
redundant pattern disambiguation more effectively. 
B. Mining Top-k Fault-Tolerant Association Rules 
In preliminary work, we has proposed Top-NFTDS 
algorithm. Using this algorithm, we can acquire k fault 
tolerant itemsets. Then the following work is to generate 
fault-tolerant association rules. We propose an efficient 
algorithm called Top-NFTDS to generate rules using 
technology of fault tolerant negative itemsets. The 
algorithm consists of two phases: generating fault tolerant 
rules phase and redundant pattern disambiguation phase. 
Algorithm 1 is designed for generating fault tolerant 
rules phase and it is given:  
Algorithm 1: Generating fault tolerant rules 
Input: FTI1, FTI2,…FTIk
Output: fault tolerant positive rules and fault tolerant 
negative rules. 
1 Get-FTitemsets(FTI1, FTI2,…FTIk); 
2 Initialize(PFTR, NFTR); 
3 For each fault tolerant itemset FTIi do 
4 Calculate_Psupp(); 
5 Calculate_Nsupp(); 
6    For each fault tolerant itemset FTIi?FTIk=X do 
7      Calculate_Psupp(); 
8      Calculate_Nsupp(); 
9      Calculate_Pconf(); 
10      Calculate_Nconf(); 
11      Sort_Psupp(); 
12      Sort_Nsupp(); 
13      Sort_Pconf(); 
14      Sort_Nconf(); 
15         If  X. Psupp >  XK. Psupp then 
16              If  X. Pconf >  XK. Pconf then 
17                  Creat _PFTrule(PFTR); 
18              End if 
19         End if 
20         If  X.Nsupp >  XK. Nsupp then 
21              If  X. Nconf >  XK. Nconf then 
22                  Creat _NFTrule(NFTR); 
23              End if 
24         End if 
25   End for 
26 End for
In first phase, Top-NFTDS output both fault tolerant 
positive rules and fault tolerant negative rules with 
maximum value of support and confidence. Generally, 
these patterns must be exist invalid patterns or expression 
repeated patterns. Next step Top-NFTDS will prune the 
fault tolerant space. 
C. Disambiguating redundant patterns 
In procedure of redundant pattern disambiguation 
phase, Top-NFTDS draws the fault tolerant rules finally 
which express useful information and is easy to understand 
for users. 
Algorithm 2 is designed for disambiguating redundant 
patterns phase and it is given: 
Algorithm 2: Disambiguating redundant patterns
Input: fault tolerant positive rules and fault tolerant 
negative rules, and K 
Output: k fault tolerant rule 
1 For each rule X do 
2    For (k? K ) do 
3    Calculate_corr(FTRi?FTRk) ; 
4        If X.corr=1 then 
5           Remove_rule(X); 
472
6         End if 
7         If X.corr<1 then 
8            Remove_rule(X); 
9         End if 
10             k=0 and k++; 
11      End for 
12 End for 
In algorithm 2, line 3-9 achieve the goal of identifying 
and removing redundant rules. The final phase of Top-
NFTDS algorithm is described as follows. First, Top-
NFTDS calculates the correlation of all fault tolerant rules 
generated by algorithm 1. Second, according to definition 
7, Top-NFTDS removes false fault tolerant rules when the 
value of correlation less than or equal 1. Finally, Top-
NFTDS draws K fault tolerant rules with higher value both 
of fault tolerant support and fault tolerant confidence. 
IV. EXPERIMENTAL ANALYSIS 
In this section, we will describe the performance of the 
proposed algorithms. Same as preliminary experiment of 
mining top-k fault tolerant frequent itemsets, all the 
programs are implemented using Microsoft Visual C++ 
Version 6.0 and performed on a 3.0 GHz Intel Celeron 
processor with 512 MB memory in a windows XP system. 
In preliminary work, we used the synthetic data set 
T7.I4.D1000K, T10.I6.D1000K and T15.I10.D1000K 
generated by IBM synthetic data generator. T, I and D 
mean the average transaction length, the average length of 
the maximal frequent itemset, and the total number of 
transactions, respectively. In this paper, we still use three 
transaction sets above. 
We draw the conclusion of relationship between fault 
tolerant factor and support or confidence when K is a 
determination value. 
 
Figure 2. Relationship between ? and support. 
 
Figure 3. Relationship between ? and confidence. 
Fig.2 shows the support change of fault tolerant rules 
with the change of fault tolerant factor ? when K is 3000. 
First, it may mean that the greater value of allowed 
mismatches, the higher value of support for fault tolerance 
rules. Second, it may mean that the longer average length 
of transaction, the higher value of support for fault 
tolerance rules. Fig.3 shows the confidence change of 
fault tolerant rules with the change of fault tolerant factor. 
On the contrary, with the increasing of value of mismatch, 
the confidence of fault tolerant rules become lower. It is 
clear that the property of fault-tolerant rule conform to the 
objective fact in real-world data stream. 
V. CONCLUSION 
In order to solve the problem of mining top-k fault-
tolerance frequent rules over data streams, this paper has 
developed a novel algorithm called Top-NFTDS. It is 
integrated with previous research of mining top-k fault-
tolerant itemsets into an integrity new method. Top-
NFTDS can discover the true fault-tolerant rules without 
minimum support threshold and minimum confidence 
threshold specified by user. The Top-NFTDS algorithm 
discovers generalized fault-tolerant rules to express more 
abundant information, and then by negative fault-tolerant 
itemsets to disambiguate redundant patterns, ensure the 
validity of discovered rules. The experiment shows the 
algorithm is effective. The theoretical analysis shows our 
algorithm is nice with high efficiency and scalability. At 
last, by the verification experiment, we prove that Top-
FTDS is rational and available. 
REFERENCES 
[1] A. K. Poernomo  and V. Gopalkrishnan, “Mining statistical 
information of frequent fault-tolerant patterns in transactional 
databases,” Data Mining (DM 07), Oct. 2007, pp. 272-281, Doi: 
10.1109/ICDM.2007.48. 
[2] X. Wu, C. Zhang, and S. Zhang, “Efficient mining of both positive 
and negative association rules,” ACM Transactions on Information 
Systems, Vol. 22, July 2004, pp. 381-405, Doi: 
10.1145/1010614.1010616. 
[3] O. Daly and D. Taniar, “Exception Rules Mining Based On 
Negative Association Rules,” Lecture Notes in Computer Science, 
Vol. 3046,  Apr. 2004, pp 543-552, doi:10.1007/b98054. 
[4] Y. Y. Zhao and H. Jiang, “Research of Mining Positive and 
Negative Weighted Association Rules Based on Chi-Squared 
Analysis,” International Conference on Distributed Computing and 
Applications for Business (ICIC 09), May 2005, pp. 344-347, Doi: 
10.1109/ICIC.2009.94. 
[5] H. Li and X. G. Hu, “Efficient mining of strong negative 
association rules in multi-database,” Computational Intelligence 
and Software Engineering (CISE 09) , Dec. 2009, pp.1-4, Doi: 
10.1109/CISE.2009.5364801. 
[6] M. Charikara, K. Chenb, and M. F. Coltone, “Finding frequent 
items in data streams,” Theoretieal Computer Science, Vol. 312, 
Jan. 2004, pp. 3-15,  Doi:10.1016/S0304-3975(03)00400-6. 
[7] C. C. Aggarwal and P. S. Yu, “A New Approach to Online 
Generation of Association Rules,” IEEE Transactions on 
Knowledge and Data Engineering (ITKDE 01), Aug. 2001, pp. 
527–540, Doi: 10.1109/69.940730. 
[8] G. H. Li and H. Chen, “Mining the frequent patterns in an arbitrary 
sliding window over online data streams,” Journal of Software, 
Vol.19, No.10, Oct. 2008, pp. 2585-2596, Doi: 
10.3724/SP.J.1001.2008.02585. 
 
473
