2009 2nd Conference on Data Mining and Optimization  
27-28 October 2009, Selangor, Malaysia 
 
978-1-4244-4944-6/09/$25.00 ©2009 IEEE   90 
 
Parameter Setting Procedure via Quick Parameter 
Evaluation in Frequent Pattern Mining for Outbreak 
Detection 
 
Zalizah Awang Long#1, Abdul Razak Hamdan*2, Azuraliza Abu Bakar*3 
#Malaysia Institute Information Technology, Universiti Kuala Lumpur 
Jalan Sultan Ismail, Kuala Lumpur. Malaysia 
1
zalizah@miit.unikl.edu.my 
*Universiti Kebangsaan Malaysia 
 Bangi, Selangor, Malaysia 
  2arh@ftsm.ukm.my, 3aab@ftsm.ukm.my 
 
 
Abstract— Data sources for outbreak detection nowadays not 
only focus on emergency department or hospital-based data but 
also grocery data. However, the size of huge data, may consume 
higher time and extreme number of discovered pattern. 
Unfortunately not all the discovered pattern from the frequent 
mining is interesting pattern. Hence frequent pattern mining 
algorithms producing numbers of frequent pattern, still 
parameter uses in minimum support and which frequent itemset 
producing better pattern remains fairly open. It is important to 
gains some limitation of minimum support to be applied to the 
frequent mining algorithm so that we not end up at compiling 
higher patterns including a normal pattern. We propose a 
procedure based on quick parameter setting to estimate 
minimum support and also frequent itemset. Our empirical 
validation shown the procedure will extract ranging minimum 
support and frequent itemset to be considered to generate 
interesting pattern. 
 
Keywords— frequent pattern mining, minimum support, frequent 
itemset. 
I. INTRODUCTION 
Frequent patterns discovered via data mining processes are 
interesting and useful for other data analysis and data mining 
tasks such as association, classification, and clustering just to 
names few. Data mining involves the semiautomatic 
discovery of interesting knowledge, such as patterns, 
associations, changes, anomalies and significance structures 
from various kinds of database into information repositories. 
Analysing a collection of sequenced data over a period of 
time aims to identify certain patterns or trends in the data. In 
identifying interesting patterns, a common measurement uses 
in frequent pattern are support and confidence levels. The 
interesting patterns often occur at varied level of support. 
To determine minimum support to be applied by user in 
generating interesting frequent patterns is critical part in 
frequent pattern mining. This initially motivated more 
research in this field. For instance, in collection of hospital-
based information systems data containing various set of 
data-sequence may correspond to the symptoms or diseases 
of a patient, with a transaction corresponding to the 
symptoms exhibited or medication prescription during a visit 
to the doctor. The patterns discovered using this data could be 
used in disease outbreak detection or unusual event or even 
detecting new diseases attacks.  
Pattern’s strength is based on how often it occurs in the 
given data. If it occurs frequent enough, then the pattern is 
said to be interesting [1]. In determine the pattern produce are 
to be interesting, the measurement of which minimum 
support to be uses very much depending on the data. The 
existing algorithms in generating the frequent data sequence 
required supply of for minimum support. Traditionally values 
for minimum support greater than user supplied then the rules 
consider as interesting. This hypothesis applied in the rules 
interestingness measures for association rules. The issues in 
frequent mining are how the sequence itemset occurrence is 
counted and how many is enough? 
II. BACKGROUND 
As one of the application applying mining frequent pattern is 
to detect pattern in a set of sequence transaction. Data such as 
in the emergency department data, patient record, in the 
network logs or other transaction-based data are sequence-
like data. Basic methodology of frequent pattern mining is 
based on apriori concepts. Generalized Sequence Pattern 
Mining (GSP) is the extension of apriori algorithm that 
applies concepts hierarchies and temporal constraints. This 
method guarantees finding all rules that have a user specified 
minimum support. GSP algorithm applied the horizontal data 
format [2, 3] and later come Sequential Pattern Discovery 
using equivalent classes (SPADE) uses vertical data format [4] 
which can consider as the faster method in apriori-based 
sequence mining. The improvement to apriori like algorithm 
that still exhibit the characteristic of apriori ; “any super-
  
978-1-4244-4944-6/09/$25.00 ©2009 IEEE   91 
 
 
pattern of non-frequent pattern definitely not frequent “[3]. 
Currently many approaches in frequent mining have been 
developed and efficient algorithms have been implemented. 
The apriori approach exploits level-wise search to generate 
all possible candidate frequent itemsets and then prune them 
[3, 5, 6]. The methods are based on observation if an itemset 
is frequent then all of its subsets are frequent. The ideas is to 
evaluate l- itemsets first, then find frequent singleton itemsets, 
and evaluate their supersets 2-itemsets, and the process will 
go on until no more frequent itemset is found. With the user-
specified support (min_supp) the process finding frequent 
pattern can be view as following: Discovering all frequent 
itemsets:  A subset X of I is called a frequent itemset if its 
support at least min_supp supplied. The Apriori algorithm to 
mine association rules was introduced in [6]. Given a dataset 
that contains sets of items (called instances), a minimal 
support threshold, and a minimal confidence threshold, 
Apriori mines all the association rules from the dataset that 
have support and confidence above the thresholds.  
We now summarize itemset methodology formally as 
follows [6]. Let I = {I1, I2,..., Im} be a set of literals, called 
items. Let D = {T1, T2, ..., Tn} be a set of n transactions, 
where for each transaction T ? D, T ?  I. A set of items X ?  
I is called an itemset. A transaction T contains an itemset X if 
X ? T. Each itemset X is associated with a set of 
transactions TX = {T ? D | T ? X} which is the set of 
transactions which contain the itemset X. The support supp(X) 
of itemset X equals |TX|/|D|.  
Based on the above definition, the main concern is the 
support(X) of itemset being determined to achieve 
interpretable, usable and interesting patterns generated.  
Identified few recently studies towards finding the ways to 
determine minimum support. 
 According to [12] the techniques for addressing the 
minimum support issues are underdeveloped. There are 
several identified approach such as general sampling [7], 
Randomized counting [8], features selection [9], profile-
based approach [10] for quick parameter. Han et.al used 
strategy to mine top-k frequent pattern [13] and Wang et al 
designed a confidence-driven approach without minimum 
support [14]. However based on [12], most of the approaches 
are only attempt to avoid specifying the minimum support. 
Checking the minimum support or threshold values to 
satisfy an output size constraint implies to the count of 
frequent itemsets. The problems in counting itemset are 
considered as NP hard problem. The constraint is to evaluate 
the maximum support and minimum support for the frequent 
itemsets.  
The main shortage in randomized counting is dealing with 
the calculation; the main problem is repeated counting 
procedure. Implementing Markov Chain algorithm in 
randomized counting not depend on the number of frequent 
set but the size of the dataset. The desired accuracy is based 
on sample sizes. While in [7] the sampling is not taken from 
data but from the pattern space sampling. Highlighted in the 
study [8], the MC are not good bound for general cases.  The 
finding indicated for cases in which the cost of frequency 
counting is dominated by the number of frequent itemsets 
straightforward randomized counting produces reasonable 
approximations in a fraction of the time needed for 
exhaustive enumeration. Space state sampling is focus on the 
post-processing of the data mining process. Expert or domain 
expert are needed incorporated during the differential 
extraction to set the constraint. 
Analysing the relationship between pattern frequency and 
its predictive power require some quality features. Hypothesis 
if min_supp greater values, value in frequency are higher, this 
known as overwhelming. While the min_supp lower down 
medium frequency are discovered. However, if further 
lowering the state of over fitting will occurs.  It is the other 
approach in feature selection, to overcome method of 
enumerating all feature combination. Feature filtering 
measures are used to determine the minimum support [9]. 
Yan 2005 [10] summarized a collection of itemsets pattern 
using k representatives. It solved the interpretability of the 
number of frequent pattern by monitoring change of the 
support restoration error. Found that the smaller k is always 
preferred but may not provided valuable information.  
Recently, partial support [11] and polynomial 
approximation and fuzzy estimation [12] are other a 
techniques uses to compute interesting itemset in frequent 
pattern mining. Nevertheless, the techniques are yet to come 
out with general strategy for setting the minimum support. In 
the cases of outbreak detection which minimum support to 
generate frequent items are important due to huge amount of 
data and multiple sources. The issues of a given set of 
frequent itemset, with specified support how should we select 
the high quality for effective detection outbreak is also 
questionable. The propose procedure are based on sampling 
techniques. The procedure to determine for setting minimum 
support and possible frequent itemset are compute based on 
mean. 
III. PROPOSED DESIGN PROCEDURE 
The procedure in selecting the possible minimum support 
and also numbers of frequent itemset to be uses in the 
outbreak detection are proposed in three main stages. Stage 
one as the pre-processing stage, follow by frequent itemset 
algorithm and stage 3 as data re-transformation. The figure 1 
show the steps involved in the experiment settings. 
 
Fig 1: Procedure in determine minimum support and itemset count 
  
978-1-4244-4944-6/09/$25.00 ©2009 IEEE   92 
 
 
Pre-processing stage, involved 2 main modules: selection 
module and transformation module. At the selection module, 
focused are on determining the potential attribute to be 
included in the process. The attribute that are selected based 
on the most frequent occurrences attribute. In this study, we 
used the WSARE dataset where the attribute needs to be 
removed and reduced to meet the number of cases reported in 
the synthetic outbreak release day. In the data transformation 
module, data need to be prepared for apriori algorithm. 
At the second stage, apriori algorithm is applied to 
generate the frequent itemset. There are two tasks in the 
second stage needed to complete in this experiment. The first 
task is to determine the minimum support and the second task 
is to identify length of the sequence k-length. Series of 
experiment were carried out by adjusting the minimum 
support values. The values of minimum support are adjusted 
in incremental of 10.  A set of frequent itemset with k-length 
(later refer as itemset) are obtained and recorded. The process 
was repeated by adjusting the minimum support. Table I 
showed the recorded the mean for each minimum support 
applied and table II recorded mean counts for k-length 
frequent.  The re-transformation stage, were the output of the 
frequent mining algorithm will be used as an important 
threshold in the outbreak detection tasks. 
 
IV.EXPERIMENT 
 
The experiment involved 3 dataset, namely as ZOO and 
TIC TAC TOE gained from UCI data repositories. The third 
dataset are taken from AutoLab for WSARE implementation 
of outbreak detection. 
A. Dataset Preparation 
The WSARE dataset used in identified the possible 
minimum support to be considered in detecting outbreak 
using frequent itemset methodology.  The WSARE dataset 
consist of synthetic data for the outbreak detection. There are 
100 datasets that represents a health care record where the 
person in the simulation city perform the main action (visit 
the emergency department, purchase medication or absent 
from school or work). Each dataset consists of one day 
deliberately anthrax release. The dataset chosen in this 
experiment are from dataset 0 to dataset no 2 (PT0, PT1 and 
PT2). Dataset PT0, the anthrax release on weekend. While 
dataset PT1 and PT2 the anthrax release are on weekdays. 
The records were considered 5 days before the anthrax 
release and 5 days after the anthrax release. The days before 
anthrax released are captured the normal behaviour patterns, 
while 5 days after viewed the pattern caused by anthrax 
release in simulation city datasets. In this experiment we 
included 9 attributes used in the dataset. The dataset  PT0, 
PT1 and PT2 consists information on region, age, gender, flu 
level, day of the week, action, reported symptom, drug and 
day num. 
Data from UCI, Tic Tac Toe was consider because of the 
predictive class is only 2.The possible combination is always 
not more than 2 combination with 9 attributes. While, zoo 
have 17 attributes to be consider in generating frequent 
itemsets.  
B. Result 
The Fig 2 had shown the minimum support applied 
ranging from 10% toward 100% for each day in each dataset. 
The result identified for PT0, PT1 and PT2 that the 10% to 
20% support was not given good indication of increasing in 
frequent itemsets. When reaching 70% to 100% the frequent 
itemset count becoming stable. The fluctuation only can be 
visualized through 30% to 40%. In Tic Tac Toe the intersect 
was indicated at the 20% minimum support. Due to the nature 
of data prepared for tic tac toe, the graph show that higher 
count to be consider are only for the 10% to 20%. Minimum 
support for zoo dataset reached 40% to 50% shown in the fig 
2.  Higher count for 10% due to 17 attributes to be considered 
in generating frequent itemsets. The X is uses to show the 
intersection of each dataset uses. 
 
 
Fig 2: Minimum support 
Based on the figure 2 results, the percentage of minimum 
support to be considers in the next experiment. Based on PT0, 
PT1 and PT2, the result had shown the higher the percentage, 
the lower count of the itemset and the graph indicate that it is 
becoming stable toward 80% and above. The results shown 
by lowering the minimum support, more interesting pattern 
can be analysed further compared to higher minimum support, 
where the pattern may be normal pattern. 
Based on the result, the possible values of minimum 
support are ranging from 30% to 50% to minimize the 
uninteresting frequent pattern and limit the normal pattern 
produced by the algorithm. 
Table I below, shown the mean for the total itemsets 
generated for each running minimum support and for each 
datasets.  
TABLE I: Minimum support for frequent itemset 
% PT0 PT1 PT2 ZOO TICTACTOE 
10 30.3 32.3 31.5 186.4 22.5 
20 28.0 31.6 30.4 83.3 9.0 
30 24.9 38.7 27.6 44.8 9.0 
40 21.4 24.7 24.1 16.8 5.0 
X 
  
978-1-4244-4944-6/09/$25.00 ©2009 IEEE   93 
 
 
50 16.3 18.4 16.3 8.4 - 
60 12.2 13.1 13.0 6.3 - 
70 9.1 11.1 9.8 4.7 - 
80 7.2 7.7 8.7 1.5 - 
90 6.8 7.7 6.9 1.0 - 
100 6.5 7.7 6.9 1.0 - 
 
Table II shown the mean frequency for the each frequent 
itemset length. 
TABLE II: K-length frequent itemset 
 PT0 PT1 PT2 ZOO TICTACTOE 
1-itemset 6.5 6.9 6.8 7.4 3.2 
2-itemset 18.5 20.9 20.3 32.8 36.0 
3-itemset 29.5 35.5 34.0 93.0 - 
4-itemset 28.4 37.3 35.2 135.7 - 
5-itemset 18.2 24.6 12.9 143.6 - 
6-itemset 9.7 12.4 12.0 72.7 - 
7-itemset 3.3 4.5 4.2 20.3 - 
8-itemset 1.7 1.6 1.8 3.7 - 
 
As a second task in frequent itemset algorithm stage, the 
itemset counts for each length were generated. 
 
Fig 3: Frequent Itemset 
Based on the mean running for collected output produce 
by apriori, we can view that for the zoo dataset the higher 
value are gain at the itemset 5. Tic tac toe is at 2 itemset and 
for the PT0, PT1 and PT2 the frequent itemset are likely 
ranging on 3 to 4 itemset. Tic Tac Toe itemset was expected 
to be only 2 itemset due to the possibilities are only 2 values. 
While in zoo datasets the graph shown exponentially increase 
from one itemset toward 5 itemsets and slowly decrease for 6 
and more itemset combinations. Unlikely for the PT0, PT1 
and PT2, the graph shown unchanged count for 3 and 4 
itemsets.  The count decreases for itemset 5 to 6 and stable 
toward 9 itemsets. 
IV. SUMMARY AND FUTURE WORK 
 
We have presented an appropriate minimum support 40% 
to 50% to generate frequent itemsets. The experiment also 
successfully identified numbers of itemset to be used for 
maximum detection rate based on higher frequency count.  
We intent to generate hypothesis and identify the potential 
interesting pattern from the sequence itemsets count to 
identify any outbreak has occurred. The experiment indicated 
that the false positive rate of the outbreak detection can be 
reduced by having appropriate numbers of minimum support 
and the length of the itemset.  Further work is required to 
investigate the detection curve. 
 
REFERENCES 
[1] J. Ahola, “Mining sequential patterns,” VTT research report TTE1-
2001, vol. 10, 2001. 
[2] C.C. Aggarwal, “On Abnormality Detection in Spuriously Populated 
Data Streams,” Proc. 5th SIAM Data Mining, Society for Industrial 
Mathematics, 2005, pp. 80-91. 
[3] R. Agrawal and R. Srikant, “Mining sequential patterns,” Proceedings 
of the Eleventh International Conference on Data Engineering, 1995, 
pp. 3-14. 
[4] M.J. Zaki, “SPADE: An Efficient Algorithm for Mining Frequent 
Sequences,” Machine Learning, vol. 42, no. 1, 2001, pp. 31-60. 
[5] R. Agrawal and R. Srikant, “Fast algorithms for mining association 
rules,” 1994, Proc. 20th Int. Conf. Very Large Data Bases, VLDB pp. 
487-499. 
[6]  R. Srikant and R. Agrawal, “Mining sequential patterns: 
Generalizations and performance improvements,” Springer Verlag, 
1996, pp. 3 
[7] J. Besson, et al., “Parameter Tuning for Differential Mining of String 
Patterns,” IEEE Computer Society Washington, DC, USA, 2008, pp. 
77-86. 
[8] M. Boley, et al., “A Randomized Approach for Approximating the 
Number of Frequent Sets,” IEEE Computer Society Washington, DC, 
USA, 2008, pp. 43-52. 
[9] Cheng, et al., “Discriminative frequent pattern analysis for effective 
classification,” EEE 23rd International Conference on Data 
Engineering, 2007. ICDE 2007, 2007, pp. 716-725. 
[10] X. Yan, et al., “Summarizing itemset patterns: a profile-based 
approach,” In Proceeding of the eleventh ACM SIGKDD international 
conference on Knowledge discovery in data mining 2005, pp. 314-323. 
[11] A.K. Poernomo and V. Gopalkrishnan, “Efficient computation of 
partial-support for mining interesting itemsets,” SDM, 2009.. 
[12] S. Zhang, et al., “Computing the minimum-support for mining 
frequent patterns,” Knowledge and Information Systems, vol. 15, no. 
2, 2008, pp. 233-257. 
[13] J. Han, et al., “Mining top-k frequent closed patterns without 
minimum support,” 2002, Proceedings of the 2002 IEEE International 
Conference on Data Mining (ICDM'02). pp. 211. 
[14] Wang J, Han J (2004) BIDE: efficient mining of frequent closed 
sequences. In: Proceedings of the 20th international conference on data 
engineering, Boston, pp 79–90. 
 
 
