The Design of Database Anomalous Detection Model Based on User Behavior 
Profile Mining 
Yaohui Wang 
School ofInfonnation 
Engineering 
Northeast Dianli University 
Jilin, China 
wyh@mail.nedu.edu.cn 
Hongjian Chu 
School of Infonnation 
Engineering 
Northeast Dianli University 
Jilin, China 
chuhongjian@163.com 
ZhaoyangQu 
School of Infonnation 
Engineering 
Northeast Dianli University 
Jilin, China 
qzywww@mai1.nedu.edu.cn 
Abstract-A model of database anomalous detection is 
designed in this paper. The model can not only describe the 
users' behavioral profIle more accurately, but also improve the 
accuracy of database anomalous detection. Based on the 
designed model, Apriori-kl algorithm, which combines the K­
means clustering algorithm with the improved Apriori 
algorithm, is presented to mine users' behavior profIle 
preferably so as to detect database anomaly more effectively 
and efficiently. Experimental results demonstrate that 
compared with the Apriori mining algorithm, Apriori-k1 is 
superior in terms of time-consuming and detection accuracy. 
Keywords-database anomalous detection; users' behavior 
profile; association rule 
I. INTRODUCTION 
As the development of intrusion detection technology 
and data mining technology, the database auditing log which 
is seen as a passive concept of security has changed [1].lt is 
an important means to ensure the database security that 
database exception is actively detected by the user behavior 
profile of the database mining [2].The user behavior profile 
is the regular access certain resource including the database, 
data tables and so on. This long-term regular operation of a 
resource is characteristics of the user behavior patterns. 
At present, there are mainly three aspects deficiency 
existed in the users' behavior profile mining. First, due to the 
various types of audit logs in the database management 
system ,it is rather difficult to select what audit records can 
be effectively used to mine the users' behavior profile. 
Second, as the existing algorithms can not correctly describe 
the users' behavior profile, resulting in higher false positive 
rate of database anomalous detection. Third, although some 
existing algorithms can achieve mining the users' behavior 
profile, when referring to the massive user database access 
logs they significantly lack of efficiency [3]. 
This paper mainly does the following two key researches 
to solve the above questions: Firstly, A database model is 
designed for anomaly detection. Secondly, Apriori-kl 
algorithm based on this model is proposed, which is a more 
efficient detection of abnormal database algorithm. 
II. DATABASE ANOMALOUS DETECTION MODEL 
The paper designs a database anomalous detection model, 
978-1-4244-5540-9/10/$26.00 ©2010 IEEE 
472 
as shown in Fig. 1. 
A:Database anomaly detection 
management system 
Display layer 
B:Data miningllser behavior 
characteristics 
Figure I. database anomalous detection model 
The model mainly includes the following five modules: 
data acquisition layer module, data preprocessing module, 
data merge module, user behavior mining module, anomaly 
detection module. 
A. Data Acquisition Layer Module 
Main function: making mainly use of log miner and other 
database log collection tools or database system's own log 
analysis tools, such as MSSQL's Profiler to complete the 
collection of the current test data and the audit of the training 
data. 
17 -- network prot ,,"'II1'-09[C11''II'II'-( 51 
14 -- nottwork prot WW'Ii-WEel 54 2010-4-2 <NUL: <NUll 1 
SELECT '" FROM [ WW'Ii-09Eel 54 2010-4-2 I 
ul."t '" fro.. r PC-201001 54 2010-4-2 1 DATAS! richtorwronc tut T_ 
d.clu-. (il'l int FC-ZOlOOI 54 2010-4-2 I DATASI!: richtorwronc lest T_ 
SELECT * PROM [: FC-20IOOI " 2010-4-2 I DATASE ri?torwron? tnt 
, INSERT (r; chtor' FC-20IOOI 54 2010-4-28 DATASE r;?torwron? tnt T? 
, '1< SEUCT * FROM (: FC-201001 " 2010-4-2 1 DATASE richtorwron? tnt T_ 
'0 INSERT (richtor' FC-20IOOI " 2010-4-28 DATASE r;chtorwron? tnt T_ 
SEUCT * FROM (: FC-20IOOI " 2010-4-2 I DATASE r;?torwron? tnt 
'2 INSERT (richtor' FC-20IOOI 54 DATASE r;?torwron? tnt 
'3 ul"ct * fro ... r FC-20IOOI " 2010-4-2 1 DATASE r;chtorwron? tnt To. 
dedar" I1FI tnt FC-20IOOI " 2010-4-2 I DATASE ri?torwron? tnt 
DEUTE (richtor' FC-20IOOI 54 2010-4-2 I DATASE ri?torwron? tnt 
,S '1< DEUTE (richtor' FC-201001 54 2010-4-2 16 , DATASE richtorwron? tnt To. 
17 ul "ct * fro ... r FC-20IOOI " 2010-4-2 I DATASE richtorwron? tnt T_ 
dedar" I1FI int W'/I'/I-agECl " 2010-4-2 I DATASE ri?torwron? tnt 
" ul"ct II' fr ..... f WW'/I-WECI 54 DATASE fillin? reck 
ZO d"dar" I1FI int '/IW'/I-09ECI 54 2010-4-2 I DATASE filline: reck 
2' DEUTE (fillin? WW'/I-09ECl " 2010-4-2 I DATASE filline: reck 
zz DEUTE (f;ll;n? WW'/I-09ECI 54 2010-4-2 16 , DATASE filline: reck 
23 '1< ul"ct * fr ..... f '/IW'/I-Q9ECI 54 2010-4-2 I DATASE filline: reck 
Z4 114 d"dar" I1fl int WW'I\'-09ECI " 2010-4-2 I DATASE filline: reck 
Figure 2. the form of collected audit log data detection 
The paper use the MSSQL event Pro filer to complete the 
work .of data collection, and the corresponding logs 
collectIOn template could be set to filter those dispensable 
database audit data before the data are gathered. As shown in 
Fig. 2. 
B. Data Preprocessing Module 
Main function: After the data collection (audit training 
information, the current inspection of data), to remove the 
original noise data, such as, incomplete audit data no 
specific operational users, no operating object data and ?ther 
important information, as well as stemming some data is not 
associated with the required data from related 
communication link protocol when database server is 
connected by client. 
C. Data Merge Module 
Main function: Firstly, to statistic the number of 
operational database objects, such as data table, data view 
and so forth operated by this user. Secondly, to deal with the 
operation object and user by means of the numerical 
identification, and then stored in the established session 
record table. Furthermore, each connected operation record 
is regarded as a transaction T, all of transaction T constitutes 
the database D, which is be used for mining user behavior 
characteristics. Each transaction belonged to the database D 
is composed of the field of session connection ID, the field 
of Database operation user, the field of operation object, the 
field of operation path, and so on a total of eleven fields. 
The form of the table of session connection is the below 
Fig. 3. 
D. User Behavior Mining Module 
Main Function: First, the operation on the database 
operated by the user and the user's database objects need to 
be clustered by using the k-means algorithm in the data 
mining ?ec?ology, thus completing the Preliminary 
CharactenzatIOn of user behavior. Also make the first 
preparing for further mining of user behavior characteristics. 
Second, to improve the efficiency of mining characteristic 
rules about user behavior through using the improved 
algorithm Apriori-kl, and then will tap into the knowledge of 
rules out the rules database. 
As shown in Table I, the association rules results is listed 
T .. 40 10 
T .. lI_s@lect PC-201001151001 8 30 50 10 
T .. t.d.in PC-201001151001 14 
T .. student PC-20tOO1l51001 0 
T .. test PC-201001151001 15 
T .. PC-2OIOOIl61001 10 4 48 
T .. selecting PC-20tOO1l51001 15 20 8 
T .. Feedback PC-201001l51001 5 20 12 
10 Jack ri ghtorwrong PC-201001151001 14 30 2S 30 
11 Jack filling m-OOECB2CDB98 18 50 36 49 
12 Jack "_select m-09ECB2CDB98 13 40 20 20 
13 Jack adrain m-09ECB2CDB98 17 
14 Jack student m-(l9ECB2CDB98 0 
15 Jack hst m-()9ECB2CDB98 12 
16 Jack m-09ECB2CDB98 5 3 42 
17 Jack selecting m-Q9ECB2CDB98 46 22 
1 18 Jack Feedback m-OSECB2CDB98 11 41 47 
Figure 3 The fonn of the table of session connection 
473 
TABLE I. TABLE OF ASSOCIATION RULES 
ID Rules Support confidence 
Jack,fillng,www-
1 0gecb2cdb98-7insert _1 27.35% 94.65% 
0-20 
Tom,M_select,pc-
2 201001161O-7insert 2 24.27% 89.98% 
0-30 
... . .. ........ . .... . .... 
by mmmg the Session connection records in the table 
transaction. 
For example, the meaning of the first rule: In all session 
connection record of the transaction database, there is 27.35 
percent conversation is that the database user Jack access to 
the table of "filling" in the database server through client 
whose path named "www-0gecb2cdb98". Under the 
circumstance that the database user is Jack and the operation 
path is "www-0gecb2cdb98", there may be 94.65 percent 
session connection meaning that 10-20 data records will be 
inserted to the table of "filling". 
I? . additi?n, the timing conditions set in the timing 
condItIOns hbrary can trigger the user behavior digger 
periodically in the model, and complete the effect of 
automatic detection on line to some extent. At the same time 
the database administrator can also manually trigger the user 
behavior digger. 
E. Anomaly Detection Module 
Main function: to compare the training phase of the rules 
produced by normal users (read from old-rules table) with 
the test phase of mining association rules (to read from new­
rules), if the database exception occurred then the unusual 
details should be timely recorded and displayed. 
Anomaly detection algorithm as follows: 
Input: The current audit data to be detected 
Output: The information of detecting anomalies 
Method: 
(1) acquire the begin time of detection: starttime 
(2) While (each rule in old-rules){ 
(3) While (each rule in new-rules){ 
(4) If«the antecedent of rules in old-rules 
= the antecedent of rules in new-rules) 
&& ( the consequent of rules in old-rules 
= the consequent of rules in new-rules) 
&& ( the difference of support and confidence 
between the two rules greater than 35%)) 
(5) {make intrusion information record 
in the Intrusion table} } 
(7) the end time of detection: endtime 
(8) record the time spent testing(starttime-endtime) 
(9) If (interrupt) { 
(10) break}} 
III. THE RESEARCH OF THE MODEL OF KEY 
TECHNOLOGIES 
Enter audit data and the 
value of cluster K 
Figure 4. clustering process 
A. Preliminary Characterization of User Behavior 
Features Based on K-means 
This paper mainly make use of k-means clustering 
algorithm to deal with the users of database and operating 
object data, so as to characterize the initial behavior profile 
of users. 
The criterion function E of k-means algorithm defined as 
formula (1) as follows [4-5]: 
(1) 
;=1 pECi 
The clustering process of database users and database 
objects is shown in Fig. 4. 
B. Apriori-kl association rule mining algorithm 
Apriori algorithm is proposed for the Boolean association 
rules mining frequent item sets of original algorithm, in 1994 
by R. Agrawal and R. Sriant.Although using Apriori 
algorithm own nature can increase efficiency to some extent, 
but there are still many problems led to low efficiency of the 
algorithm [6]. 
In order to mine the log data of the database more 
efficient this paper gives the corresponding improved 
algorithm Apriori-kl algorithm. 
1) Related theorems and conclusions 
Theorem 1: Suppose frequent k itemset can generate k + 1 
itemset, then the number of itemset of the frequent k itemset 
certainly greater than or equal ? k [7]. 
Theorem 2: VeE Ck ,  R (c) could be generated by the 
two elements ofR (x), R (y) (x =1= y) in Rk-I, and R (c) = R 
(c) n R (c) [8]. 
Conclusion 1: For each candidate item CE Ck , If 
obtained by Lk -looLk -I ,the self-connection, and 3t E c 
satisfy t E Lk -I , then it can also be obtained by Lk -looLI . 
The conclusion could be proofed by contradiction. 
474 
Proof: Suppose 3c E Ck ,  satisfy c E Lk -looLk -I, as well 
as c e Lk -looLI .on account of 3t E c, satisfy t E Lk -I ,and 
also c e Lk -looLI ,so conclud that c - teLl, named C. It is 
clear that C is in contradiction with the assumed condition 
that the length of c - t is 1 as well as c E Ck is also obtained 
through the frequent itemsets. Therefore, for VeE Ck ,exists 
CE Lk-looLI. 
2) The basic idea of Algorithm 
Data storage format that a transaction identifier 
corresponds to multiple forms is known as the standard data 
format in the transaction database. Whereby, data storage 
format that a transaction identifier corresponds to multi­
transaction identifier related to the item is known as the 
vertical data format. 
The data with standard data format is converted to 
vertical format by scanning the database once. Meanwhile 
each item in the itemset and transaction identifier 
corresponding to the items are stored separately using two 
dynamic lists storage. The support count of Ck can be 
obtained by Lk -I n LI without repeating scan of the 
database to obtain the support count of Ck . 
Connection conditions of Apriori algorithm are 
optimized using the conclusions that are proved in this paper. 
Frequent itemset k are got by connection conditions 
of Lk -looLI , and the last item of Lk -I according to index is 
compared to each item of LI when Lk -looLI , avoiding 
duplication of comparison of connection conditions 
of Lk -looLI ,and without considering whether (k-l) subset of 
candidate itemset Ck is in Lk -I . 
The times of frequent itemset k are optimized by 
Theorem 1, and the support counts of candidate itemset k 
are solved by Theorem 2. 
3) The Apriori-kl algorithm described as follows: 
Input: D: Transaction database 
min _ support : minimum supportcount 
Output: L: Frequent item sets in D 
Method: 
(l)CI = {The set of all items} 
( 2  )for each Candidate item sets C E C I{R (c) = 0;} 
(3 )for each transaction tED { 
(4)Ct = SubSet(t,CI); 
/ / the table of generated each item ID in item set 
(5)for each C E Ct{R(c) = R(c) u t_TID;}} 
(6)Count_Support( C I); 
(7)LI={CE Cllc_delete=O};RI={R(c)lcE LI}; 
(8)Up_Sort(LI); 
(9)for(k= 2;ILk -11>k-1 ;k++) {  
( l O)Up_Sort(Lk -1);Ck = apriori_gen(Lk -I);} 
(11 )L= U kLk; 
(1 2)function Count_Support(C:candidate _ k - itemset) { 
for each Candidate item sets c E C; { 
if(c_support=R (c )<m in_support) { 
c_delete= l ;} }} 
(13 )function apriori_gen(Lk -I: Frequent (k - 1) item sets) 
{ for each h -1 E Lk -I{ 
if( c _support= IR (c )I<m in_support) { 
c_delete=I;} 
} 
IV. EXPERIMENTAL RESULTS AND ANALYSIS 
Experimental environment: 
Server computer: 
Cpu is P4 2.4Ghz, RAM is DDR 512MB; 
Database management system uses MSSQL 2000; 
The audit log data are acquired by MSSQL 2000 Data 
Pro filer. 
Client computer: Cpu P4 2.4Ghz, RAM is DDR 512MB. 
A. Experimental 1 : Time Performance Testing 
The time performance comparison of the mining of user 
behavior association rules between the user behavior digger 
presented in the mode and a simple mining based on Apriori 
mining algorithm. In the experiment, using 1000, 2000, 3000, 
4000, 5000 database transaction records to test the mining 
time of the two algorithms in the case of the same support 
after data clustering process. The result is shown in the 
below Fig. 5. 
The analytic results from Figure 3 show that in the case 
of the same support and different services, Apriori-kl 
algorithm spent less time than Apriori algorithm with the 
increasing number of services. 
B. Experimental 2: The Accuracy of Anomaly Detection 
of the Model 
The comparison of detection accuracy between user 
behavior digger combined with anomaly detector presented 
in the mode and traditional model of database anomaly 
detection based on Apriori algorithm. In the experiment, 
using 200, 300, 400, 500, 600 and 700 database events to test 
the detection accuracy respectively. The result is shown in 
Fig. 6. 
20000 
18000 
IS000 
14000 
? 
12000 .. .. 
? 10000 .. 
E 8000 ;:: 
SOOO 
<1000 
2000 
0 
90 
? 85 
&S 
1 .-- Apri ori _kll 
___ Apriori I .-JI 
/' 
./ 
? --
--- -- ? 
----------
+--
2 3 <I 
D t.b ... tr""ncti." ( n'Jlllbor ) 
Figure 5.experimental result I 
,.? 
/ 
? . ---
... 
5 
-----. 
....- ? 
200 
I --APri.ri . 1 -- Apriori- kl 
300 500 
D \. .. b.?    vtnt? ( c;ovwnt> 
Figure 6.experimental result 2 
&00 700 
475 
The experimental results show that mining characteristics 
of user behavior after the audit log clustering could excavate 
user behavior rules more efficiently, and so the accuracy of 
database anomaly detection is also improved more 
effectively. 
V. CONCLUSION 
This paper presents a model of database anomalous 
detection in order to effectively improve the accuracy of 
database anomalous detection. According to this model, an 
effective Apriori-kl algorithm is proposed. Compared with 
Apriori algorithm, Apriori-kl could avoid arising some 
uninteresting rules to some extent and depict database users' 
behavior profile more comprehensively. The model has 
already been used in the practical project and has a good 
effect in application. Finally, sequence pattern mining 
applied in users' accessing the database log will be an 
essential research content in the future. 
ACKNOWLEDGMENT 
Fund Project: Grants of Jilin Provincial Technology 
Development project (No.20080322); "The Eleventh Five­
Year Plan" Science and Technology Education research 
project of Jilin Provincial Department of Education 
(2008(41)). 
REFERENCES 
[I] Zhong Yong, Xiao-Lin Qin. A Survey on the Database Intrusion 
Deteetion[J]. computer science. 2004,31 (I 0): 15-18. 
[2] Lee W,Stolfo S J,Mok K W.Ming audit data to build intrusion 
detection models[EB/OL ].http://www.cs.columbia.edul-wenke!200 1-
06-12. 
[3] Agrwal R.Srikant R.Fast algorithm for mining association rules in 
large databases[C). Proceedings of the 20th International Conference 
on Very Large Data Bases,September 1999. 
[4] Li Na-na,Zhao zheng.Anomaly detection method by clustering 
monnal data[J]. computer appliocations. 2008, 28(6):1438-1440. 
[5] Li Yang. Application of K-means Clustering Algorithm in Intrusion 
Detection[J]. Computer Engineering. 2007,33(14): 154-156 
[6] Han Jiawei,Micheline Kamber. Data Mining Concepts and 
Techniques[M]. Fan Ming, Meng Xiao-feng Translation. Beijing: 
Mechanical Industry Press,2003,3. 
[7] Ashish Kamra,Elisa Bertino. Mechanisms for Database Intrusion 
Detection and Response [C).Proceedings of the Second SIGMOD 
PhD Workshop on InnovativeDatabase Research (!DAR 2008), June 
13,2008, Vancouver, Canada. 
[8] Sattar Hashemi, Ying Yang, Davoud Zabihzadehand Mohammadreza 
Kangavari. Detecting intrusion transactions in databases using data 
item dependencies and anomaly analysis[J].The Journal of 
Knowledge Engineering. Expert Systems, November 2008,25(5). 
