Association Action Rules and Action Paths Triggered by Meta-Actions
Angelina A. Tzacheva
Univ. of South Carolina Upstate
Dept. of Informatics
Spartanburg, SC 29303, USA
Email: ATzacheva@uscupstate.edu
Zbigniew W. Ras
Univ. of North Carolina, Dept. of Computer Science
Charlotte, NC, 28223, USA
Polish-Japanese Institute of Information Technology
02-008 Warsaw, Poland
Email: ras@uncc.edu
Abstract—Action rules are built from atomic expressions
called atomic action terms and they describe possible transi-
tions of objects from one state to another. They involve changes
of values within one decision attribute. Association action rule
is similar to an action rule but it may refer to changes of values
involving several attributes listed in its decision part. Action
paths are defined as sequences of association action rules with
the assumption that the last rule in a sequence is as action rule.
Early research on action rule discovery usually required the
extraction of classification rules before constructing any action
rule. Newest algorithms discover action rules and association
action rules directly from an information system. This paper
presents a strategy for generating association action rules and
action paths by incorporating the use of meta-actions and
influence matrices. Action paths show the cascading effect of
meta-actions leading to a desired goal.
Keywords-knowledge exploration; action rules; decision sup-
port system;
I. INTRODUCTION
An association action rule is a rule extracted from an
information system that describes a cascading effect of
changes of attribute values listed on the left-hand side of
a rule [10] on changes of attribute values listed on its
right-hand side. Similarly to [10], [11], we assume that
attributes used to describe objects are partitioned into stable
and flexible. Values of flexible attributes can be changed
whereas values of stable attributes have to remain the same.
Action rules mining initially required to compare profiles
of two groups of targeted objects - those that are desirable
and those that are undesirable [11]. An action rule was
defined as a term [(?) ? (? ? ?)] ? (? ? ?), where ?
is a conjunction of fixed condition features shared by both
groups, (? ? ?) represents proposed changes in values
of flexible features, and (? ? ?) is a desired effect of
the action. To be more precise, it states that ”when the
circumstances are ?, changing alpha to beta will cause phi
to change to psi”.
In most cases it is not possible to change the values of
flexible attributes without having them triggered by some
higher-level actions. For instance, we can not lower the
temperature of a patient if he does not take a drug used for
that purpose. Taking aspirin is an example of a higher-level
action which is expected to trigger such a change. In this
paper, such higher-level actions are called meta-actions. The
associations between meta-actions and changes of attribute
values they trigger can be modeled using either an influence
matrix [15] or ontology [3].
Action rules have been introduced in [11] and investigated
further in [13], [14], [4], [8]. Paper [6] was probably the
first attempt towards formally introducing the problem of
mining action rules without pre-existing classification rules.
Authors explicitly formulated it as a search problem in a
support-confidence-cost framework. The proposed algorithm
is similar to Apriori [1]. Their definition of an action rule
allows changes within stable attributes. Clearly, changing
the value of an attribute is naturally linked with some cost
[14]. In medical area, cost may refer to how expensive is the
patient care but also may refer to its safety. In [6], authors
used the cost measure for entirely different purpose - to rule
out action rules involving changes of stable attribute values
by assigning to them very high cost. However, they did not
take into account correlations between attributes which may
either decrease or increase the cost of rules.
Algorithm ARD, presented in [9], is based on Pawlak?s
model of an information system S [7]. The goal was to
identify certain relationships between granules defined by
the indiscernibility relation on its objects. Some of these
relationships uniquely define action rules for S.
Paper [15] introduced the notion of action as a domain-
independent way to model the domain knowledge. Given
a data set about actionable features and utility measure, a
pattern is actionable if it summarizes a population that can be
acted upon towards a more promising population observed
with a higher utility. Algorithms for mining actionable
patterns (changes within flexible attributes) take into account
only numerical attributes. The distinguished (decision) at-
tribute is called utility. Each action Ai triggers changes of
attribute values described by terms [a ?], [b ?], and [c (don’t
know)]. They are represented as an influence matrix built
by an expert. While previous approaches used only features
- mined directly from the decision system, authors in [15]
define actions as its foreign concepts. Influence matrix shows
the link between actions and changes of attribute values
and the same shows correlations between some attributes,
i.e. if [a ?], then [b ?]. Clearly, expert does not know
2010 IEEE International Conference on Granular Computing
978-0-7695-4161-7/10 $26.00 © 2010 IEEE
DOI 10.1109/GrC.2010.64
772
correlations between classification attributes and the decision
attribute. Such correlations can be described as action rules
and they have to be discovered from the decision system.
In [12], changes of attribute values and action rules are also
described using terms [a ?], [b ?].
Authors in [15] did not take into consideration stable
attributes. Also, their attributes are only numerical. In this
paper, for simplicity reason, we use only symbolic attributes.
Numerical attributes, if any, are discretized before associa-
tion rules or action rules are discovered.
II. BACKGROUND AND OBJECTIVES
In this section we introduce the notion of an information
system, atomic action term, meta-action, and give examples.
By an information system [7] we mean a triple S =
(X,A, V ), where:
1) X is a nonempty, finite set of objects
2) A is a nonempty, finite set of attributes, i.e.
a : U ?? Va is a function for any a ? A, where Va
is called the domain of a
3) V = ?{Va : a ? A}.
For example, Table 1 shows an information system S with
a set of objects X = {x1, x2, x3, x4, x5, x6, x7, x8}, set of
attributes A = {a, b, c, d}, and a set of their values V =
{a1, a2, b1, b2, b3, c1, c2, d1, d2, d3}.
a b c d
x1 a1 b1 c1 d1
x2 a2 b1 c2 d1
x3 a2 b2 c2 d1
x4 a2 b1 c1 d1
x5 a2 b3 c2 d1
x6 a1 b1 c2 d2
x7 a1 b2 c2 d1
x8 a1 b2 c1 d3
Table 1 : Information System S
An information system S = (X,A, V ) is called a deci-
sion system, if one of the attributes in A is distinguished
and called the decision. The remaining attributes in A are
classification attributes. Additionally, we assume that A =
ASt?AFl?{d}, where attributes in ASt are called stable and
in AFl flexible. Attribute d is the decision attribute. “Place
of birth” is an example of a stable attribute. “Marital status”
is an example of an attribute which can be either stable or
flexible.
By atomic action term t associated with S, we mean any
expression t = (a, a1 ? a2), where a1, a2 ? Va, a ? A.
If a1 = a2, then we will also write (a, a1) instead of
(a, a1 ? a2). Object x ? X satisfying the description
a(x) = a1 belongs to the domain of t if there is a way
of changing its attribute value a1 to a2.
By meta-actions associated with S we mean higher con-
cepts used to model certain generalizations of actions intro-
duced in [15]. Meta-actions, when executed, trigger changes
in values of some flexible attributes in S as described by
influence matrix [15] and atomic action terms. To give
an example, let us assume that classification attributes in
S describe teaching evaluations at some school and the
decision attribute represents their overall score. Explain dif-
ficult concepts effectively, Speaks English fluently, Stimulate
student interest in the course, Provide sufficient feedback
are examples of classification attributes. Then, examples of
meta-actions associated with S will be: Change the content
of the course, Change the textbook of the course, Post all
material on the Web. Clearly, any of these three meta-actions
will not influence the attribute Speaks English fluently and
the same its values will remain unchanged [15]. Let us take
Hepatitis as the application domain. Then increase blood
cell plague and decrease level of alkaline phosphatase are
examples of an atomic action term. Drugs like Hepatil or
Hepargen can be seen as meta-actions triggering changes
described by these two atomic action terms. It should be
noted that Hepatil is also used to get rid of obstruction,
eructation, and bleeding. However, Hepargen is not used to
get rid of obstruction but it is used to get rid of eructation
and bleeding.
Also, it should be mentioned here that an expert knowl-
edge related to meta-actions involves only classification
attributes. Now, if some of these attributes are correlated
with the decision attributes (the ones listed on the right-hand
side of an association action rule), then the change of their
values will cascade to the decision through the correlation.
The goal of action rule discovery is to identify possibly all
such correlations.
In earlier works in [11], [13], action rules are constructed
from classification rules. This means that we use pre-existing
classification rules or generate them using a rule discovery
algorithm, such as LERS [5] or ERID [2] (if the data have
probabilistic type), then, construct action rules either from
certain pairs of these rules or from a single classification
rule. In [10] authors presented a strategy for extracting action
rules directly from a decision system. Similarly, authors in
[10] presented a strategy for discovering association action
rules directly from an information system.
In the next section, we recall the notion of action terms,
action rules, association rules [10], and the notion of an
influence matrix (see [15]) associated with a set of meta-
actions. The values stored in an influence matrix are atomic
action terms. We also introduce the notion of an action path.
III. ACTION RULES, ACTION PATHS, AND
META-ACTIONS
Let S = (X,A, V ) be an information system, where V =?{Va : a ? A}. First, we recall the notion of an atomic
action term [9].
By an atomic action term we mean an expression (a, a1 ?
a2), where a is an attribute and a1, a2 ? Va. If a1 = a2,
then a is called stable on a1.
773
By action terms [9] we mean a smallest collection of
atomic action terms such that:
1) If t is an atomic action term, then t is an action term.
2) If t1, t2 are action terms, then t1 · t2 is a candidate
action term.
3) If t is a candidate action term and for any two atomic
action terms (a, a1 ? a2), (b, b1 ? b2) contained in
t we have a 	= b, then t is an action term.
By the domain of an action term t, denoted by Dom(t),
we mean the set of all attribute names listed in t. For
instance, if (a, a2) · (b, b1 ? b2) is an action term, then
Dom(t) = {a, b}. Assume now that
{(a, a2), (b, b1 ? b2)}, {(a, a2), (c, c1 ? c2)}
are two collections of atomic action terms. Meta-action
M1 can trigger the changes represented by (a, a2) · (b, b1 ?
b2) and M2 can trigger the changes represented by (a, a2) ·
(c, c1 ? c2). It means that attribute a in both cases has to
remain stable.
Consider several meta-actions, denoted M1, M2,...,Mn.
Each one can invoke changes within values of some clas-
sification attributes in A. We assume here that A ? {d} =
A1 ?A2 ? ... ?Am. The expected changes of classification
attribute values on objects from S which are triggered by
these meta-actions are described by the influence matrix
{Ei,j}, 1 ? i ? n, 1 ? j ? m. Table 2 gives an example
of an influence matrix associated with 6 meta-actions and
attributes a, b, and c.
a b c
M1 b1 c2 ? c1
M2 a2 ? a1 b2
M3 a1 ? a2 c2 ? c1
M4 b1 c1 ? c2
M5 c1 ? c2
M6 a1 ? a2 c1 ? c2
Table 2: Influence Matrix associated with S
For instance, let us take meta-action M2. It says that by
executing M2 on objects in S, two atomic action terms are
triggered. They are: (a2 ? a1) and (b, b2 ? b2). It means
that objects in S satisfying the description (a, a2) · (b, b2)
are expected to change their description to (a, a1) · (b, b2).
Also, it should be noticed that any influence matrix does not
have to be associated with a decision system but only with
an information system.
By an association action rule we mean any expression
r = [t1 ? t2], where t1 and t2 are action terms. Addi-
tionally, we assume that Dom(t2) ? Dom(t1) ? A and
Dom(t2) ? Dom(t1) = ?. If t2 is an atomic action term,
then r is an action rule. The domain of action rule r is
defined as Dom(t1) ?Dom(t2).
Now, we give an example of an association action rule as-
suming that the information system S is represented by Table
1, attributes a, c, d are flexible and b is stable. Expressions
(a, a2), (b, b2), (c, c1 ? c2), (d, d1 ? d2) are examples
of atomic action terms. Expression r = [[(a, a2) · (c, c1 ?
c2)] ? (d, d1 ? d2)] is an example of an association action
rule which is also an action rule. The rule says that if value
a2 for objects in S remains unchanged and the value of c
will change from c1 to c2, then it is expected that value d1
for all these objects will change to d2. The domain Dom(r)
of action rule r is equal to {a, c, d}.
By an action path we mean a sequence [t1 ? t2 ? ... ?
tn], where ti is an action term for any 1 ? i ? n ? 1, and
tn is an atomic action term. Additionally, we assume that:
(?i ? n ? 1)(?ti1, ti2, ti3, ti4)[[ti = ti1 · ti2 · ti3] ? [ti+1 =
ti1 · ti4 · ti3] ? [(ti2 ? ti4) is an action rule extracted from
S]].
For instance:
[(b1, v1 ? w1) ? (b2, v2 ? w2) ? ... ? (bp, vp ? wp)] ?
[(b1, v1 ? w1)? ...? [(bj1, vj1 ? wj1)? (bj2, vj2 ? wj2)?
...? (bjq, vjq ? wjq)]? ...? (bp, vp ? wp)] ? (d, k1 ? k2)
is an action path if [(bj1, vj1 ? wj1) ? (bj2, vj2 ? wj2) ?
... ? (bjq, vjq ? wjq)] ? (bj , vj ? wj) is an action rule.
To justify the purpose of introducing the notion of an
action path, we take as an example the medical domain.
The medical state of a patient is represented by values of
attributes including results of medical tests. Action terms
represent possible changes within values of some of these
attributes which can be triggered by drugs, consultations
with doctors or surgeries. At the same time, the description
of a medical state of a patient based on these attributes may
not be sufficient to identify any disease and the same what
set of drugs should be prescribed to the patient. In such
cases, the doctor still may decide to prescribe some drugs
with a goal to move the patient to a new medical state
which hopefully will be less complex in terms of stating the
medical diagnosis. The purpose of introducing the notion of
an action path is to model this kind of reasoning which also
describes the steps of a medical treatment.
Standard interpretation NS of action terms in S =
(X,A, V ) is defined as follow:
1) If (a, a1 ? a2) is an atomic action term, then
NS((a, a1 ? a2)) = [{x ? X : a(x) = a1}, {x ? X :
a(x) = a2}].
2) If t1 = (a, a1 ? a2) · t and NS(t) = [Y1, Y2], then
NS(t1) = [Y1 ? {x ? X : a(x) = a1}, Y2 ? {x ? X :
a(x) = a2}].
Let us define [Y1, Y2] ? [Z1, Z2] as [Y1 ? Z1, Y2 ? Z2]
and assume that NS(t1) = [Y1, Y2] and NS(t2) = [Z1, Z2].
Then, NS(t1 · t2) = NS(t1) ?NS(t2).
If t is an association action rule and NS(t) = {Y1, Y2},
then the support of t in S is defined as sup(t) =
min{card(Y1), card(Y2)}.
Now, let r = [t1 ? t2] is an association action rule,
where NS(t1) = [Y1, Y2], NS(t2) = [Z1, Z2]. Support and
confidence of r is defined as follow:
774
1) sup(r) = min{card(Y1 ? Z1), card(Y2 ? Z2)}.
2) conf(r) = [ card(Y1?Z1)card(Y1) ] · [
card(Y2?Z2)
card(Y2)
].
The definition of a confidence requires that card(Y1) 	= 0
and card(Y2) 	= 0. Otherwise, the confidence of an associ-
ation action rule is undefined.
Coming back to the example of S given in Table 1, we
can find a number of association action rules associated with
S. Let us take r = [[(b, b1) · (c, c1 ? c2)] ? (d, d1 ? d2)]
as an example of association action rule. Then,
NS((b, b1)) = [{x1, x2, x4, x6}, {x1, x2, x4, x6}],
NS((c, c1 ? c2)) =
[{x1, x4, x8}, {x2, x3, x5, x6, x7}],
NS((d, d1 ? d2)) = [{x1, x2, x3, x4, x5, x7}, {x6}],
NS((b, b1) · (c, c1 ? c2)) = [{x1, x4}, {x2, x6}].
Clearly, sup(r) = 1 and conf(r) = 1 · 1 = 1/2.
IV. DISCOVERING ACTION RULES AND ACTION PATHS
The strategy for discovering candidate association action
rules was presented in [10]. Influence matrix associated with
S is used to identify which candidate association action rules
and which action paths are valid with respect to meta-actions
and hidden correlations between classification attributes and
decision attributes.
Assume that S = (X,A, V ) is an information system,
A = {A1, A2, ..., Am}, {M1,M2, ...,Mn} are meta-actions
associated with S, {Ei,j : 1 ? i ? n, 1 ? j ? m}
is an influence matrix, and r = [(A[i,1], a[i,1] ? a[j,1]) ·
(A[i,2], a[i,2] ? a[j,2]) · ..... · (A[i,k], a[i,k] ? a[j,k])] ?
[(A[i,k+1], a[i,k+1] ? a[j,k+1]) · (A[i,k+2], a[i,k+2] ?
a[j,k+2]) · ..... · (A[i,p], a[i,p] ? a[j,p])] is a candi-
date association action rule extracted from S, where
A[i,1], A[i,2], ....., A[i,k], A[i,k+1], A[i,k+2], ....., A[i,p] ? A.
We assume that A[i,j](Mi) = Ei,j for any 1 ? i ? n, 1 ?
j ? m. Value Ei,j is either an atomic action term or NULL
(not defined). By meta-actions based information system,
we mean a triple consisting with S, the set of meta-actions
associated with S, and the influence matrix linking them.
We say that r is valid in S with respect to meta-action
Mi, if the following condition holds:
if (?p ? k)[A[i,p](Mi) is defined], then
(?p ? k)[ if A[i,p](Mi) is defined, then
(A[i,p], a[i,p] ? a[j,p]) = (A[i,p], Ei,p)]
We say that r is valid in S with respect to the set of meta-
actions M , where M ? {M1,M2, ...,Mn}, if r is valid in
S with respect to each meta-action in M .
We say that the set of meta-actions M covers association
action rule r = [(A[i,1], a[i,1] ? a[j,1]) · (A[i,2], a[i,2] ?
a[j,2]) · ..... · (A[i,k], a[i,k] ? a[j,k])] ? [(A[i,k+1], a[i,k+1] ?
a[j,k+1])·(A[i,k+2], a[i,k+2] ? a[j,k+2])·.....·(A[i,p], a[i,p] ?
a[j,p])] in S if r is valid in S with respect to the set of meta-
actions M and
(?p ? k)[(?Mi ? M)[Mi(A[i,p]) = a[i,p] ? r is valid in
S with respect to Mi]].
To give an example, assume that S is an information sys-
tem represented by Table 1 and {M1,M2,M3,M4,M5,M6}
is the set of meta-actions assigned to S with an influence
matrix shown in Table 3. Any empty slot in Table 3
represents NULL value.
a b c
M1 b1 c2 ? c1
M2 a2 ? a1 b2
M3 a1 ? a2 c2 ? c1
M4 b1 c1 ? c2
M5 c1 ? c2
M6 a1 ? a2 b1
Table 3: Influence Matrix associated with S
In the previous section we explained the strategy for
discovering candidate association action rules. Two such
rules have been constructed:
r1 = [[(b, b1) · (c, c1 ? c2)] ? (d, d1 ? d2)] and
r2 = [(a, a2 ? a1) ? (d, d1 ? d2)].
Clearly r1 is valid in S with respect to M4, M5, and M6.
Action rule r2 is valid in S with respect to M1, M2, M4,
and M5. The meta-action M4 covers rule r1. Also the set
of meta-actions {M5,M6} covers that rule.
Assume that S = (X,A ? {d}, V ) is an information sys-
tem with meta-actions M = {M1,M2, ...,Mn} associated
with S. Any candidate association action rule extracted from
S which is covered by a subset of meta-actions in M is
called association action rule. In such a case we will also
say that the validation process for a candidate association
action rule was positive.
Assume now that R is the set of candidate association
action rules generated by the algorithm presented in the
previous section. The last step in the process of association
action rules discovery is used to identify which rules in R
are covered by some meta-actions from M .
In our example, r1 is an association action rule because
the meta-action M4 covers it. Rule r1 is also applicable to
x1 and x4. So, the meta-action M4 will trigger r1 which
in turn will generate two new tuples: y1 as the result of its
application to x1 and y2 as the result of its application to
x4. The resulting information system is of type ? (see [2])
and it is given below:
775
a b c d
x1 a1 b1 c1 d1
x2 a2 b1 c2 d1
x3 a2 b2 c2 d1
x4 a2 b1 c1 d1
x5 a2 b3 c2 d1
x6 a1 b1 c2 d2
x7 a1 b2 c2 d1
x8 a1 b2 c1 d3
y1 a1 b1 c2 (d2, 1/2)
y4 a2 b1 c2 (d2, 1/2)
Table 4 : Information System S1.
New candidate association action rules can be extracted
from S1, using algorithm similar to the one presented in
[10], and next their validity is verified by meta-actions and
the corresponding influence matrix associated with S1. Now,
if any new association action rules are extracted, then S1 will
be updated again and the process will continue till the fix
point is reached (information system is not changed).
The validation process for action paths with respect to
meta-actions and hidden correlations between classifica-
tion attributes and the decision attribute is similar to the
validation process for association action rules. Just, we
have to verify if action rules used to define each path are
valid with respect to meta-actions and correlations between
classification and decision attributes.
V. CONCLUSION
We have introduced a meta-action based information
system which is as a triple (S, {Mi : i ? n}, {Ei,j :
i ? n, j ? m}), where Mi are meta-actions associated
with S, and {Ei,j : i ? n, j ? m} is an influence matrix
linking them. Meta-actions jointly with the influence matrix
are used as a postprocessing tool in association action rules
discovery. Influence matrix shows the correlations among
attributes triggered off by meta-actions. If the candidate
association actions rules are not on par with them, then they
are not classified as association action rules. However, if the
influence matrix does not show all the interactions between
classification attributes, then still some of the resulting
association action rules may fail when tested on real data.
ACKNOWLEDGMENT
This material is based in part upon work supported by the
Ministry of Science and Higher Education in Poland under
Grant N N519 404734 and by AMVIS Program CONTACT
in Czech Republic under Grant ME 913.
REFERENCES
[1] R. Agrawal, R. Srikant (1994), Fast algorithm for mining
association rules, Proceeding of the Twentieth International
Conference on VLDB, 487-499
[2] A. Dardzin´ska, Z. Ras´ (2006), Extracting rules from incom-
plete decision systems, in Foundations and Novel Approaches
in Data Mining, Studies in Computational Intelligence, Vol. 9,
Springer, 143-154
[3] D. Fensel (1998), Ontologies: a silver bullet for knowledge
management and electronic commerce, Springer-Verlag
[4] S. Greco, B. Matarazzo, N. Pappalardo, R. Slowin´ski (2005),
Measuring expected effects of interventions based on decision
rules, J. Exp. Theor. Artif. Intell., Vol. 17, No. 1-2, 103-118
[5] J. Grzymala-Busse (1997), A new version of the rule induction
system LERS, Fundamenta Informaticae, Vol. 31, No. 1, 27-39
[6] Z. He, X. Xu, S. Deng, R. Ma (2005), Mining action rules
from scratch, Expert Systems with Applications, Vol. 29, No.
3, 691-699
[7] Z. Pawlak (1981) Information systems - theoretical founda-
tions, Information Systems Journal, Vol. 6, 205-218
[8] Y. Qiao, K. Zhong, H.-A. Wang and X. Li (2007), Developing
event-condition-action rules in real-time active database, Pro-
ceedings of the 2007 ACM symposium on Applied computing,
ACM, New York, 511-516
[9] Z.W. Ras´, A. Dardzin´ska (2008), Action rules discovery
without pre-existing classification rules, Proceedings of the
International Conference on Rough Sets and Current Trends
in Computing (RSCTC 2008), LNAI 5306, Springer, 181-190
[10] Z.W. Ras´, A. Dardzin´ska, L.-S. Tsay, H. Wasyluk (2008),
Association Action Rules, IEEE/ICDM Workshop on Mining
Complex Data (MCD 2008), Pisa, Italy, ICDM Workshops
Proceedings, IEEE Computer Society, 2008, 283-290
[11] Z.W. Ras´, A. Wieczorkowska (2000), Action-Rules: How to
increase profit of a company, in Principles of Data Mining
and Knowledge Discovery, Proceedings of PKDD 2000, Lyon,
France, LNAI, No. 1910, Springer, 587-592
[12] J. Rauch (2010), Considerations on Logical Calculi for
Dealing with Knowledge in Data Mining, Advances in Data
Management, Z. Ras, A. Dardzinska (Eds.), Studies in Com-
putational Intelligence, Vol. 223, Springer, 2009, 177-199
[13] L.-S. Tsay, Z.W. Ras´ (2006), Action rules discovery system
DEAR3, in Foundations of Intelligent Systems, Proceedings of
ISMIS 2006, Bari, Italy, LNAI, No. 4203, Springer, 483-492
[14] A. Tzacheva, Z.W. Ras´ (2007), Constraint based action rule
discovery with single classification rules, in Proceedings of
the Joint Rough Sets Symposium (JRS07), LNAI, Vol. 4482,
Springer, 322-329
[15] K. Wang, Y. Jiang, A. Tuzhilin (2006), Mining Actionable
Patterns by Role Models, in Proceedings of the 22nd Inter-
national Conference on Data Engineering, IEEE Computer
Society, 16-25
776
