An Approach to Privacy-Preserving Alert Correlation and Analysis  
Jin Ma, Xiu-zhen Chen, Jian-hua Li 
Electronic Information and Electric Engineering School 
Shanghai Jiao Tong University 
Shanghai, China 
majin@sjtu.edu.cn 
Abstract—Privacy issues are concerned when data holders share 
their detected security data for correlation and analysis purpose. 
This paper proposes an approach to correlate and analyze 
intrusion alerts, while preserve privacy for alert holders. The raw 
intrusion alerts are protected by improved k-anonymity model, 
which preserves the alert regulation inside disturbed data 
records. With this privacy preserving technique, combing the 
typical FP-tree association rules mining algorithm, the approach 
provides the capacity of well balancing the alert correlation and 
the privacy preservation. Experimental results show that this 
approach works comparatively efficient and reaches a well 
balance between the alerts correlation and the privacy issues. 
Keywords-privacy preserving; alert correlation; k-anonymity; 
intrusion detection; frequent pattern 
I. INTRODUCTION 
Intrusion Detection Systems (IDSs) are widely deployed to 
defend against large-scale attacks and security threats. Existing 
IDSs, however, often trigger too many alerts daily[1-3]. 
Moreover, the false alerts are mixed up with the true ones[1, 4], 
making it more difficult to identify the real hidden attacks. 
Alert correlation and analysis methods[1, 3] have been 
investigated to get an in-depth insight into the threats and to 
build a higher level attack scenario across networks. 
Meanwhile various communities such as organizations, 
institutions and users are unwilling to share their data for 
security analysis without privacy guarantees. Data holders have 
concerns that sharing detailed information will be at the risk of 
their own security, such as information around intranet 
topology structure, certain services, and the security 
infrastructure deployment. Therefore, privacy-preserving 
techniques are required in the process of IDS alerts correlation 
and analysis. 
Existing privacy-preserving approaches[5-7] usually 
perform transformation on original data to protect sensitive 
data before sharing and correlating. Lincoln et al.[5] apply 
standard and keyed hash functions to ensure privacy for the 
sensitive attributes such as IP addresses. The approach is 
feasible even in large alert loads, while it still has limitations in 
alerts correlation when using different keys in keyed hashing. 
Xu and Ning [6] use a conceptual hierarchy based approach to 
generalize original attributes to high-level concepts. The 
approach, however, is not easy to control the generalization 
process in complex circumstance. Xu and Ning[7] also propose 
three methods to anonymize sensitive attributes of alerts and 
build attack scenarios. Their schemes include artificial alerts 
injection into original data sets, attribute randomization and 
data set partitioning and randomization. But the correlation 
results will be highly influenced by the selection of parameters. 
Therefore, a privacy-preserving correlation and analysis 
approach is proposed in this paper to discover efficient 
association rules among protected alert’s attributes. Within 
affordable calculation cost, it has been proved to be efficient to 
perform alert correlation and preserve sensitive attributes. The 
generated association rules can be used in operational IDSs to 
retrench intrusion events and react against attacks found.  
Section 2 designs the framework for alert correlation and 
analysis with privacy-preserving capability. Section 3 proposes 
a privacy-preserving based alert correlation and analysis 
method. Section 4 shows experiments and performance 
comparison with classical alert correlation algorithm. 
Conclusions and further work are shown in Section 5. 
II. ALERT CORRELATION AND ANALYSIS FRAMEWORK 
WITH PRIVACY-PRESERVING CAPABILITY
Intrusion alert correlation and analysis closely rely on the 
collections of security data sets, which become sensitive when 
certain security or individual information is involved. For 
instance, IP addresses and port numbers in IDS alerts might 
show intranet topology and running services, which are 
considered sensitive for certain critical networks. These would 
also be the foundations for hackers to compromise the whole 
network step by step. In this section, a privacy-preserving alert 
correlation and analysis framework is designed to obtain 
association rules among protected alert’s attributes for the 
purpose of alerts correlation. 
The privacy-preserving alert correlation and analysis 
framework, which is shown in Fig. 1, is designed on the basis 
of the classical Common Intrusion Detection Framework 
(CIDF)[8]. The external rectangle region represents the 
network domain relatively independent to other ones. Detected 
intrusion alerts within this domain will be protected before 
being shared for security correlation and analysis. Taking the 
different level of sensitivity of the variant attributes in the 
mining process of the alert correlation into account, k-
anonymity method[9, 10], a classical privacy-preserving 
method, is improved to preserve the alert’s semantic as much 
as possible during the process of attributes anonymization. 
With this improved privacy preserving method, combing the 
typical FP-tree association rules mining approach, the 
framework is set up.  
Data and control flows among the components in the 
framework are denoted by the solid lines in Fig. 1. While the 
This research is funded by NFSC of China under grant number of 
60702047. 
2010 IEEE Asia-Pacific Services Computing Conference
978-0-7695-4305-5/10 $25.00 © 2010 IEEE
DOI 10.1109/APSCC.2010.85
620
dashed line means the message shared for alerts correlation 
between network domains. 
The whole framework is mainly composed of five 
components. The main components and their functions are 
given as follows: 
• Data collector: to collect raw packets coming from the 
network and to provide them to analyzer for analysis. 
Data collectors will be deployed in the nodes of high 
network flow, and amount of which depends on 
domain’s security policy. 
• Data analyzer: to analyze collected data by means of 
pattern matching or other analysis methods to find 
intrusion events. 
• Intrusion events database: to store intrusion events and 
relevant datasets during the process of intrusion 
detection and analysis. 
• Monitor: to supervise running status of other 
components and to give reports to security 
administrator about security status. 
• Privacy-preserving alert correlation and analysis agent: 
to use a privacy preservation technique to protect the 
detected alert attributes before they are shared with the 
utility which are not jeopardized. Afterwards, to 
perform alerts correlation and analysis algorithm to 
discover association rules or sequence patterns for 
explaining the global behavior of each attack, the result 
of which will be stored in intrusion events database 
and displayed on monitor component. 
The work of this paper is to mainly focus on the marked 
area in Fig. 1. Experimental results have proved that this 
framework is valuable on globally analyzing and explaining the 
data that IDS received with the consideration of sensitive 
attributes. 
III. PRIVACY-PRESERVING BASED ALERT CORRELATION AND 
ANALYSIS APPROACH
The goal of this section is to provide the privacy-preserving 
method for intrusion alerts, with the correlation and analysis 
process on the protected alert attributes, which can be 
described in the following two steps?
A. Step1:Protect sensitive alert attributes by the improved k-
anonymity method 
Privacy-preserving techniques, such as data perturbation 
and data modification, are widely developed and used in the 
area of data mining and knowledge discovery in databases[11, 
12]. Considering the characteristics of intrusion alerts 
correlation, k-anonymity method, a classical privacy-
preserving method, is improved to preserve the alert regulation 
inside disturbed data records. Classical k-anonymity model 
uses the term quasi-identifier to help judging whether k-
anonymity properties are met. In the situation of protecting 
sensitive attributes in intrusion alerts, the sensitive fields are 
what we exactly care about for the purpose of protecting 
privacy, regardless of the quasi-identifier.  
Before going into the details of the method proposed, some 
notions and definitions are clarified first. 
Definition 1 Attributes 
Let AL(A1,…,An) be an alerts set with a finite number of 
security alerts. The finite set of attributes of AL are { A1,…,An }.
Definition 2 k-anonymity 
Let AL(A1,…,An) be an alerts set and SD(Ai,…,Aj) be a set of 
sensitive attributes to be protected, and { Ai,…Aj }
? { A1,…An }. AL satisfies k-anonymity if and only if each 
sequence of values in SD appears with at least k occurrences in 
AL[SD].
Let OA(A1,…,An) be an original alerts set, the k-anonymity 
method is used for the selective modification of sensitive 
attributes in SD, with all the other attributes remain unchanged. 
The discrete values of sensitive alert attributes in OA are 
replaced by their generalization values which are predefined 
according to domain’s security policy. Uncertainty is 
introduced into alerts set but with semantics for preserving 
alerts regulation. 
B. Step2:Alert correlation and analysis method 
Frequent pattern mining technique[13] is highly suitable for 
alert analysis with the ability of deriving frequent itemsets and 
association rules. Especially, algorithm FP-Tree is good at 
efficient mining of frequent patterns in large database, which 
applying a compressed, frequent pattern tree FP-Tree structure 
for mining frequent patterns without candidate generation. The 
FP-Tree algorithm mainly includes the following two 
algorithms: FP-Tree construction and FP-Growth [14]. 
Emphasis will be put on method of mining association rules 
among protected alert’s attributes for retrenching and filtering 
intrusion events. 
Figure 1. Alert Correlation Framework with Privacy-preserving Capability 
621
The pseudo-code for privacy-preserving based alert 
correlation and analysis algorithm is given in Fig. 2. Some 
notations used in the algorithm are described as follows: 
• VGH( )is a value generalization function for sensitive 
attributes. 
• AL(A1,…,ANg) is the protected intrusion alerts set of OA.
• All intrusion alerts share the same attribute vector{date, 
starttime, endtime, protocol, source IP address, 
destination IP address, source port number, 
destination port number, attackname}
IV. EXPERIMENTAL RESULTS
In this section, we demonstrate a comparison of the 
approach this paper proposed with the classical association 
rules mining algorithm FP-tree without privacy-preserving 
capability. An intranet environment is constructed for the  
experiments which deploys 4 application servers (Database 
Figure2. Privacy-preserving Based Alert Correlation and Analysis Algorithm 
server, WEB server, FTP server and DNS server) inside and 
SNORT[15] as a bypass unit at the entrance of our intranet. To 
validate the effectiveness and scalability of our approach, 
intrusion alerts are collected from SNORT deployed in the 
intranet. Table 1 summarizes the numbers and types of the 
alerts. 
4.1 Effectiveness 
A set of experiments is designed to evaluate the privacy of 
the attributes to be protected and the effectiveness of the alert 
association rules to discover, before and after the privacy 
preserving method is applied. 
Table 2A shows some of the intrusion alerts generated by 
the SNORT in the intranet. The example of association rule 
among these original alert attributes finally discovered is given 
in Table 2B. 
In the experiment, d_IP (destination IP address) and d_port 
(destination port number) are the sensitive attributes. 
Transformations are made to these attributes by the improved 
k-anonymity method, which are generalized to their more 
general values with most semantics. Therefore, sensitive 
attributes in original alerts are protected as Table 3A shows. 
We can get the association rule that describes the same security 
information as classical FP-tree algorithm discovers, which is 
shown in Table 3B. 
The association rules discovery result comparison between 
our approach and classical FP-tree algorithm is illustrated in 
Table 4, which indicates high retrench ration on intrusion alerts 
of our approach. 
TABLE 1. ORIGINAL INTRUSION ALERTS IN EXPERIMENT
Types of Intrusion Alerts Numbers of Alerts before Correlation 
MS-SQL Worm propagation attempt 4 
HTTP ActiveX 1 
ICMP PING 278 
ICMP Echo Reply 115 
ICMP Destination Unreachable 
Port Unreachable 266 
WEB-MISC HTTP Directory traversal 5 
WEB-IIS Nsiislog.dll Access 2 
MS-SQL version overflow attempt 1 
BLEEDING-EDGE MS-SQL  
DOS Bouncing packets 4
TFTP Get 1 
Port Scan 307 
DNS Named Version Attempt 19 
Input: Original intrusion alerts set OA(A1,…,An); set of 
sensitive attributes SD(Ai,…Aj); k constraint; a minimum 
support threshold min-sup;
Output: Association rules. 
Assumes: Consider each intrusion event as a transaction 
T; |OA| ? k
Method: 
1: for all sensitive attributes Ai in SD do 
2:  VGH(Ai):= generalizations of Ai according to the 
security policy of the organization 
3: end for 
4: for each alert in OA do 
5: each Ai over SD:= VGH(Ai) 
6: end for
7: AL(A1,…,ANg): = VGH(OA), with satisfation of k 
constraint 
8: Support():= Count_items() // itemset is built, and the 
support of each item is calculated 
9: for each alert in AL do 
10:     for each item in an alert do 
11:    if Support() >= min-sup then
12: add this item and its support into F // F is the 
list of frequent items 
13:    end if
14:     end for
15: end for 
16: FList := Sort_supportdescending(F) // sort F in 
support-descending order as FList 
17: for each T in AL
18:   Sort_item(T) // get ordered frequent items of T 
19:          FP-tree:= FP-Tree_construction(T)
20: end for
21: := FP-Growth(FP-tree, null) //discover the set of 
frequent itemsets in the transaction database 
22: Get association rules between attributes of alerts 
from .
622
4.2 Scalability 
The runtime of our approach and classical FP-tree 
algorithm on 1000 experimental alerts with k=2 as the min-sup
changes is shown in Fig. 3. 
In the experiment, classical FP-tree algorithm is only 
around 10% faster than our approach on discovering 
association rules among those alert attributes in average, which 
is easy to understand because our approach protects sensitive 
attributes in original alerts. As the min-sup is high, the set of 
frequent itemsets is not comparatively large, so the gap 
becomes even smaller. However, when the min-sup is small 
enough, our approach’s time cost is at the advantage because of 
the short list of frequent items in its generalization, which 
makes sensitive attributes actually different appear equal. 
Fig. 4 shows the scalability of the two methods based on 
different number of intrusion alerts. It illustrates the linear 
increase of runtime verses the number of alerts. Our approach 
gets the better runtime performance out of the same reason 
with small min-sup.
V. CONCLUSIONS AND FUTURE WORK
Alert correlation and analysis is a key part in intrusion  
TABLE 2A EXAMPLE OF SNORT ALERTS
TABLE 2B ASSOCIATION RULE DISCOVERED FROM ORIGINAL ALERTS
date start_time end_time protocol s_IP d_IP s_port d_port attack_name 
30.07.2010 14:20:45 16:00:20 TCP 172.020.026.061 192.168.13.253 51129 21 Port scan 
30.07.2010 14:22:16 16:00:24 TCP 172.020.149.061 192.168.13.253 48914 80 Port scan 
30.07.2010 14:23:33 16:00:24 TCP 172.020.149.061 192.168.13.253 52382 22 Port scan 
30.07.2010 14:25:50 16:00:24 TCP 172.020.149.061 192.168.13.253 36343 25 Port scan 
If d_IP=192.168.13.253 and s_IP=172.020.149.061 then attack_name=Port scan, support=30.6%, confidence=92.3%
TABLE 3A EXAMPLE OF PROTECTED SNORT ALERTS (K=2)
date start_time end_time protocol s_IP d_IP s_port d_port attack_name 
30.07.2010 14:20:45 16:00:20 TCP 172.020.026.061 192.168.13.* 51129 2* Port scan 
30.07.2010 14:22:16 16:00:24 TCP 172.020.149.061 192.168.13.* 48914 * Port scan 
30.07.2010 14:23:33 16:00:24 TCP 172.020.149.061 192.168.13.* 52382 2* Port scan 
30.07.2010 14:25:50 16:00:24 TCP 172.020.149.061 192.168.13.* 36343 * Port scan 
TABLE 3B ASSOCIATION RULE DISCOVERED FROM PROTECTED ALERTS
If d_IP=192.168.13.* and s_IP=172.020.149.061 then attack_name=Port scan, support=30.6%, confidence=92.3%
Indexes Classical FP-tree Algorithm 
Our
Approach
Alerts Number before Correlation 1003 1003 
Alerts Number after Correlation 287 243 
Retrench ratio of Alerts 3.49:1 4.13:1 
Alerts Type before Correlation 12 12 
Alerts Type after Correlation 9 7 









       
PLQVXS RIDOHUWDWWULEXWHV
5X
QW
LP
H
PV

&ODVVFLDO)3WUHH
2XUDSSURDFK
Figure 3. Scalability with min-sup over experimental alerts set
TABLE 4 RESULTS COMPARISON (K=2) 









         
1XPEHURI$OHUWV
5X
QW
LP
H
PV

&ODVVLFDO)3
WUHH
2XUDSSURDFK
Figure 4. Scalability with Number of Intrusion Alerts
623
detection field. Privacy guarantees will accelerate the research 
developments in the according area, and make it more feasible. 
This paper proposes the privacy-preserving approach to 
correlate and analyze the intrusion alerts without the risk of 
sensitive information disclosure during the process. The 
approach is proved to be effective in utility with a favorite 
retrench ratio of alerts and affordable performance over 
massive intrusion alerts. An open question is that which causes 
a greater impact on the effectiveness of alert correlation: the 
number of attributes that is being anonymized or the privacy-
preserving algorithm that is being applied. In addition, the 
association rules with low support and low confidence are also 
useful for intrusion analysis. Therefore, personality mining is a 
future research direction worth researching.  
REFERENCES
[1] H. Debar and A. Wespi. Aggregation and correlation 
of intrusion-detection alerts. 2001: Springer. 
[2] A. Valdes and K. Skinner, Probabilistic alert 
correlation. Google Patents. 2001. 
[3] F. Valeur, G. Vigna, C. Kruegel and R. Kemmerer, A 
comprehensive approach to intrusion detection alert 
correlation. IEEE Transactions on dependable and 
secure computing, 2004: pp. 146-169. 
[4] C. Clifton and G. Gengo. Developing custom 
intrusion detection filters using data mining. 2000: 
Citeseer. 
[5] P. Lincoln, P. Porras and V. Shmatikov. Privacy-
preserving sharing and correction of security alerts.
2004: USENIX Association. 
[6] D. Xu and P. Ning, Privacy-preserving alert 
correlation: a concept hierarchy based approach. 
[7] D. Xu and P. Ning. A flexible approach to intrusion 
alert anonymization and correlation. 2007: IEEE. 
[8] C. Kahn, P. Porras, S. Staniford-Chen and B. Tung, A 
common intrusion detection framework. Submitted to 
Journal of Computer Security, 1998. 
[9] G. Aggarwal, T. Feder, K. Kenthapadi, R. Motwani, R. 
Panigrahy, D. Thomas, and A. Zhu, Approximation 
algorithms for k-anonymity. Journal of Privacy 
Technology, 2005. 2005112001.
[10] L. Sweeney, k-anonymity: A model for protecting 
privacy. International Journal of Uncertainty 
Fuzziness and Knowledge Based Systems, 2002. 
10(5): pp. 557-570. 
[11] V. Verykios, E. Bertino, I. Fovino, L. Provenza, Y. 
Saygin and Y. Theodoridis, State-of-the-art in privacy 
preserving data mining. ACM Sigmod Record, 2004. 
33(1): pp. 50-57. 
[12] J. Wang, Y. Luo, Y. Zhao and J. Le. A survey on 
privacy preserving data mining. 2009: IEEE. 
[13] J. Han, H. Cheng, D. Xin and X. Yan, Frequent 
pattern mining: current status and future directions.
Data Mining and Knowledge Discovery, 2007. 15(1): 
pp. 55-86. 
[14] J. Han, J. Pei, Y. Yin and R. Mao, Mining frequent 
patterns without candidate generation: A frequent-
pattern tree approach. Data mining and knowledge 
discovery, 2004. 8(1): pp. 53-87. 
[15] M. Roesch. Snort-lightweight intrusion detection for 
networks. 1999: Seattle, Washington. 
624
