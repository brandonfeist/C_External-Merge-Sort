A Cluster-Based Divide-and-Conquer Genetic-Fuzzy Mining Approach for Items 
with Multiple Minimum Supports 
Chun-Hao Chena, Lien-Chin Chenb, Tzung-Pei Hongc and  Vincent S. Tsengb 
aDepartment of Computer Science and Information Engineering, Tamkang University, Taipei, Taiwan 
b Department of Computer Science and Information Engineering, National Cheng-Kung University, Tainan, Taiwan 
cDepartment of Computer Science and Information Engineering, National University of Kaohsiung, Kaohsiung, Taiwan 
chchen@mail.tku.edu.tw, cljimmy@idb.csie.ncku.edu.tw, tphong@nuk.edu.tw (corresponding author), 
tsengsm@mail.ncku.edu.tw
 
 
Abstract—In this paper, an enhanced efficient approach for 
speeding up the evolution process for finding minimum 
supports, membership functions and fuzzy association rules is 
proposed by utilizing clustering techniques. All the 
chromosomes use the requirement satisfaction derived only 
from the representative chromosomes in the clusters and from 
their own suitability of membership functions to calculate the 
fitness values. The evaluation cost can thus be greatly reduced 
due to the cluster-based time-saving process. The final best 
minimum supports and membership functions in all the 
populations are then gathered together for mining fuzzy 
association rules. Experimental results also show the efficiency 
of the proposed approach. 
Keywords- data mining, genetic algorithm, genetic-fuzzy 
mining, multiple minimum supports, membership functions. 
I.  INTRODUCTION 
Since the fuzzy theory is a well-known concept to handle 
quantitative data [12, 13], lots of fuzzy data mining 
approaches have thus been proposed for mining rules from 
transactions with quantitative values [3, 9, 10]. Since the 
minimum supports and membership functions were assumed 
to be known in advance in these approaches, lots of 
approaches have been proposed [1, 2, 8] for deriving 
membership functions with a uniform minimum support in 
recent years.  
However, different items should have different minimum 
supports to judge their importance. A Genetic-Fuzzy mining 
algorithm for items with Multiple Minimum Supports (called 
the GFMMS algorithm) has thus been proposed for solving it 
[5], firstly. The minimum supports and sets of membership 
functions of all the items were encoded into a chromosome. 
Since the chromosome was quite long in this way, lots of 
processing time was spent to learn global nearly optimal 
solutions. A Divide-and-conquer Genetic-Fuzzy mining 
algorithm for items with Multiple Minimum Supports 
(DGFMMS) [6], which can divide-and-conquer the 
derivation process of the minimum supports and membership 
functions of different items, have been proposed. However, 
in that approach, the fuzzy value of large 1-itemsets should 
be found first before calculating the fitness value of each 
chromosome. Since the transactions thus must be scanned 
once for each chromosome to get its fitness value, the 
evolution process is thus time-consuming. 
In this paper, by utilizing the k-means clustering 
technique [11], an enhanced approach, called the Cluster-
based Divide-and-conquer Genetic-Fuzzy mining algorithm 
for items with Multiple Minimum Supports (CDGFMMS), is 
proposed to speed up the evaluation process and keep nearly 
the same quality of solutions as that in [6]. In the proposed 
approach, each chromosome represents a minimum support 
and set of membership functions for an item used in fuzzy 
mining. The proposed algorithm first divides the 
chromosomes in a population into clusters by using the k-
means clustering approach. All the chromosomes then use 
the requirement satisfaction derived only from the 
representative chromosomes in the clusters and from their 
own suitability of membership functions to calculate the 
fitness values. The evaluation cost can thus be greatly 
reduced due to the cluster-based time-saving process. The 
evaluation results are then utilized to choose appropriate 
chromosomes for mating. The offspring then undergo 
recursive evolution until a good minimum support and 
membership functions have been obtained. Next, the 
obtained minimum supports and membership functions of all 
the items are gathered together and used to mine the fuzzy 
interesting association rules from the given quantitative 
database [15]. Experimental results also show the 
effectiveness of the proposed algorithm.  
II. THE COMPONENTS OF THE PROPOSED GENETIC-
FUZZY MINING APPROACH 
A. Chromosome Representation 
Each individual consists of two parts, respectively for a 
minimum support and a set of membership functions. The 
first part encodes the minimum support of a certain item by 
the real-number schema. Thus, the minimum support of an 
item Ij is encoded with a real number ?j. The second part 
handles the set of membership functions for an item. It also 
adopts the real-number schema. Assume the membership 
functions are triangular. Three parameters, cjk1, cjk2, and cjk3, 
are thus used to represent a membership function, denoted as 
Rjk, for item Ij. A chromosome of item Ij can thus be 
represented as a string of 
?jcj11cj12cj13cj21cj22cj23…cjl1cjl2cjl3, where cjl3 = ?. The 
inequality condition of the center values of the membership 
functions is cj12 ? cj22 ? …? cjl2. For each membership 
2010 International Conference on Technologies and Applications of Artificial Intelligence
978-0-7695-4253-9/10 $26.00 © 2010 IEEE
DOI 10.1109/TAAI.2010.89
532
function, the inequality condition of the three parameters is 
cjk1 < cjk2 < cjk3. 
B. Initial Population 
A genetic algorithm requires a population of feasible 
solutions to be initialized and updated during the evolution 
process. As mentioned above, each individual within the 
population is a minimum support and a set of triangular 
membership functions. Each membership function 
corresponds to a linguistic term of an item. In this paper, the 
initial set of chromosomes can be generated according to the 
initialization information as used in [5]. It includes an 
appropriate number of linguistic terms, a range of possible 
minimum supports and a set of membership functions of 
each item. 
C. The Required Strength of Fuzzy Regions 
In this paper, the minimum supports of items may be 
different. It is hard to assign the values. As an alternative, the 
values can be determined according to the required number 
of rules. It is, however, very time-consuming to obtain the 
rules for each chromosome. Usually, a larger number of 1-
itemsets will result in a larger number of all itemsets with a 
higher probability, which will thus usually imply more 
interesting association rules. The evaluation by 1-itemsets is 
much faster than that by all itemsets or by interesting fuzzy 
association rules. Using the number of large 1-itemsets can 
thus achieve a good trade-off between execution time and 
rule interestingness [8]. 
A criterion should thus be specified to reflect the user 
preference on the derived knowledge. In our previous paper 
[5], the Required Number of Large 1-itemsets (RNL) was 
thus proposed for this purpose. Given a user-defined 
percentage p, the RNL value for each item could be derived 
from the number of its linguistic terms and p. In this paper, 
we consider that the fuzzy value of each fuzzy region 
(linguistic term) directly reflects the importance of that 
region. The Required Strength of Fuzzy regions (RSF) is 
then defined here. It is the strength of fuzzy regions that a 
user wants to get from an item and can be defined as follows:  
pfRSF
n
i
l
k
i
jkI
j
j
*
1 1
)(

= =
=
, 
where RSFIj is the RSF value of item Ij, n is the number of 
transactions, lj is the number of linguistic terms of item Ij, fjk(i) 
is the fuzzy membership value of the k-th fuzzy region of 
item Ij in the i-th transaction, and p is the predefined 
percentage to reflect users’ preference on the strength of 
fuzzy regions. A minimum support with which the strength 
of large fuzzy regions for an item is close to its RSF value is 
thought of as a good one for that item.  
D. Fitness and Selection 
In order to develop a good minimum support and a set of 
membership functions from an initial population, the genetic 
algorithm selects good parent chromosomes for mating in a 
probabilistic way. An evaluation function is thus needed to 
qualify the derived minimum support and membership 
functions. The fitness function of a chromosome Cq is 
defined as follows: 
)(
)(
)(
q
q
q CySuitabilit
CRS
Cf = , 
where RS(Cq) is the requirement satisfaction defined as the 
closeness of the derived strength of fizzy regions of large 1-
itemsets for chromosome Cq to its RSF, suitability(Cq) 
represents the suitability of the membership functions for Cq. 
RS(Cq) is defined as follows:  











>
?
=




?
?
?
?
;)(,
)(
;)(,
)(
1
1
1
1
LX
LX
LX
LX
q
RSFXfuzzyValueif
XfuzzyValue
RSF
RSFXfuzzyValueif
RSF
XfuzzyValue
)RS(C
 
where RSF is the required strength of fuzzy regions for item 
Ij and fuzzyValue(X) is the fuzzy membership value of the 
large 1-itemset X from the given transaction database. RS(Cq) 
is used to reflect the closeness degree between the derived 
strength of fuzzy regions of large 1-itemsets and the required 
strength of fuzzy regions. 
Suitability(Cq) represents the shape suitability of the 
membership functions from Cq, which consists of overlap 
and coverage factors. The overlap factor represents the 
overlapping factor of the membership functions for an item Ij 
in the chromosome Cq. The coverage factor represents the 
coverage ratio of the membership functions for item Ij. The 
suitability factor used in the fitness function can reduce the 
occurrence of the two bad kinds of membership functions, 
where the first one is too redundant, and the second one is 
too separate. The overlap factor is designed for avoiding the 
first bad case, and the coverage factor is for the second one. 
More details can be found in [6]. 
E. Clustering Chromosomes 
From the above section, it is known that the fuzzy value 
of large 1-itemsets should be found first before the 
requirement satisfaction for each chromosome is calculated. 
The transactions must thus be scanned once for each 
chromosome to get its requirement satisfaction.  
Since the evaluation only by fuzzy value of 1-itemsets is 
still time-consuming, we proposed a method based on the 
clustering technique to reduce the evaluation time of large 1-
itemsets in the past with a uniform minimum support [4]. It 
first used the centers of membership function, coverage 
factors and overlap factors of all the chromosomes to form 
appropriate clusters. For each cluster, the chromosome which 
was the nearest to the cluster center was thus chosen as the 
representative chromosome to derive its fuzzy support of 
large 1-itemsets. All chromosomes in the same cluster then 
used the fuzzy support of large 1-itemsets derived from the 
representative chromosome as their own. Finally, each 
chromosome was evaluated by this fuzzy support of large 1-
itemsets divided by its own suitability value.  
However, each item has its own minimum support in this 
paper. Thus, using only the two factors (coverage factor and 
overlap factor) and centers of membership functions for 
clustering is not enough. For instance, assume there are two 
chromosomes with the same centers of membership 
533
functions, coverage and overlap factors but different 
minimum supports. They may have different numbers of 
large 1-itemsets due to their different minimum supports. 
The minimum supports of items should thus be considered as 
an additional attribute for clustering chromosomes. 
Additionally, since the central values of membership 
functions are quantitative values, we thus normalized the 
center values into range [0, 1] by dividing by their maximum 
quantitative value in order to balance the influence of each 
clustering attribute. Thus, assume each item has three 
membership functions, six attributes including a coverage 
factor, a overlap factor, a minimum support value and three 
center values are then used to form appropriate clusters.  
In this paper, the k-means clustering approach is adopted. 
Since the chromosomes with similar clustering attributes will 
form a cluster, their shapes of membership functions will be 
nearly the same, thus inducing about the same fuzzy values 
of large 1-itemsets. For each cluster, the chromosome which 
is the nearest to the cluster center is thus chosen as the 
representative and used to derive its fuzzy values of large 1-
itemsets. All chromosomes in the same cluster then use the 
fuzzy value of large 1-itemsets derived from the 
representative chromosome as their own. Finally, each 
chromosome is evaluated by this fuzzy value of large 1-
itemsets divided by its own suitability value. 
F. Genetic Operators 
Genetic operators are important to the success of specific 
GA applications. Two genetic operators, the max-min-
arithmetical (MMA) crossover proposed in [7] and the one-
point mutation, are used in the genetic fuzzy mining 
framework. The max-min-arithmetical (MMA) crossover 
operator will generate four candidate chromosomes from 
them. The best two chromosomes of the four candidates are 
then chosen as the offspring.  
The one-point mutation operator will add a random value 
? to the minimum support ?j in a chromosome. The newly 
derived minimum support will thus be changed to ?j + ?. A 
new fuzzy membership function will also be created by 
addition of a random value ? to the center or to the spread of 
an existing linguistic term, say Rjk. Assume that cjkp 
represents a parameter of Rjk, the parameter of the newly 
derived membership function may be changed to cjkp + ? by 
the mutation operation. Mutation at the fuzzy membership 
function may, however, disrupt the order of the resulting 
fuzzy membership functions. These fuzzy membership 
functions then need rearrangement according to their center 
values. 
III. THE PROPOSED CDGFMMS ALGORITHM 
The proposed cluster-based genetic-fuzzy mining 
algorithm with divide-and-conquer strategy for mining 
minimum supports, membership functions and fuzzy 
association rules is described below. 
 
INPUT: A body of n quantitative transactions, a set of m 
items, a parameter k for k-means clustering, a 
population size P, a crossover rate Pc, a mutation 
rate Pm, a crossover parameter d, a percentage p 
of required strength of fuzzy regions, a break 
threshold, an interval threshold, and a confidence 
threshold ?. 
OUTPUT: A set of fuzzy association rules with its 
associated set of minimum supports and 
membership functions. 
STEP 1: Generate m populations according to the 
initialization information derived by the 
clustering procedure stated in [5], each for an 
item; each individual in a population represents a 
possible minimum support and set of 
membership functions for that items.  
STEP 2: Calculate the coverage and overlap factors of each 
chromosome. These two factors are calculated 
using the formulas defined in Section III. 
STEP 3: Divide the chromosomes into k clusters by the k-
means clustering approach based on the 3+|Ij| 
attributes (coverage_factor, overlap_factor, 
minimum support and center1, center2, …, 
center|Ij| ), where |Ij| is the number of 
membership functions of item Ij; Find out the 
representative chromosome in each cluster, 
which is the nearest to the center. 
STEP 4: Calculate the requirement satisfaction of each 
representative chromosome by the following 
substeps. 
STEP 4.1: For each transaction datum Di, i = 1 to n, and 
for each item Ij, j = 1 to m, transfer the 
quantitative value vj(i) into a fuzzy set fj(i) 
represented as: 



	






+++
jl
i
jl
j
i
j
j
i
j
R
f
R
f
R
f )(
2
)(
2
1
)(
1 .... , 
using the corresponding membership 
functions represented by the chromosome, 
where Rjk is the k-th fuzzy region (term) of 
item Ij, fjl(i) is vj(i)’s fuzzy membership 
value in region Rjk, and l (= |Ij|) is the 
number of linguistic terms for Ij. 
STEP 4.2: For each item region Rjk, calculate its scalar 
cardinality on the transactions as follows: 

=
=
n
i
i
jkjk fcount
1
)( . 
STEP 4.3: For each Rjk , 1 ? j ? m and 1? k ? |Ij|, check 
whether its countjk is larger than or equal to 
the minimum support threshold ? which is 
encoded in chromosome. If Rjk satisfies the 
above condition, put it in the set of large 1-
itemsets (L1). That is: 
L1 = {Rjk | countjk ? ?, 1 ? j ? m and 1 ? k ? | Ij | }. 
STEP 4.4: Set the requirement satisfaction of each 
representative chromosome using the 
formulas defined in Section 3. 
STEP 5: Calculate the fitness value of each chromosome 
using the requirement satisfaction of its 
representative chromosome and the suitability 
value of its own. That is: 
534
)(
)(
)(
q
q
q CySuitabilit
CRS
Cf = . 
STEP 6: Execute the crossover operation on the population. 
STEP 7: Execute the mutation operation on the population. 
STEP 8: Calculate the fitness values of chromosomes by 
using STEPs 2 to 5. 
STEP 9: Using the selection operation to choose individuals 
in each population for the next generation. Any 
selection operation, such as the elitism selection 
strategy or the roulette selection strategy may be 
used here. 
STEP 10: If the termination criterion is not satisfied, go to 
Step 2; otherwise, do the next step. 
STEP 11: Get the sets of minimum supports and 
membership functions, each of which has the 
highest fitness value in its population. 
STEP 12: Mine fuzzy association rules from the given 
database using the sets of minimum supports and 
membership functions. The fuzzy mining algorithm 
proposed in [10] is then adopted to achieve this 
purpose. 
IV. EXPERIMENTAL RESULTS 
In this section, experiments were made to show the 
performance of the proposed approach. A Simulated datasets 
with 64 items and with 10000 transactions were used in the 
experiments. They were implemented in Java on a personal 
computer with Intel Pentium IV 3.20GHz and 512MB RAM. 
The initial population size P is set at 50, the crossover rate pc 
is set at 0.8, and the mutation rate pm is set at 0.001. The 
parameter d of the crossover operator is set at 0.35 according 
to Herrera et al.’s study [7]. The percentage of the required 
strength of fuzzy regions is set at 1.0.  
First, experiments were made to compare the fitness 
convergence between the proposed approach and DGFMMS 
approach [6]. After 500 generations, the results are shown in 
Figure 1.  
 
Figure 1.  The fitness convergences of the DGFMMS approach and the 
proposed approach with different number of clusters. 
From Figure 1, we can observe that both of them are 
converged after 500 generations. Besides, when the numbers 
of clusters are increasing, especially when it is larger than 20, 
the average fitness values of the proposed approach can 
achieve nearly the same quality as DGFMMS approach can. 
 The experiments were then made to show the speed up 
ratio of the proposed approach when comparing with 
DGFMMS. The results are shown in Figure 2. 
 
Figure 2.  The speedup ratio of the proposed approach with different 
number of clusters. 
From Figure 2, it shows the speedup ratio of DGFMMS 
to CDGFMMS in terms of the execution time by varying the 
number of clusters is from five to thirty. In summary, the 
proposed approach is thus efficient and effective. 
V. CONCLUSIONS AND FUTURE WORKS 
In this paper, we have proposed a Cluster-based Divide-
and-conquer Genetic-Fuzzy Approach with Multiple 
Minimum Supports (CDGFMMS) to speed up the evolution 
process of the approach, namely DGFMMS [6], for 
extracting multiple minimum supports, membership 
functions and fuzzy association rules from quantitative 
transactions. The proposed approach thus has two 
advantages: (1) The first one is that since the scanning 
database times are reduced, the evaluation cost can thus be 
greatly reduced due to the cluster-based time-saving process; 
(2) The second advantage is that although the clustering 
approach is utilized to estimate the fitness of each 
chromosome, the proposed approach (CDGFMMS) still can 
achieve similar results with the DGFMMS. Experimental 
results also show the efficiency and effectiveness of the 
proposed approach. In the future, we will continuously 
attempt to enhance the genetic-fuzzy mining framework for 
more complex problems. 
ACKNOWLEDGMENT 
This work was supported by National Science Council, Taiwan, 
under grant number NSC99-2218-E-032-005? and NSC99-2221-
E390-028. 
REFERENCES 
[1] J. Alcalá-Fdez, R. Alcalá, M.J. Gacto, F. Herrera, “Learning the 
membership function contexts for mining fuzzy association rules by 
using genetic algorithms,” Fuzzy Sets and Systems, Vol. 160, No. 7, 
pp. 905-921, 2009. 
535
[2] R. Alhajj, M. Kaya, “Multi-objective genetic algorithms based 
automated clustering for fuzzy association rules mining,” Journal of 
Intelligent Information Systems, Vol. 31, No. 3, pp. 243-264, 2008. 
[3] C. C. Chan and W. H. Au, “Mining fuzzy association rules,” The 
Conference on Information and Knowledge Management, Las Vegas, 
pp. 209-215, 1997. 
[4] C. H. Chen, T. P. Hong and Vincent S. Tseng, “A Modified Approach 
to Speed up Genetic-Fuzzy Data Mining with Divide-and-Conquer 
Strategy,” The IEEE Congress on Evolutionary Computation, pp. 1-6, 
2007. 
[5] C. H. Chen, T. P. Hong, Vincent S. Tseng and C. S. Lee, “A genetic-
fuzzy mining approach for items with multiple minimum supports,” 
Soft Computing, Vol. 13, No. 5, pp. 521-533, 2009. 
[6] C. H. Chen, T. P. Hong and Vincent S. Tseng, “An improved 
approach to find membership functions and multiple minimum 
supports in fuzzy data mining,” Expert Systems with Applications, 
Vol 36, No. 6, pp. 10016-10024, 2009. 
[7] F. Herrera, M. Lozano and J. L. Verdegay, “Fuzzy connectives based 
crossover operators to model genetic algorithms population 
diversity,” Fuzzy Sets and Systems, Vol. 92, No. 1, pp. 21-30, 1997. 
[8] T. P. Hong, C. H. Chen, Y. L. Wu and Y. C. Lee, “A GA-based fuzzy 
mining approach to achieve a trade-off between number of rules and 
suitability of membership functions,” Soft Computing, Vol. 10, No. 
11, pp. 1091-1101. 2006. 
[9] C. Kuok, A. Fu and M. Wong, “Mining fuzzy association rules in 
databases,” SIGMOD Record, Vol. 27, No. 1, pp. 41-46, 1998. 
[10] Y. C. Lee, T. P. Hong and W. Y. Lin, “Mining fuzzy association rules 
with multiple minimum supports using maximum constraints”, 
Lecture Notes in Computer Science, Vol. 3214, pp. 1283-1290, 2004. 
[11] J. B. McQueen, “Some Methods of Classification and Analysis of 
Mutivariate Observations,” Proceedings of the 5th Berkeley 
Symposium on Mathematical Satistics and Probability, pp. 281-297, 
1967. 
[12] William Siler and J. James, Fuzzy Expert Systems and Fuzzy 
Reasoning, John Wiley & Sons, 2004. 
[13] H. Zhang and D. Liu, Fuzzy Modeling and Fuzzy Control, Springer 
Verlag, 2006. 
 
536
