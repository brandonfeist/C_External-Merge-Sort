 
 
Sequential Sequence Mining Technique in Large Database of Gene Sequence  
Kiran Amin1, J. S. Shah2 
 
1Head, Department of Computer Engineering & Information Technology,, 
 U.. V. Patel College of Engineering, Gujarat, India  
E-mail:kiran.amin@ganpatuniversity.ac.in 
 
2J.S. Shah, Head, Department of Computer Engg., 
 L.D. College of Engineering, Gujarat, India  
E-mail:jssld@yahoo.co.in 
 
 
Abstract 
The Sequential Sequence Mining produces large gene 
sequence. It is important find out meaningful information 
from the huge data. It mostly depends on the cell as such 
the most of these processes are controlled by the gene 
expression. Sequential Sequence Mining technique is 
useful to find sequential relationships between genes. 
Many algorithms have been developed to associate the 
huge amount of gene sequence. This paper focuses on 
Sequential Sequence Mining algorithms to analyze large 
gene sequence. 
 
Keywords- Gene Sequence, Association Rule Mining, 
Sequential Sequence mining Sequence-A, Sequence-B. 
 
 
1. Introduction 
 
The GENE sequence is a fragment of DNA is having 
composition of one type of protein. Gene acts as the blue 
print for the proteins and some other products. These 
days, the various expression levels of large genes, mostly 
all genes in an organism, can be measured simultaneously 
in a single experiment using micro arrays. Sequential 
sequence technique is used to develop and analyze the 
gene sequence. 
The Sequential Sequence Mining technology enables 
to identify the long sequence which is responsible for the 
genetic causes of anomalies occurring in the functioning 
of the human body. It identifies the long sequence 
occurring repeatedly in human body.  
 
2. Association Rule Mining 
 
Association rule mining gives the interesting 
relationship among a large items[3]. If the rules satisfy 
the minimum support and minimum confidence 
threshold[2]. The association rule mining divides the 
problems into two parts[2]. First it finds the frequent item 
sets : Means  each item set is frequent if it satisfies 
minimum support[3]. Second it finds the strong 
association rules from the frequent item sets: Means these 
rules should satisfy minimum support and minimum 
confidence[4]. Many scans are required to find frequent 
sequence by using association rule mining. We may apply 
Apriori[1], FP-growth[5], Hashing have been found. 
They apply on gene sequence. This association rule 
mining algorithm finds the useful patterns from the 
biological sequence. Using this approach, one gene 
sequence is used to the induction of a serial of target gene 
sequences.  
Association rules mining algorithms are used to find 
gene expression in data. The several gene expression are 
scanned. These several association rule mining algorithms 
used to find related sequence. One of them is Apriori, is a 
segment of DNA, which contains the formula for the 
chemical composition of one particular protein. Genes 
serve as the blueprints for proteins and some additional 
products, and mRNA is the first intermediate during the 
production of any genetically encoded molecule. The 
concentration of a specific mRNA molecule is usually 
called the expression level of the respective gene and it 
serves as an indicator of the amount of end product that is 
currently being produced. Nowadays, the expression 
levels of thousands of genes, possibly all genes in an 
organism, can be measured simultaneously in a single 
experiment using microarrays. This new technology gives 
rise to a challenge: to interpret the meaning of this 
immense amount of biological information formatted in 
numerical matrices. To meet the challenge, various 
methods have been developed using both traditional and 
innovative techniques to extract, analyze and visualize 
gene expression data generated from DNA microarrays. 
A key step in the analysis of gene expression data is to 
find association and correlation relationship between gene 
expression patterns. 
2010 International Conference on Computational Intelligence and Communication Systems
978-0-7695-4254-6/10 $26.00 © 2010 IEEE
DOI 10.1109/CICN.2010.142
424
2010 International Conference on Computational Intel igence and Communication Networks
 
2.1. Apriory Algorithm 
 
Apriori Algorithm[7] The algorithm uses prior 
knowledge of frequent itemset properties such as such k-
itemsets are used to find k+1 sequence. It uses join step 
and prune step method to find the frequent sequence. First 
it finds L1 itemsets which is single itemsets. The L2 
itemsets are found by using L1 itemsets. Again L3 item 
sets are found by using L2 itemsets. Finally the frequent 
sequence is found by using Apriori Principle. 
 
3. Frequent Pattern growth Tree 
 
Frequent Pattern growth Tree mines the frequent 
item sets uses divide-and-conquer method. It performs on 
the tree and finds the frequent sets. The nodes are kept as 
in such a way that more frequently occurring nodes shares 
the frequently occurring item sets compare to less 
frequently occurring. It finds first frequent-1 item sets 
then frequent-2 itemsets like wise we may generate 
frequent–n item sets. It finds conditional frequent tree 
based on the subset of the database. This algorithm is 
divided in two phases.  First phase uses FP-tree. The FP-
tree growth method converts the problem of finding long 
frequent patterns searches for shorter ones recursively and 
then merging suffix.  
This method uses the least frequent items as a suffix. 
It reduces the search costs.  When the database is large, it 
is sometimes unrealistic to construct a main memory-base 
FP-tree.  
The performance study on FP-tree shows that it is 
efficient and scalable for mining both long and short 
frequent patterns.   
 
4. Partition 
 
Partition algorithm is based on the frequent sets are 
normally in very less number in the set of itemsets.  As a 
result the database is divided into various partitions such 
that each partition can be adjusted in main memory. This 
algorithm reduces the number of scanning of database.  It 
brings the partition in memory while scanning andcounts 
the number of items in that partition. The algorithm is 
implemented in two phases First phase logivally divides 
the database into number of non-overlapping partitions. 
The partitions are considered one at a time and all 
frequent itemsets for that partition are generated. Hence 
therefore if there are n partitions, n iteration are taken by 
Phase I of the algorithm. At the end of this phase, these 
frequent itemsets are merged together with a plan to 
generate the set of all potential frequent itemsets. In this 
step, the local frequent itemsets of  same lengths from all 
n partitions are combined to generate the candidate 
itemsets. The actual support of these itemsets is generated 
in Phase II and the frequent itemsets are found.  
During the first database scan, it finds all frequent 
itemsets in each partition and during the second scan, 
only those itemsets that are frequent in at least in one 
partition are used as candidates and counted to determine 
if they are large in the entire database. These algorithms 
may be performing better in main memory. 
 
5. Gene Sequence  
 
Gene Sequence allows the measurement of expression 
levels of large number of genes. It is important to extract 
biologically meaningful information from this huge 
amount of expression data to know the current state of the 
cell because most cellular processes are regulated by 
changes in gene expression. Association rule mining 
technique is useful to find association relationship 
between genes of various sequences. Many association 
rule mining algorithms have been developed to analyze 
and associate this huge amount of gene expression. Gene 
is a one component of DNA which contains the formula 
for the chemical composition of one particular protein.  
Genes works as the outline for proteins and some 
additional products, and mRNA[7] is the first 
intermediate during the production of any genetically 
encoded molecule. The specific mRNA molecule is 
usually called the expression level of the respective gene. 
It works as an indicator of the amount of end product that 
is currently being produced. At present, the expression 
levels of thousands of genes, possibly all genes in an 
organism, can be measured at same time in a single 
experiment using micro arrays. This new method gives 
increase toa a challenge to interpret the meaning of this 
immense amount of biological information formatted in 
numerical matrices. To gather the challenge, various 
methods have been developed. Gene expression data 
collected from DNA microarrays[7]. A key step in the 
analysis of gene expression data is to find association and 
correlation relationship between gene expression patterns 
using Microarray technology. The Microarray technology 
has authorized the scientific community to to explore the 
genetic causes occurred during functioning of the human 
body.  
 
5.1. Production of DNA Microarray 
 
Thousands of DNA mircoarrays are produced by 
dividing a glass or silica plate of 1 cm across into pixels. 
Each pixel is considered as one gene. The mRNA 
molecules are extracted from the cell taken from various 
tissues like cancer tissue. They are reverse copied from 
RNA to DNA and their focus is enhanced. Then the 
resulting DNA is copied back into fluorescently marked 
single strand RNA. The solution of marked and copy of 
425
the mRNA molecules that were originally extracted from 
the tissue is placed on the chip and labeled RNA diffuse 
over the dense forest of single strand DNA probes[7]. 
After finding molecules that found their perfect match 
remain fixed to the chip. This chip is illuminated with a 
laser, and those fixed targets fluoresce. By measuring the 
light radiating from each pixel, one obtains a measure of 
targets that stuck. It is proportional to the concentration of 
those mRNA in the investigated tissue. 
 
5.2. Advantages of Gene Expression Data 
 
The Gene Expression data helps the molecular 
biologists in many ways like, gathering information about 
different cell states, functioning of genes, identifying 
genes that reflect biological process of interest etc. The 
meanings of gene expression data analysis are given 
below[7]. 
x Finding biological expression of our interest like 
finding development of cancer cells 
x Various classification of groups of tumors with 
differentiated on the basis of their expression profiles. 
x Finding the function of genes or proteins. 
 
6. Using Sequential Sequence Mining 
 
The Large Gene sequence may be found using 
Sequential Sequence Mining techniques. This technique 
uses vertical fragment representation of the database with 
efficient support counting. It finds long sequences using 
generating sequence-A and Sequence-B sequences. The 
various sequences are generated by item adding the item 
at the end of the sequences. 
When the item is added at the end of the sequence, it 
becomes a Sequence-A, while the item is added at the end 
of last item set, such that item whose index is greater than 
the last itemset.  
In this method the customers’ transactions are shown 
by various fragments. The corresponding bit is set to 1 if 
the transaction it contains the last itemset in the sequence 
and previous transactions contain all previous itemsets in 
the sequence (i.e. the customer contains the sequence of 
itemsets) from a parent to as Sequence-A and Sequence-B. 
A Sequence-A requires that we set the first 1 in the 
current sequence’s fragment slice to 0 and all fragments 
afterward to 1 to indicate that the new item can only come 
in a transaction after the last transaction in the current 
sequence.  
 
 
6.1. The Absolute Support   
 
The absolute support of a sequence Kp in the sequence 
representation of a database D is defined as the number of 
sequences k ?  D that contain Kp , and the relative 
support is defined as the percentage of sequences k ?  D  
 
6.2. Generation of Sequences 
   
First the Customers’ data are sorted by Customer ID 
and then Transaction ID. First various Sequence-A and 
Sequence-B sequences are generated.  Various nodes are 
tested using Sequence-A and Sequence-B sequences. At 
each node n, the support of each Sequence-A and each 
Sequence-B is tested. If the support of a generated 
sequence s is greater than or equal to minSup then this 
sequence will be useful and stored as a frequent sequence.  
If the support of s is less than minSup, then we do not 
need to repeat the process on s by the Apriori principle 
since any child sequence generated from s will not be 
frequent.  
If we create the sequence by considering a tree then 
each sequence in tree generates Sequence-A sequences 
and Sequence-B sequences. Thus we can associate with 
each sequence n in the tree two sets:  The set of items that 
are considered for a Sequence-A extensions of sequence n 
(k-extensions) = Kn . and The set of  items that are 
considered for a Sequence-B extensions   = I n . 
Suppose the item elements are considered as  nodes of 
the tree then each element in the tree is generated only by 
either Sequence-A. The  sequence ( { p , q }, { q } ) is 
generated from sequence ( { p , q })  with Sequence    { q 
}. It can not generate from the sequence ( { p } , { q } ) or 
( { q } , { q } ).       
 
6.3. Pruning   
 
We can prune candidate k-extensions and i-extensions 
[10] of a node n in the tree. We use the pruning 
techniques based on Apriori principle and aimed at 
minimizing the size of  Kn and In at each node n.  
 
6.4. Fragment Representation 
 
We have used various fragments to represent the data. 
In the fragment map, each item in the transaction is set to 
1 if it appears otherwise the corresponding value is set to 
0. Suppose the item i is appearing in transaction x then 
the value of that bit is to be set to 1 for the transaction 
otherwise it is set to 0. Suppose the item i and item j are 
appearing in one transaction, for finding { i , j } we need 
to do bitwise AND operation among the transformed 
fragment of {i} and itemset {j}.  
 
6..5. Algorithm 
 
Input : D, a database of transactions 
Output : Frequent Sequences of database 
426
Method : 
1.Collect the information for customer's transaction from 
an input data file and stores into array.  
2.Initialize Number of Customers, Transactions, and 
Items. 
3.Store the Customer, Transactions and Items into array 
4. Increment customer count for new customer.  
Increment customer’s transaction count for same 
customer for different transaction. Increment item count 
for the same customer and different item. 
5.Read the information about CID, TID, IID from the 
array and put 1 to appropriate transaction in bit. 
6.Read the data and fill in transaction bits. 
7.Read the input file and finds the frequent-1 itemsets. 
8.Find the max number of transactions and number of 
customers & set minimum support.  
9.Finds the frequent  itemset.  
10.Do sequence-A and Sequence-B process on the current 
node. 
11.Find sequence-A sequence for the next node 
12.Create Sequence-B for the next node whose index is 
higher than current node. Check for the frequent item. If 
it is frequent then store it. 
13.Output index wise Sequence-A whose support is 
greater than min support threshold. 
 
 
       
         
 
 
 
7.0. Performance  
 
The Figure 1 and Figure 2 show the analysis of 
Sequential Sequence Mining. Figure 1 shows the 
Analysis Mining time for various customers. Figure 2 
shows the mining time taken with different support value. 
Here we made comparisons with Association Rule 
Mining and our results are found better for Gene 
Sequences.  
 
8.0. Conclusion 
 
Our algorithm which finds frequent sequences in Gene 
Sequences used as a transactions by using sequence-A 
and sequence-B sequences. The algorithm use fragment 
map and outperforms better compare to Apriori 
algorithm. Our algorithm generates the sequences with 
various lengths with efficient support count.  
 
References 
 
[1] R.Agrawal, T.Imielinki and A.Swami, “Mining association 
rules between set of item of large databases” in Proc. Of the 
ACM SIGMOD Intl’l Conf. on Management of data, 
Washington, D.C.,USA, 1993, pp 207-216. 
[2] R.Agrawal, R.Srikant, “Fast algorithms for mining 
association rules in large databases”. Proc. of 20th Int’l conf. on 
VLDB: 487-499, 1994. 
[3] C.Gyorodi, R.Gyorodi. “Mining Association rules in Large 
Databases”.Proc. of Oradea EMES’02: 45-50, Oradea, Romania, 
2002. 
[4] Agrawal R, Imielimski T, and Swami A. Mining association 
rules between sets of items in large databases. In proc. 1993 
ACM-SIGMOD int. Conf. Management of Data, Washington 
DC.207-216, May 1993 
 [5] J.Han, J.Pei, Y.Yin, “Mining Frequent Patterns without 
candidate generation”. Proc. Of ACM-SIGMOD, 2000. 
[6] S.Brin, R.Motawani, J.D.Ullman and S. Tsur, “Dynamic 
Itemset counting and implication rules for market basket data” 
in Proc. of the ACM SIGMOD Intl’l Conf. on Management of 
data, Tucson, Arizona, USA, 1997, pp. 255-264.World  
[7] M. Anandhavalli Gauthaman, “Analysis of DNA 
Microarray Data using Association Rules: A Selective 
Study”.World Academy of Science, Engineering and 
Technology 42 2008  
 [8] Nayaka, Akihiro, Hishigaki, Harutsugu and Morishita, 
Shinichi: In Proc. of Pacific Symposium on Biocomputing, 
pages 367-379, January 4-9, 2000. 
 [9] C.Gyorodi, R.Gyorodi, T.Cofeey & S.Holban – “Mining 
association rules using Dynamic FP-Trees” – in Proc. of The 
Irish signal and Systems Conference, University of Limerick, 
Limerick, Ireland, 30th June- 2nd July 2003, ISBN 0-9542973-1-
8, page 76-82. 
[10] Ayres, J., Gehrke, J., Yiu, T. and Flannick, J., “Sequential 
Pattern Mining using Bitmap Representation,” in Proc. of ACM 
SIGKDD’02, pp. 429–435, 2002. 
[11] Zaki, M., “Sequence Mining in Categorical Domains: 
Incorporating Constraints,” in Proc. of CIKM’00, pp. 422–429, 
2000. 
[12] Pei, J., Han, J. and Wang, W., “Mining Sequential Pattern 
with Constraints in Large Databases,” in Proc. Of CIKM’02, pp. 
18–25, 2002. 
Figure 1. Customers V/s Mining Time
0 
0.1
 
0.2 
0 2 4 6 8
No of Customers
 
M
in
in
g 
T
im
e 
in
 S
ec
 
427
