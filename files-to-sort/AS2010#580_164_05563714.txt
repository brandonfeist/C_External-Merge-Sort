A Novel Rule-based Intrusion Detection System Using Data Mining 
Lei Li, De-Zhang Yang, Fang-Cheng Shen 
School of Automation, Nanjing University of Posts and Telecommunications, 
Nanjing, China 
E-MAIL:dezhangyang@163.com 
Abstract-Network security is becoming an increasingly 
important issue, since the rapid development of the Internet. 
Network Intrusion Detection System (IDS), as the main 
security defending technique, is widely used against such 
malicious attacks. Data mining and machine learning 
technology has been extensively applied in network intrusion 
detection and prevention systems by discovering user behavior 
patterns from the network traffic data. Association rules and 
sequence rules are the main technique of data mining for 
intrusion detection. Considering the classical Apriori 
algorithm with bottleneck of frequent itemsets mining, we 
propose a Length-Decreasing Support to detect intrusion 
based on data mining, which is an improved Apriori algorithm. 
Experiment results indicate that the proposed method is 
efficient. 
Keywords-Intrusion Detection; Rule-based; 
Length-Decreasing Support; Association Rules; Data Mining; 
I. INTRODUCTION 
With the rapid development of electronics and 
information technology, computer network plays a 
significant role in our daily lives. However, more and more 
people use it as a tool for crime, and it has brought great 
losses to many companies and countries. So preventing 
these acts is on the top of our agenda. An intrusion into a 
computer system is any activity that violates system 
integrity, confidentiality, or data accessibility. In order to 
meet this challenge, Intrusion Detection System is being 
designed to protect the availability, confidentiality and 
integrity of critical networked information systems. [1,2,3] 
In the traditional IDS based on rule detection, 
intrusion mode is usually pre-defined by the security 
experts. The advantage of this approach is that the rules can 
be formulated to detect specific attacks in detail. Therefore, 
it is guaranteed to detect known attacks and produce few 
false alarms. However, facing with increasing and changing 
network data flow, it is unrealistic to discover various 
intrusion modes in time. The anomaly detection is presented 
due to this reason. New attacks can be detected in time 
which the system has never seen before as they deviated 
from normal behavior. However, current anomaly detection 
schemes still suffer from a high rate of false alarms. 
Therefore, currently IDS have many false alarms and 
redundancy alarms. As a result, understanding and handling 
IDS alarms become even more difficult. [4] 
Using data mining technology, some useful knowledge 
can be discovered from network data, and invasive behavior 
and normal behavior rule base can be established. Then we 
978-1-4244-5540-9/10/$26.00 ©2010 IEEE 
169 
can divide abnormal acts from much real-time data. The 
rule base can be updated automatically and be identified 
effectively. Accordingly, it effectively reduces the false 
alarm rate and redundancy rate. 
II. LENGTH-DECREASING SUPPORT 
Association rule mining is an effective data mining 
method, which can extract the database features of the 
relationship between the items. And the knowledge will be 
applied to intrusion detection. Mining association rules 
issue is that it finds a degree of support and confidence 
which is greater than user-specified minimum support S 
and the minimum confidence C . Apriori algorithm which is 
proposed by R. Agrawal and others is an influential 
algorithm for mining frequent itemsets for association 
rules. [5,6] 
However, a limitation of this algorithm for generating 
frequent patterns is that it uses a constant support value, 
irrespective of the length of the discovered patterns. In 
general, patterns that contain only a few items will tend to 
be interesting if they have a high support, whereas long 
patterns can still be interesting even if their supports are 
relatively small. Unfortunately, if constant-support-based 
frequent pattern discovery algorithms are used to find some 
of the longer but infrequent patterns, they will end up 
generating an exponentially large number of short patterns. 
In order to solve this problem, we introduce the idea of 
length-decreasing support constraint that helps us to find 
long patterns with low support as well as short patterns with 
high support. 
A length-decreasing support constraint is given as a 
non-increasing function f(l) of the pattern length 1. When 
the length of itemsets reaches the threshold value which is 
given by experts, the minimum support of these itemsets is 
constant S, which is no longer decreased. The maximum 
value of the support is f(l) , whose value is between 0 and 
1, and the minimum value of the support is f(max_length), 
whose value is S .  Therefore, the function f(l) 
satisfies S?f(l+I)?f(l)?J . 
Lemma 1 (smallest valid extension) Given 
itemsets x, y and their lengths are kx, ky. If X C Y and 
support(x)<f(kx) ,  then ky?j-l(support(x)) is essential 
before y potentially become the frequent itemset. 
Lemma 2 (reduce infrequent itemsets) Given itemset 
x whose lengths is kx and support(x)<f(kx). If the 
length of another itemsets y is ky and X (l Y = 0 , 
then the itemsets including itemset X may be frequent 
when kx+ky'?f
-1(support(x» y,8j 
III. RULE-BASED ALGORITHM WITH LENGTH DECREASING 
SUPPORT 
A. Principle of the Improvement 
Taking into account network actIvIty, many of 
intrusion or viruses are based on the variation of the 
original model. As we know, Red Code I and Red Code II 
are both worm which are attacks that propagate themselves 
through networks without any user intervention or 
interaction. They both use the flaw in Microsoft's Internet 
Information Services (lIS) Web server software. Code Red I 
cause the damage by defacing Web pages and by denying 
access to a specific Web site by sending it the massive 
amounts of data. Finally it will shut the web site down. This 
is known as a denial of service (DoS) attack. Code Red II is 
much more powerful and more damaging. The rules for 
SNORT to detect Code Red I and Code Red II are the 
following: 
Alert tcp any any -> any 80 (msg: "Code Red I 
Overflow"; content "12F646566 l756C74 2E696461 
3F4E4E4EI";)· 
Alert tcp any any -> any 80 (msg: "Code Red II 
Overflow"; content: "12F646566 1756C74 2E696461 
3F5858581";)· 
From above ,we can see that both of Code Red I and 
Code Red II include the same strings"2F646566 l756C74 
2E696461 ".We can consider the same strings as a known 
pattern. 
However, although the minimum support and 
confidence thresholds help to exclude a large number of 
uninteresting rules of exploration, but still will produce 
some rules which users are not interested in and exclude 
some interesting rules. It may lead to some false alarms and 
redundancy alarm. 
For the above reasons, we propose a rule-based 
algorithm with length decreasing support. It improve classic 
Apriori algorithm by adding a known signature sequence 
and length decreasing support to detect the derivative 
mvaSlOn. 
B. Algorithm in detail 
Our algorithm includes elements: database D, length 
decreasing support function f(k) , maximum length of 
itemsets max_ length, known-signatures, candidate itemsets 
C , frequent k-itemset Lk . To implement the 
improvement, combining with an instance, the algorithm is 
described as following steps: 
170 
Step 1: Scan the transaction database D to analysis 
the items of each transaction .If an item met for the first 
time, it will be added into the candidate l-itemset q and 
the count will be set 1. When the item has been in q 
already, its count will be added 1. Then scanning q is to 
select those itemsets whose support is bigger than the 
min-sup fO) calculated by length decreasing support 
function. Thus, we get the frequent l-itemset. Then the 
others whose supports are bigger than f(max_length) will 
be saved in CL . 
Table l' the transaction database D 
TID The list of item's id 
T1 iJ,i5 
T2 h,i5 
T3 iJ,i3,i5 
T4 i2,h,i4 
T5 it,i5 
T6 it i2 i3,4 
T7 h,4,i5 
T8 i2,i3,i5 
Table 2: candidate l-itemsets q 
itemset support 
i3 6 
i5 6 
it 4 
4 3 
i2 3 
We use elhptIcal functlOn as length decreasmg support 
function f(k). It is a non-increasing function, and it falls 
slowly at the beginning. We set f(k)=a*?I-b*k2 , f(I)=O.5, 
max_ length=3, f(max_length)=0.25 . We can figure out 
a="/351 28 ,  b=5/35. So f(k)=../351 28*?1-3/35*k2 and 
the graph of f(k) shows as Fig 1. Then minimal support 
of other length can be workout. We can 
get f(2)=0.42 , f(3)=0. 25 , f(4)=0. 25 . The support of 
l-itemset i3 , i5, q is bigger than fO)=0.5, so we can get 
Ll={i3,i5,id. Although supports of itemset i2, i4 are 
smaller than fO), they both are bigger than the minimal 
supportf(4)=0.25. 
",--------,------,-----,----,----.----,---,--------, 
" ?Iru 
" .?::? 
\_::, ':;, 
01 
02 
'J 00 " 1 
.... 
Fig 1: decreasing function 
Using lemma 1, we can get the minimal length of 
itemset i2, i4 is 3. So we add them into a = {?(3),i 3)} . 
Step 2: Candidate 2-itemsets will be generated using 
Ll. We can get a2 = {i]i3,i]iS,i3is} . The minimal support 
of 2-itemsets is 1(2)=0.42 , so the frequent 2-itmesets 
L2 = {i3iS}' The supports of the other candidate itemsets 
i]i3,i]iS are bigger than the minimal support, so add them into 
CL. Using lemma 1, we can get the minimal length of 
itemset ili3,ili5 is 3. Using l-itemsets in CL, we can get 
CL2 = { i2i4} ' We also can know that the minimal length of 
itemset i 4 is 3, so add it into CL . We can get 
a = {i2(3),i 3)Ai3(3).itis(3)hi 3)} . 
Step3: Combining Ll and L2' we can get CL3. We 
find itemsets meet the minimal support of 3-itemsets 
? ={i]i3is}. Then, combining Lk and itemsets in a 
whose minimal length is 3, we can get CL3. Using lemma 
2, we could obtain new frequent itemsets i2i3i4 and add it 
into L3. In the mean time, delete itemsets in CL who has 
been added to L3. 
Step4: Generating CL4 as above mentioned, we find 
no frequent 4-itemsets. So all frequent itemsets 
are {Ll,L2,L3} . 
From above, we can see that i2, i4 are not frequent 
items. However, those transactions shouldn't be ignored. 
With the length increasing, i2i3i4 become a frequent 
itemset. 
IV. EXPERIMENT RESULTS 
The experiment was tested on a Intel Core(TM)2 Duo 
Processor 2.1 GHZ with 2048 RAM running Window XP. 
17 1 
To evaluate the effectiveness of our improved Apriori, we 
use DARPA 1999 datasets as the testing data. In our 
experiments, the first two weeks' data are used as training 
data: the first week's data don't contain any attack and the 
second week's data contain 43 attack instances. By using 
known-signatures, those attacks are divided into 18 types. [9] 
In Fig 2, the length of known-signatures 
is Len. Len = 2 .Size of database is 5Mbytes. 
Fig.2 tells us that Apriori consumes much time to scan 
database. However, many of them are not useful for 
detecting intrusion. And we use Ll°oLk-l and LiooCL to 
generate CLk. We can know that our algorithm is faster 
than Apriori algorithm except the 2 - itemsets, because our 
algorithm should do pattern matching with the known 
signatures. With the length of itemset increasing, 
LDSApriori algorithm consumes less time than the classic 
Apriori algorithm. 
oo,--------,---,-,--,------,---,-,--,-?
70 
// .. ,. 
,/ ,/i 
,/ 
'en?h d freqlErt ?em1 
.,? 
,/
,D"
'" 
Fig.2 Different items of consumption-time comparison 
In Fig 3, we use function l(k)=a*?I-b*k2 to calculate 
decreasing support. Size of database is 10Mbytes. The 
max _length is 4. 
0.1 0.2 0.3 0.11 0.5 06 0.7 0.8 09 
F"'Pusibil)1"/? 
Fig.3 Different items of detection rate 
From Fig 3, the results shows that the use of 
algorithms with a decreasing support LDSApriori has a 
higher precision than the Apriori algorithm in detection. 
Under the same detection rate, LDSApriori algorithm has a 
lower false alarm rate. During the trial, we also found that 
the use of a shorter characteristic curve, the detection rate is 
higher than long characteristic curve. In network activity, 
the short signature is more frequent in data flow. But it 
results in higher false alarm rate. 
V. CONCLUSIONS 
In this paper, we present a rule-based algorithm with 
decreasing support. It uses the known patterns to detect the 
unauthorized behavior attacks. By adding length decreasing 
support, it reduces the generation of a short pattern 
effectively and avoids ignoring the itemsets with low 
support which is interesting in the event. This algorithm has 
lower consumption of time and lower false alarm rate on 
the detection rate. 
ACKNOWLEDGMENTS 
This work is supported in part by the National Natural 
Science Foundation of China (Grant Nos: 10371106, 
10471114), Natural Science Foundation ofJiangsu Province 
(Grant Nos: 04KJB 11 0097, 08KJB520023) and the 
Climbing Plan of Nanjing University of Post and 
Telecommunications (Grant No: NY207064). 
REFERENCES 
[I] Guangjun Song, Zhenlong Sun, Xiaoye Li, "The Research of 
Association Rules Mining and Application in Intrusion Alerts 
Analysis", Second International Conference on Innovative 
Computing, Infonnatio and Control (ICICIC 2007),pp.567, 2007. 
[2] Zhan Jiuhua, "Intrusion Detection System Based on Data Mining", 
First International Workshop on Knowledge Discovery and Data 
Mining (WKDD 2008), pp.402-405, 2008. 
[3] Ya-Li Ding, Lei Li, Hong-Qi Luo, "A NOVEL SIGNATUR 
SEARCHING FOR INTRUSION DETECTION SYSTEM USING 
DATA MINING", Machine Learning and Cybernetics, 2009 
International Conference on Volume I, pp.l22 - 126, 2009. 
[4] Hu Zhengbing, Li Zhitang, Wu Junqi, "A novel network intrusion 
detection (NIDS) based on signatures search of data mining" , 2008 
Workshop on Knowledge Discovery and Data Mining,pp.lO-16, 
2008. 
[5] Wang, Q. and V. Megalooikonomou. " A clustering algorithm for 
intrusion detection. in SPIE Conference on Data Mining " , 
Intrusion Detection, Infonnation Assurance, and Data Networks 
Security. 2005. Orlando, Florida, USA. 
[6] Jiawei Han Micheline Kamber, " Data Mining Concepts and 
Techniques " , Second Edition. 
[7] Masakazu Seno, George Karypis, " Finding Frequent Patterns Using 
Length-Decreasing Support Constraints", Data Mining and 
Knowledge Discovery, pp.197-228, 2005. 
[8] Unil Yun, "An efficient mining of weighted frequent patterns with 
length decreasing support constraints" , Knowledge-Based Systems 
archive Volume 21 , Issue 8 (December 2008) table of contents , 
pp.74l-752, 2008. 
[9] KDD (1999), the third international knowledge discovery and data 
mining tools competition data set (KDD99 Cup). 
172 
