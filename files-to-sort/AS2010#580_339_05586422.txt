Generalized Rule Extraction and Traffic Prediction in the Optimal
Route Search
Huiyu Zhou, Shingo Mabu, MemberIEEE, Xianneng Li, Kaoru Shimada, MemberIEEE and Kotaro Hirasawa,
MemberIEEE
Abstract— Time Related Association rule mining is a kind of
sequence pattern mining for sequential databases. In this paper,
a method of Generalized Association Rule Mining using Genetic
Network Programming (GNP) with MBFP(Multi-Branch and
Full-Pathes) processing mechanism has been introduced in
order to find time related sequential rules more efficiently.
GNP represents solutions as directed graph structures, thus has
compact structure and partially observable Markov decision
process. GNP has been applied to generate time related can-
didate association rules as a tool using the database consisting
of a large number of time related attributes. The aim of this
algorithm is to better handle association rule extraction from
the databases in a variety of time-related applications, especially
in the traffic volume prediction and its usage. The generalized
algorithm which can find the important time related association
rules has been proposed and experimental results are presented
considering how to use the rules to predict the future traffic
volume and also how to use the traffic prediction in the optimal
search problem.
I. INTRODUCTION
Currently available vast amount of traffic data are recorded
using various components of the intelligent transportation
system(ITS) [1]. Satellite-based automatic vehicle location
technologies such as Global Positioning System (GPS) or
cellular phones can determine vehicle positions at frequent
time intervals. These equipments collect information about
the vehicle positions and speeds, which are archived in large
amount of databases, enabling further analysis of the data
about the traffic situations such as traffic volume patterns.
Searching for the pattern is a process for obtaining as-
sociations where the occurrence of one event is related to
other events. The association rule mining method, i.e., one
of the most popular data mining methods with a wide range
of applications is used in the proposed mechanism aiming
at discovering association relations or correlations among
attributes encoded within a database [2].
For example, “If Section S on the traffic map has high
traffic volume, then Section D also has high traffic volume.”
is a typical relationship that we will obtain using the normal
data mining methods, however, in dynamic systems with
sequential datasets, we are more interested in the sequential
association patterns such as “If Section S on the traffic map
has high traffic volume at time t, then Section D also has
high traffic volume 10 time units later.”
In order to extract these sequential association patterns
in the time-related databases and represent at what time the
Graduate School of Information, Production and Systems, Waseda
University; Email: zhy836@toki.waseda.jp; mabu@aoni.waseda.jp; sen-
nou@asagi.waseda.jp; k.shimada@aoni.waseda.jp; hirasawa@waseda.jp
event will happen or how long the event will persist, we have
already proposed a method of time-related association rule
mining [3] using Genetic Network Programming (GNP) to
improve the efficiency and effectiveness of the rule extraction
in time related databases. But, in this paper, we generalized
the original time-related association rule mining in terms
of Multi-Branch and Full-Pathes(MBFP), where there are a
good number of branches in the judgement nodes and every
possible combination of the Multiple branches are studied
simultaneously.
The most famous model in the association rule mining
is Apriori algorithm, in which Agrawal et al proposed the
support-confidence framework [4]. However, Apriori algo-
rithm may suffer from large computational complexity when
extracting rules from dense databases. Many approaches have
been proposed to extract association information in various
directions, including efficient apriori-like mining methods
[5], [6].
Genetic Algorithm(GA) [7],[8], proposed by J.H. Holland,
has also been applied to data mining research in order to deal
with dense databases. However, because a rule is represented
as an individual or part of an individual of GA, it is hard
for them to give us a complete picture of the underlying
relationships in problem domains, thus it is not easy to extract
enough number of association rules.
Unlike other methods mentioned above, the main task of
GNP-based data mining is to allow the GNP individuals to
self-evolve and extract association rules as many as possible.
What’s more, it uses evolved individuals(directed graphs of
GNP) just as a tool to extract candidate association rules.
Thus, the structure of GNP individuals does not necessarily
represent the association relations of the database. As a
result, the structures of GNP individuals are less restricted
than the structures of GA, and GNP-based data mining
becomes capable of producing a large number of association
rules.
The basic feature of the proposed mechanism is like the
following:
• The GNP structure of rule representation is generalized
to multiple branches, and Multi-Branches and Full-
Paths(MBFP) with Transition Route Memory(TRM)
searching mechanisms are used to find all the potential
combinations of the attributes using GNP, which can
improve the efficiency of the proposed method.
• The database is time-related considering the real-time
factor. Thus, the process of searching the data for cal-
culating the confidence, support and chi-squared value
978-1-4244-8126-2/10/$26.00 ©2010 IEEE
is two dimensional search.
• A simple classification mechanism is combined with the
rule extraction system, thus the time related rules can
be used to predict the future traffic volume on the traffic
networks.
• Another feature of the proposed method is that it can
predict not only the traffic jam of a specific section on
the road networks, but also can predict the low, middle
and high traffic volume of all of the sections on the road
network, which might be useful in future applications.
• Prediction result is used to help developing a more
efficient optimal route search of Q-value based optimal
route algorithm[9] studying a simple simulator.
II. GENERALIZED TIME RELATED ASSOCIATION RULE
MINING USING GNP
The whole procedure of the proposed algorithm is like
Fig.1. The first step is the time related class association rule
extraction step based on the attribute set and its class type to
extract the rules from the time related database. In the rule
extraction procedure, two kinds of iterations are included,
i.e., the outer iteration represents the class association rule
mining, which means to extract the class rules for all the con-
sequent attributes with Attribute Accumulation Algorithm[3],
while the inner iteration represents the basic procedure of
the time related data mining, which uses Generalized GNP
individuals with MBFP-TRM to generate the candidate rules,
then calculate the support, confidence and chi-squared values
of the candidate rules based on the time related databases.
Multi-Branches and
Full-Paths(MBFP-TRM)
Tim e Related
Class Association
Rule Extraction
Class Type
Attribute Set
Classification
Prediction Result Q-value based Optim al
route Algorithm
Com bine
Im proved Optim al
Route
Fig. 1. Basic steps of proposed algorithm
The second step is the classification stage in which the
extracted rules are used to predict the future traffic using
the degree of matching between data and antecedent part
of the rules in each class, and the class with the highest
degree of matching will be selected. The selected class is
the classification result. If the classification result is the same
as the actual traffic, then the prediction is correct, otherwise
incorrect, and the accuracy of the prediction can be obtained
in this way.
The final step is to combine the traffic prediction with the
Q-value based optimal route algorithm, while the prediction
result can give a more accurate future traffic estimation for
the optimal route algorithm thus shorter traveling algorithm
can be obtained by the proposed method.
III. GENETIC NETWORK PROGRAMMING(GNP)
In this section, Genetic Network Programming(GNP) is
briefly reviewed [10],[11]. GNP is a sort of evolutionary
optimization technique, which evolves arbitrary directed
graph programs as solutions(individuals). Because of the
strong expression ability of the directed graph structures,
GNP can realize the partially observable Markov decision
process.
The basic expression of GNP node is shown in Fig.2. This
describes the gene of node i, then the set of these genes
represents the genotype of GNP individuals. NTi describe
the node type, NTi = 0 means node i is a start node, NTi
= 1 represents node i is one of judgment nodes and NTi =
2 represents node i is one of the processing nodes. IDi is
an identification number, for example, NTi = 1 and IDi = 1
means node i is J1(Judgment node with ID 1). Ci1, Ci2,...,
denote the nodes connected from node i. di j is the transition
time from node i to node Ci j.
:StartN ode
:Processing N ode
:Judgm entN ode
N Ti ID i C i1 di1 C ij dij......
connection
gene
node i
0,0 1,#N ode 0:
2,1 2,3N ode 1:
1,2 3,1 4,2N ode 2:
1 ,3 4,3N ode 3:
1 ,4N ode 4:
Start:0
1 3
2
P1
J2
J3
J4
D irected G raph
4
node
gene
1
2
3
3
#
#,1,2,3...:Transition Tim e ofeach
connection
1
1
1
1,1
2,1 3,1
Fig. 2. Gene structure of GNP node
A. Structure of Database
The database is time series-based, i.e., the tuples in the
time series database represent the time point instead of
the transaction as shown in Table 1. TimeID in Table 1
represents the time point, it can be one second, one minute,
one hour or even one episode and so on, thus, its concrete
meaning is related to the concrete problem to solve. For
example, attribute A1 and A2 correspond to the sections
named A1 and A2 respectively on the road networks, and
one time unit can represent half an hour during a day in the
time related database, thus, each data represents how many
vehicles there are for each section at every half an hour.
According to the range of the continuous values of sec-
tion attribute Ai, we divide the continuous values to three
categories, i.e., Low,Middle and High. Supposing that the
data is within the range of [0,10], and Middle threshold is
4 and High threshold is 7, then, section Ai = 5 is ranked as
Ai ?Middle, i.e., the data of Ai is now M. The L, M and H
represent the Low,Middle and High values respectively, as
shown in Table 1.
TABLE I
DATABASE STRUCTURE
Time ID A1 A2 A3
0001 H M H
0002 M M M
0003 H L M
0004 L H L
Range: [0, 10]; Middle threshold=4; High threshold=7;
B. Time Related Class Association Rule
The following is a formal statement of the problem of
mining association rules. Let A = {A1, A2, . . . , Ak} be a set
of items or attributes, i.e., it can represent each section on
the traffic networks in the traffic volume prediction problem.
Let G be the total number of time points in the time
related traffic volume database. Each time point is associated
with a unique identifier whose set is called TimeID. Let
D={D1,D2, . . . ,Dk} be a set of time points of the event
occurrence of the corresponding attribute, i.e., if the event
of attribute Ai occurs at time point 3, then Di is denoted as
Di = 3.
Definition 1: Time Related Attribute: The set of time re-
lated attribute Ai is defined as At ={A1(D1), A2(D2), . . . , Ak(Dk)},
where Dk is the time point when the event of Ak occurs,
Ak ? A and Dk ? D.
The continuous value of the time related database has been
already discretized to three different levels: Low,Middle and
High (briefly, L,M and H). In general, a set of items in At
with its corresponding value level is called time transition.
The time transition is now defined as follows:
Definition 2: Time Transition: Time related attribute set
At with its corresponding Low/Middle/High level is defined
as time transition TT={A1(V1)(D1), A2(V2)(D2), . . . , Ak(Vk)(Dk)},
where
Vk ? V = {Low,Middle,High}, Ak ? A and Dk ? D.
Definition 3: Sub Time Transition: Time transition S TT
is called a sub time transition of time transition TT , if and
only if its time transition constitutes a sub set starting from
the first element of TT .
Let Ai(?)(t=p) be an attribute in a database at time p and its
value is 1 or 0. Ai(?) represents Ai(Low)/Ai(Mid)/Ai(High).
The time related class association rule mining extracts the
following association rules:
(Aj(?)(t = p) = 1) ? . . . ? (Ak(?)(t = q) = 1)
? (Ac(?)(t = r) = 1),
where (Ac(?)(t = r) = 1) indicates the class consequent
attribute.
Here, p ? q ? r, and the first t always equal 0 and other
time points are the relative time shifts from the first attribute.
C. Generalized GNP Mining with MBFP-TRM
As a natural extension of the previously proposed method
[3], [12], a route with n attributes(user-defined) starting from
the processing node is used as the possible antecedent parts,
and it is combined with the current consequent class in the
Consequent Table(CT )[3] to generate the time transitions.
As shown in Fig. 3, there are three kinds of connections
corresponding to Low/Middle/High in every judgement node
of GNP individuals. This structure is called Generalized
GNP, which can generate candidate rules more efficiently.
The conventional method also uses the generalized GNP
for the traffic prediction, however, it is not efficient and does
not utilize the potential reusability of the directed graph
structure completely, thus more efficient method has been
proposed here to obtain all the possible combinations of
n judgment nodes starting from the processing node using
MBFP method.
The conventional method is in fact Transition Route
Searching mechanism(TRS) based method, which means
first determines the route of transitions using Generalized
GNP structure, then, carry out the searching according to
the concrete data in the database using two-dimensional
search[3]. Actually, TRS method just explores one possible
time transition starting from the processing node, while there
could have 3n?1 possible time transitions with the length of
n.
Although MBFP attempts to record the counts for all
the possible time transitions from one processing node[3],
a problem emerges as shown in Fig.3, where there are
two different time transitions from P1 to C(Low) such
as ?=A(Low)0, C(Low)t1 and ?=A(High)0, D(Middle)t1 ,
C(Low)(t1+t3). They both go through the C(Low) connection,
thus, the count of C(Low) in Fig.3 will be confused with
each other due to different time transitions. Here, attributes
are denoted by A, B, C and so on. The problem is which
time transition this count corresponds to?
Simple memory structure to record the passed sub time
transitions and their corresponding counts can solve the
problem, however, at the expense of huge overlap checking
during the searching. Therefore, a counting structure of Time
Transition tree(TT tree) is proposed, which indicates all the
possible time transitions starting from one processing node
as a tree structure(Fig.3). The same C node in Generalized
GNP structure now becomes located in different time transi-
tions, hence the counts can be recorded correctly without
remembering the history of the passing routes. Traveling
through the tree to any of the nodes will automatically give
the information of the passed routes, and also, the counts for
different time transitions can be stored separately.
TT tree is just a temporary searching structure for rule
extraction, and after all the counts are recorded, and impor-
tance criteria are evaluated, it can be destroyed immediately.
Individuals are encoded using GNP structure, while GNP
can generate a variety of different TT trees for different
processing nodes.
In order to further improve MBFP algorithm, instead
BA
D
C
C
CE
E
F
A
C
A
A
t1
t3
t3
t2
t2
t1
t2
t1
t3
t1,t2,t3,...:Tim e D elay
C ount?
A C
B
D
F
E
A
Pi
t1
t1
t1
G eneralized
G N P
Tim eTransition
tree
t2 t3
t2
t2
t3
t3
:Low
:M iddle
:H igh
:Tim e Transition ?
:Tim e Transition ?
Fig. 3. Generalized GNP with Time Transition Tree
of using the ”time transition ? database” thinking logic,
a backwards structure is proposed like ”database ? time
transition”.
This is a Transition Route Memory(TRM) mechanism,
which means that the concrete transitions of the attributes
in GNP are determined using the database. In other words,
”What is the value of the attribute?” type judgement nodes
are used in MBFP-TRM.
For example, as shown in Fig.4, given a TT tree by GNP
structure, first attribute A is checked at time point 0000, and
since its value is M, the middle connection of TT tree is
selected, the count a is increased by 1.0 and the next attribute
becomes attribute B by GNP structure. Since the value of B
at 0001 is L after 1 time delay, the Low connection is chosen,
the count c increases by 1.0 and the next attribute becomes
C at 2 time units later using GNP structure, likewise.
This is a typical example of building the tree transition
based on the GNP structure and database, where its cor-
responding counts are recorded for evaluating the rules by
calculating support, confidence and the chi-squared value.
After building the time transitions starting from 0000, the
time transition starting from 0001 will be checked in the
same way. We should notice that time transition starting from
0001 is different from the time transition starting from 0000
because of the different attribute values of the database.
After building and checking all the time transitions starting
from all the time points using the TT tree, if some of the
time transitions in the TT tree do not appear in the database,
then, their corresponding counts will be automatically zero.
When using TRS based MBFP mechanism only one time
transition and its sub time transitions are checked during
one turn of the database check, so if we use TRS based
approach, 3n?1 turns of database searching is necessary
for one processing node, where n is the user-defined time
transition length.
When using TRM based MBFP mechanism, all of the
possible combinations of the time transitions can be checked
by only one database searching, which saves the calculation
time and the efficiency of the data mining is improved
dramatically.
B
A
D
C
C
CE
E
F
A
C
A
A
1 1
1
Tim e Transition
tree (TT tree)
2 3
2
2 3
3
Tim e Unit A B C D E F
0000 M H L M M H
0001 M L M L L M
0002 H M L M M M
0003 M H M L M H
0004 L L M H H M
0005 M L L M H H
0006 M M M M M H
0007 H H L L M M
1,2,3,...:Tim e D elay
:Low :M iddle :H igh
: Tim e Transition 0000 : Tim e Transition 0001
: C hecking Positiona,b,c,...: R ecord C ount
a
b
c
Fig. 4. MBFP-TRM mechanism
After only one turn of the database searching, the counts
for all the possible time transitions and all of their sub time
transitions can be automatically obtained, as a result, the
support, confidence and chi-squared value can be calculated
for the candidate rules and sub candidate rules. If the criteria
are higher than their thresholds, then, the time transitions
becomes association rules and will be stored in a rule pool
through the generations.
D. Fitness Function and Genetic Operators
The proposed method regards the rules containing many
different attributes as important ones in addition to the
conventional interest. Therefore, the fitness function of the
GNP individual is defined by:
F =
?
r?R
{?2(r) + 10(nante(r) ? 1) + ?new(r) + ?mult(r)}.
The symbols are as follows:
R : set of suffixes of important association rules which
satisfy the importance requirements of support,
confidence and chi-squared value.
?2(r) : chi-squared value of rule r.
nante(r) : the number of attributes in the antecedent of
rule r.
?new(r) : constant defined by
?new(r) =
{
?new, if rule r is new
0, otherwise
?mult(r) : constant defined by
?mult(r) =
?????????
?mult, if rule r has many
different attributes
0, otherwise
?2(r), nante(r), ?new(r) and ?mult(r) are concerned with
the importance, complexity, novelty and diversity of rule
r, respectively. In each generation, GNP individuals are
replaced with the new ones by the selection policy and other
genetic operations. We used four kinds of genetic operators,
i.e., uniform crossover, mutation of functions, mutation of
connections and mutation of time delays of judgement nodes,
respectively.
E. Classification
Firstly, classify the extracted association rules in the pool
into consequent attribute classes. Every attribute has three
consequent attribute classes, i.e., attribute Ai is classified
into the following consequent attributes, Ai(Low), Ai(Mid),
Ai(High).
Then, the association rules in each class are used to study
whether the testing data satisfies the antecedent items of the
rules. The testing data are called satisfied if they satisfy the
antecedent items of the rules.
The ratio of the number of satisfied rules to the total
number of rules for every class is calculated considering
confidence, and the testing data is classified into the class
whose ratio is the highest.
The concrete process is like the following:
(1) Calculate Rk: Calculate the set Rk of the suffixes of
the rules in class k, whose antecedent items satisfy the
testing data.
(2) Calculate Creditk for every class:
Creditk =
?
r?Rk
con f idencer, (1)
(3) Calculate S corek for every class:
S corek =
Creditk
Totalk
, (2)
where, Totalk is the total number of rules in class k,
that is, the fixed number of N f in this paper.
(4) Compare the S corek and the class with the highest
score becomes the winner for the testing data.
IV. SIMULATION
In this section, the effectiveness and efficiency of the
proposed method are studied by a simple traffic simulation.
Unlike other methods in the traffic prediction of recent years,
the proposed method not only aims at predicting the traffic
jam on a specific section of the road networks, but also,
it is interested in providing the whole traffic prediction
for all of the sections on the road networks so that the
navigation system can refer to this kind of information for
the calculation of the Optimal Route.
In order to testify the effectiveness of the obtained rules,
a simple traffic prediction method is combined with the Q-
value based optimal route mechanism, and the effectiveness
of the proposed method has been studied using the simple
simulator.
A. Traffic Simulator
Each section between two intersections in the road net-
works has two directions, and we assume each direction
of the section represents different literals, i.e., items or
attributes. The traffic simulator used in our simulations
consists of the road model with 7 × 7 roads like Fig.5, i.e.,
each section has the same length, all cars have the same
speed for simplicity, and the shape of the total road is like a
grid network. Time shift in road setting in Fig.5 represents
the time delay of the traffic lights between neighboring
intersections.
#N 1 #N 2 #N 3 #N 4 #N 5 #N 6 #N 7
#S1 #S2 #S3 #S4 #S5 #S6 #S7
#W 2
#W 1
#W 3
#W 4
#W 5
#W 6
#W 7
#E2
#E1
#E3
#E4
#E5
#E6
#E7
:representcar #** : term inalintersection
:representsection from intersection W 2N 4 to W 2N 5
:representsection from intersection W 2N 5 to W 2N 4
:representintersection W 3N 3
R oad Setting
M axim um
num berof
cars
10 cars per
section
C ararrival
distribution
exponential
distribution
R ed
traffic light
10 tim e
units
G reen
traffic light 7 tim e units
Yelow
traffic light 3 tim e units
Tim e shift 10 tim e
units
Fig. 5. Road model used in simulations
TABLE II
PARAMETER SETTING FOR EVOLUTION
Items Values
Number of judgment nodes 100
Number of processing nodes 10
Number of attributes 224
Number of attributes including classes 672
Number of time units 800
Number of generations per round 100
Minimum support value 0.1
Minimum confidence value 0.8
Minimum chi-squared value 6.63
The parameter setting of the proposed data mining is
shown in Table II. The attributes correspond to the judg-
ment node functions, for example, the class of the attribute
”“W4N6,W4N7(Low)” can be interpreted in such a way that
the section named”W4N6,W4N7” has low traffic volume.
B. Optimal Route Algorithm
In order to use more realistic traffic data for generalized
association rule mining, the Q-value based optimal routing
algorithm is adopted[9]. Fig.6 shows the procedures on how
the optimal route is calculated and updated by using the Q
values.
The detailed steps are as follows:
1) Initialize the traveling time of all sections.
ti j = di j/?a, (13)
Initialize:
tij=dij/ a
Q value Calculation:
Foreach destination d,
recursively calculate Q d(i,j)of
each pairofsections using tij.
O ptim alR oute:
Find the optim alroute
using Boltzm an D istribution
Update tij
N
C alculation ofTij(t):
C alculate the average
traveling tim e overal
sections.
Y
T>threshold
t=t+1
C alculate D ifference:
T= [[Tij(t)-Tij(t-1)]
Fig. 6. Optimal route calculation with Q values
where,
ti j: the the traveling time from intersection i to
intersection j,
di j: distance from intersection i to intersection j,
?a: average speed of cars.
2) For each destination d, Q values of all of the
intersection pairs can be obtained by iterating the
following equation:
Qmd (i, j)?? ti j +mink?A( j) Qm?1d ( j, k),
Qd(i, j) = limm?inf Qmd (i, j),
where,
A( j): set of suffixes of intersections directly
movable from intersection j,
Qd(i, j): optimal traveling time to destination
d, when the car bound for destination
d moves to intersection j
at intersection i.
Qmd (i, j): Qd(i, j) in the mth iteration.
3) The following probability Pd(i, j) using Qd(i, j) is used
to navigate the car bound for destination d.
Pd(i, j) = e
? Qd (i, j)??
j?A(i) e?
Qd (i, j)
?
, (16)
where,
?: temperature constant, ? =10 is used.
Pd(i, j): probability for the car bound for destination d
to move to intersection j at intersection i as the next
intersection.
4) Calculate the average traveling time difference ?T
between the current time and one step previous time
over all sections.
5) When exceeds the threshold ?T , revise ti j and go back
to step 2, else go back to step 4, ?T = 10000 is used
in the simulation.
C. Efficiency for Rule Extraction
In this simulation, the number of rules stored in the rule
pool is compared between the proposed Generalized GNP
with Multi-Branches and Full-Paths(MBFP) and Conven-
tional GNP. Each round has the same number of generations
of 50 and the chosen set size for AAM is 100 [3], [12].
0
20000
40000
60000
80000
100000
0 500 1000 1500
Rounds
A
ve
ra
ge
 N
u
m
be
r o
f E
xt
ra
c
te
d
R
ul
e
s
Conventional m ethod
Generalized GNP with M BFP
Fig. 7. Comparison of the total number of rules extracted.
Fig.7 shows the total number of rules obtained in the
rule pool versus round number [3], [12]. In the conventional
method, GNP individuals have only the Yes-side connection,
while Generalized GNP individuals have multi-branches like
Fig.3. We can see from Fig.7 that the proposed MBFP
method can extract important class association rules more
efficiently, when compared with the conventional one.
0
20
40
60
80
100
A
ve
ra
ge
 n
u
m
be
r o
f r
u
le
s
e
x
tr
a
c
te
d 
pe
r 
R
o
u
n
d
Conventional m ethod Generalized GNP with M BFP
Fig. 8. Comparison of the average number of rules extracted per round.
Since all the possible time transitions are explored, a
comparative high average number of rules can be obtained
in MBFP algorithm. As a result, it is found from Fig.8 that
the proposed MBFP method shows the high efficiency of
the extraction, and a proper number of rules are obtained
efficiently.
D. Self-decrease Criteria
Like the conventional method [3], [12], when there do
not exist enough number of association rules satisfying the
current criteria, the thresholds for evaluating the importance
of the rules are decreased based on the self-decrease rate in
order to extract enough number of Nf rules for each class.
How to choose the proper self-decrease rate is very impor-
tant, since it influences the testing accuracy as shown in Table
III. The accuracy is defined in the following: if the traffic
prediction result of the section at time t is ”Low” and the
real traffic of this section at time t is exactly ”Low”, then, the
accuracy is 100%. The Low/Middle/High accuracy means
the accuracy when the real traffic is Low/Middle/High,
respectively.
TABLE III
AVERAGE PREDICTION ACCURACY FOR DIFFERENT SELF-DECREASE
RATE(TESTING)
self-decrease rate Prediction Accuracy
Overall Low Middle High
0.95 85.01 65.76 88.44 84.01
0.90 82.26 64.98 85.31 80.81
0.85 81.72 60.19 82.26 71.83
0.80 80.97 59.70 82.01 70.41
0.75 80.67 58.02 73.92 73.68
0.70 76.04 54.75 83.39 67.93
It can be seen from Table III that the more the criteria
for important association rules decreases, the lower the
prediction accuracies become.
E. Optimal Route with Traffic Prediction
The next step is to use the prediction for the optimal route
calculation in order to obtain better routes. For example, if
the navigation system knows section A in the route will have
a high traffic volume during the traveling, the navigation
system can chose another optimal route to avoid being
trapped in the heavy traffic.
Q values at the intersections of the current route are revised
as follows when the car arrive at the intersection i at time t:
Qd(i, j) ? Qd(i, j) ? ?1, If Vi j(t + 1) = Low,
Qd(i, j) ? Qd(i, j) + ?2, If Vi j(t + 1) = High,
where, Vi j(t+1) represents the traffic volume prediction from
intersection i to intersection j at time t, ?1 and ?2 are the
parameters for the reward and punishment by future traffic
prediction, respectively, and ?1=?2= 5 are used.
In order to study the efficiency of the traffic volume
prediction, the greedy method is applied to the vehicle after
the above update of Q values, which means the vehicle will
choose the route with the minimum Q-value.
Comparison is done between using updated Q values by
traffic prediction and using Q values based on the current
traffic.
Three ODs are considered for calculating the routes with
or without prediction, which are shown in Fig.9.
As shown in the Table IV, Q-value based optimal route
calculation with traffic prediction can reduce the traveling
time of the optimal route since it considers the future traffic
situations when choosing the next section on the optimal
route.
N
S
W E
W 1
W 2
W 3
W 4
W 5
W 6
W 7
N1 N2 N3 N4 N5 N6 N7
S1 S2 S3 S4 S5 S6 S7
E1
E2
E3
E4
E5
E6
E7
:Route forOD pair1 w ith prediction
:Route forOD pair1 w ithoutprediction
:Route forOD pair2 w ith prediction
:Route forOD pair2 w ithoutprediction
:Route forOD pair3 w ith prediction
:Route forOD pair3 w ithoutprediction
O 1 O 2 O 3
D1 D2
D3
O r,D r :Origin/Destination ofroute r
Fig. 9. Comparison of the routes with or without prediction.
TABLE IV
AVERAGE TRAVELING TIME OF OPTIMAL ROUTE(TIME UNIT)
OD pair without prediction with prediction Improved Rate( % )
1 61 51 19.6 %
2 215 187 13.0 %
3 155 114 26.5 %
V. CONCLUSION
In this paper, a generalized sequential association rule
mining has been proposed using Generalized GNP with
MBFP processing mechanism. It is clarified from simulations
that the proposed method can extract important time-related
association rules for each class of the consequent attributes
efficiently. These rules are used to decide to which class the
time-related data belong. From simulations, we have also
found that the proposed method can be used in traffic pre-
diction problems. And the obtained rules can provide useful
information for the Q-value based optimal route calculation,
thus, finally improve the effectiveness of the optimal route
algorithm for the navigation system. Further improvements
on how to combine the traffic volume prediction and optimal
route algorithm more efficiently will be studied in the next
step.
REFERENCES
[1] I. Kaysi, M. Ben-Akiva and H. Koutsopoulos, An Integrated Approach
to Vehicle Routing and Congestion Predictions for Real-time Driver
Guidance, Transportation Research Records, 1408, Transportation Re-
search Board, Washington D.C., pp. 66-74, 1993.
[2] C. Zhang and S. Zhang, Association Rule Mining: models and algo-
rithms, Springer, 2002.
[3] H. Zhou, W. Wei, K. Shimada, S. Mabu and K. Hirasawa, “Time Related
Association Rules Mining with Attributes Accumulation Mechanism
and its Application to Traffic Prediction”, Journal of Advanced Com-
putational Intelligence and Intelligent Informatics, Vol. 12, No. 5, pp.
467-478, 2008/7.
[4] R. Agrawal and R. Srikant, “Fast Algorithms for Mining Association
Rules”, In Proc. of the 20th VLDB Conf., pp.487-499, 1994.
[5] M. Klemettinen, H. Mannila, P. Ronkainen, H. Toivonen and A.I.
Verkamo, “Finding Interesting Rules from Large Sets of Discovered
Association Rules”, In Proc. of the Third Int’l Conf. on Information
and Knowledge Management, pp.401-408, Nov.1994.
[6] A. Savasere, E. Omiecinski and S. Navathe, “An Efficient Algorithm
for Mining Association Rules in Large Databases”, In Proc. of the 1995
Int’l Conf. on Very Large Data Bases, pp. 432-443, Sept.1995.
[7] J. H. Holland, “Adaptation in Natural and Artificial Systems. Ann
Arbor: University of Michigan Press”, 1975.
[8] D. E. Goldberg, “Genetic Algorithm in search, optimization and ma-
chine learning”, Addison-Wesley, 1989.
[9] M. K. Mainali, K. Shimada, S. Mabu and K. Hirasawa, ”Optimal
Route Based on Dynamic Programming for Road Networks”, Journal
of Advanced Computational Intelligence and Intelligent Infrormatics,
Vol. 12, No. 6, pp. 546-553, 2008.
[10] S. Mabu, K. Hirasawa and J. Hu, ”A Graph-Based Evolutionary
Algorithm: Genetic Network Programming(GNP) and Its Extension
Using Reinforcement Learning”, Evolutionary Computation, MIT press,
Vol. 15, No.3, pp.369-398, 2007.
[11] T. Eguchi, K. Hirasawa, J. Hu and N. Ota, ”A study of Evolutiosnary
Multiagent Models Based on Symbiosis”, IEEE Trans. on Syst., Man
and Cybernetics - Part B -, Vol.36, No.1, pp.179-193, 2006.
[12] H. Zhou, W. Wei, K. Shimada, S. Mabu and K. Hirasawa, ”Time
Related Association Rules Mining with Attributes Accumulation Mech-
anism and its Application to Traffic Prediction”, In Proc. of the IEEE
Congress on Evolutionary Computation, pp. 305-311, 2008.
