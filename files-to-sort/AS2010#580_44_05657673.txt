An Efficient Approach for Web-Log Mining Using ART 
 
 
Shantanu Sharma 
Computer Engineering 
National Institute of Technology 
Kurukshetra, Haryana, India. 
to_shantanusharma@yahoo.com 
 
Manish Varshney 
Computer Science and Engineering  
SSVIT 
Bareilly, UP, India. 
to_manishvarshney@yahoo.com 
 
Abstract—Information on the Web is growing dramatically. 
Without a recommended system, the users may spend lots of 
time on the Web in finding the information they are interested 
in [5]. With the Web becoming the most popular media for 
collecting, sharing, and distributing information, it is very 
common for educational institutions, and organizations to 
develop Web-Based Training (WBT) systems [6]. Data mining 
in Web log known as Web-log mining or Web mining has been 
a hot spot of research work. Many Web mining methods based 
on association rule [1] have been proposed. Data on the Web is 
really unstructured, and implementation of association rule 
has some limitation. Overcome of these limitation can be done 
with neuro-fuzzy approach but without optimization. In this 
paper, we present a novel technique for Web-log mining using 
ART (Adaptive Resonance Network), and compare it with 
neuro-fuzzy approach. 
Keywords: ART (Adaptive Resonance Network), Neuro-
Fuzzy, Web-log, Web-Mining, attention-subsystem, orienting 
subsystem, slow-learning, and fast-learning. 
I. INTRODUCTION 
With the explosive development of Internet, data mining 
in Web log, which is called “Web mining”, has been a hot 
spot of research work. The process of Web mining is to 
derive implied information of Web user’s behavior from 
huge Web data repositories [1].  Web data usually exhibits 
the following characteristics [9]: the data on the Web is 
huge in amount, distributed, heterogeneous, unstructured, 
and dynamic. 
 
Figure 1.  Basic Mining Techniques. 
Web log mining belongs to Web usage mining, it 
discovers the mode of user visiting Web page by mining 
Web log, recognizes user’s faith degree, taste, satisfaction 
degree by analyzing the rules in the log, discovers potential 
users, enhances service compete capability of the Web site 
[3]. The results of Web-log mining can be applied to 
enhance Web services.  
The main contribution of this paper is a Web-mining 
approach for Web-log analysis via introducing ART 
structure for huge, widely distributed, highly heterogeneous, 
semi-structured, interconnected, evolving, hypertext 
information repository of World Wide Web. So, the Web 
sites automatically improve their organization and 
presentation by self-learning.  
The paper is organized as follows: in Section 2, we 
describe previous work in field of Web-mining; in section 3, 
we discuss about Web-log; in section 4, we discuss about 
ART1 in detail with its algorithm flowchart, and proposed 
results; and finally in section 5, we focus on conclusion, and 
future-work. 
II. PREVIOUS WORK 
Previous work in field of Web log mining is done using 
different techniques like simple search operation on Web 
log, clustering or categorization of Web log using some 
algorithms that organize information into groups based on 
similarity function or by using some predefined set of rules, 
analyze the log (discover knowledge), and knowledge 
management.  
The contribution of understanding Internet user’s 
behavior, and identification of relevant pattern is the benefit 
to predict, and prefetch Web object in Web caching [7]. An 
intelligent Web caching architecture, capable of adapting its 
behavior on the basis of the access patterns of the client 
sheers. Such usage patterns, or models, are extracted from 
the historical access data recorded in log files, by means of 
data mining techniques [8]. Semantic Web log model [3], 
SWLM based on ontologies to interpret properties of Web 
log, then computing the semantic distances of log concepts. 
Hybrid Information Filtering Model [5] collects user interest 
pages, constructs user interest model, and implements 
content-based filtering [5, 12] on the basis of Web log 
mining. Integer program [13] groups log registers from the 
same IP address, and ensuring the link structure of the site is 
followed in any constructed session. It does not construct 
the sessions one at a time but instead simultaneously 
constructs all sessions. Fuzzy Immunity Clonal Selection 
Neural Network [10] in which fuzzy association rule is 
extracted by the Immunity Clonal Selection Neural Network 
algorithm, after; rule set is applied on a dataset, and to 
2010 International Conference on Education and Management Technology?ICEMT 2010?
196  978-1-4244-8618-2/10/$26.00 © 2010 IEEE 
evaluate working performance of the algorithm. The fuzzy 
multiset [12] is adopted to characterize user’s navigation 
behavior, and to construct a multi fuzzy similar matrix to 
represent similarity between different users’ browsing 
behavior, which can reflect wholly the interest of Web user 
with the Web page-click rate, Web page viewing time, user's 
preference, and so on. 
III. WEB LOG 
A log from a Web server (Web log) contains records of 
users’ browsing activities, and is a potentially large source 
of data on customer preferences [14]. Important information 
[1, 4] of every single access is recorded as Web log entry by 
Web servers, including the URL requested, the source IP 
address, remote host name, log-name, user name, request, 
status, bytes, and timestamp as:  
• remote host: remote hostname or IP address 
• log-name: remote log-name of the user 
• user name: user name with which the user has 
authenticated himself 
• date: date, and time of the request 
• request: exact request line as it came from the client 
• status: HTTP status code returned to the client 
• bytes: content-length of the document transferred 
Web mining techniques have been applied to extract 
usage patterns from Web log data. This process, known as 
Web usage mining, is traditionally performed in several 
stages [1] to achieve its goals as following: 
1. Collection of Web data in an activity of recording 
Web-log in Web server. 
2. Preprocessing of Web data such as filtering 
crawlers requests, requests to graphics, and 
identifying unique sessions. 
3. Analysis of Web data is to discover interesting 
usage patterns or profiles. 
4. Interpretation/evaluation of the discovered profiles. 
 
Figure 2. Basic Structure of ART. 
There are several general challenges [6] associated with 
obtaining due results from the data. Firstly, extraneous 
information is mixed with useful one, for example log 
entries that record the request failures, page graphics, etc. 
are irrelevant to our current analysis. Secondly, multiple 
server requests may be generated by a single user action. 
Thirdly, multiple user actions may generate the same server 
request. Fourth, local activities (for example browser 
navigation using ‘back’, and ‘forward’ buttons) are not 
recorded. 
IV. ART 
ART architecture models can self-organize in real time 
producing stable recognition while getting input patterns 
beyond those originally stored. ART is a family of different 
neural architectures. The most basic architecture is ART1 
(Carpenter, and Grossberg, 1987). ART1 can learn, and 
recognize binary patterns. ART2 (Carpenter, and Grossberg, 
1987) is a class of architectures categorizing arbitrary 
sequences of analog input patterns. ART is used in 
modeling such as invariant visual pattern recognition where 
biological equivalence is discussed in 1990. 
An ART system consists of two subsystems, an 
attention-subsystem, and an orienting subsystem (fig. 2). 
The stabilization of learning, and activation occurs in the 
attention-subsystem by matching bottom-up input activation, 
and top-down expectation. The orienting subsystem controls 
the attention-subsystem when a mismatch occurs in the 
attention-subsystem. In other words, the orienting 
subsystem works like a novelty detector. 
A. Properties of ART 
An ART system has four basic properties. 
1. Self-scaling computational units. The attention-
subsystem is based on competitive learning 
enhancing pattern features but suppressing noise. 
2. Self-adjusting memory search. The system can 
search memory in parallel, and adaptively change its 
search order. 
3. Already learned patterns directly access their 
corresponding category. 
4. The system can adaptively ovulate attentional 
vigilance using the environment as a teacher. If the 
environment disapproves the current recognition of 
the system, it changes this parameter to be more 
vigilant. 
B. ART-1 
There are two models of ART-1, a slow-learning, and a 
fast-learning one. The slow learning model is described by 
in terms of differential equations while the fast learning 
model uses the results of convergence in the slow learning 
model. 
ART-1 is the first version of ART-based networks 
proposed by Carpenter, and Grossberg. The network was 
intended for unsupervised clustering of binary data. It has 
two major subsystems: attention-subsystem, and orienting 
subsystem. The attention-subsystem is a one layer neural 
network. It has D input neurons to learn D-dimensional data, 
and C output neurons to map C maximum clusters. Initially 
all output neurons are uncommitted. Once an output neuron 
2010 International Conference on Education and Management Technology?ICEMT 2010?
197
learned from a pattern, it becomes committed. The 
activation function is computed at all committed output 
neurons. The input, and output is connected by both top-
down, and bottom-up weights. 
C. Algorithm 
ART1 algorithm uses following parameters as: 
• n: number of components in the input vector. 
• m: maximum number of clusters that can be formed. 
• bij: bottom-up weights (from F1(b) unit Xi to F2 
unit Yj). 
• tji: top-down weights (from F2 unit Yj to F1 unit Xi). 
• : vigilance parameter. 
• s: binary input vector (an n-tuple). 
• x: activation vector for F1 (b) layer (binary). 
• x: norm of vector x, defined as the sum of the 
components xi. 
The algorithm of ART1 is as following: 
Step 0. Initialize parameters: 
L > 1 
0 <   1 
Initialize weights: 
0 < bij(0) < L / L- 1 + n  
tji(0) = 1. 
Step 1. While stopping condition is false, do Steps 2-13. 
Step2. For each training input, do steps 3-12. 
Step 3. Set activation of all F2 units to zero. 
Set activations of F1(a) units to input vector s. 
Step 4. Compute the norm of s: 
s=  si 
Step 5. Send input signal from F1(a) to the F1(b) 
layer: 
Xi = si. 
Step 6. For each F2 node that is not inhibited: 
If yj  -1, then 
Yj =  bij*xi 
Step 7. While reset is true, do step 8-11. 
Step 8. Find J such that yJ  yj for all 
nodes j. 
If yj = -1, then all nodes are inhibited and 
this pattern                                                         can 
not be clustered. 
Step 9. Recompute activation x of F1(b): 
Xi = si*tji. 
Step 10. Compute the norm of vector x: 
x =  xi 
Step 11. Test for reset: 
If x / s < , then 
Yj = -1 (inhibited node J)  
If x / s  , then 
proceed to Step 12. 
Step 12. Update the weights for node j (fast 
learning): 
bij(new) = L*xi / L-1 + x, 
tji (new) = xi 
Step 13. Test for stopping condition. 
Algorithm’s parameters are initialized as following: 
TABLE 1.  INITIALIZATION OF ALGORITHM PARAMETERS. 
Parameter   Permissible Range   Sample 
Value 
L L > 1 2 
 0 <   1 0.8 
bij 0 < bij(0) < L / L – 1 + n 1 / 1 + n 
tji   tji (0) = 1                                  1 
D. Proposed Results 
If any Web-mining researches apply this ART1, then can 
easily obtained best result than any implemented Web-
mining techniques because of vigilance parameter, top-
down, and bottom-up weights. This technique also generates 
clusters for all hours of a day (fig. 4), clusters for all days of 
a week, histogram analysis for hours-days within day-month 
respectively (fig. 5).  
Also using ART, it is more beneficiary to minimize the 
number of steps in Web mining as compare to neuro-fuzzy 
approach. As neuro-fuzzy approach uses five major steps to 
produce the Web-usage pattern forecast, and Web-usage 
data analyzer; named Web-log data collection, data 
preprocessing, self-organizing map, Web-usage data cluster, 
and fuzzy inference system (fig. 6). But ART use only three 
steps as Web-log data collection, data preprocessing, and 
ART itself (fig. 7). 
 
Figure 3. ART1 Algorithm. 
 
Figure 4. Hourly Analysis of Web-log using ART (proposed). 
2010 International Conference on Education and Management Technology?ICEMT 2010?
198
 
Figure 5.  Histogram Hourly Analysis by ART (proposed) 
V. CONCLUSION AND FUTURE WORK 
Web log mining is the combination of Web technology, 
and data mining technology. In this paper, we suggest 
adaptive analysis method for Web-log which helps in 
designing Web-sites, analysis human Web behavior. 
Because of huge amount of Web-log, it is infeasible to 
classify them by hand, so by using ART model, we can 
analyze them in supervised learning.  
Another variant of ART produces better result than this 
one. So, any one can pick this idea, and implement both, and 
can analyze their results. In future, ART can also be 
implemented with all previous techniques like semantic 
Web log, hybrid information filtering, fuzzy immunity 
clonal selection neural network, and fuzzy multiset to build 
Multi-pass ART, and provide more efficient result. 
REFERENCES 
[1] Sen Guo ,Yongsheng Liang , Zhili Zhang, and Wei Liu, “Association 
Rule Retrieved from Web Log Based on Rough Set Theory,” Fourth 
International Conference on Fuzzy Systems and Knowledge 
Discovery, 2007. 
[2] Tsuyoshi Murata, and Kota Saito, “Extracting Users' Interests from 
Web Log Data,” Proc. of IEEE/WIC/ACM International Conference, 
2006. 
[3] Chen Wu, Jun Dai, Qi-Feng Li, and Jun-Wu Zhu, “A Semantic 
Clustering Algorithm Oriented to Web Log,” Proc. Fifth International 
Conference on Machine Learning and Cybernetics, Dalian, 13-16 
August 2006, pp. 1566-1569. 
[4] Yew-Kwong Woon, Wee-Keong, Ng Xiang Li, and Wen-Feng Lu, 
“Efficient Web Log Mining for Product Development,” Proce. 
International Conference on Cyberworlds, 2003. 
[5] Ling Yun, Wang Xun, and Gu Huamao, “A Hybrid Information 
Filtering Algorithm Based on Distributed Web log Mining,” Third 
International Conference on Convergence and Hybrid Information 
Technology, 2008, pp. 1086-1091. 
[6] Albert K W Wu, and C H Leung, “Evaluating Learning Behavior of 
Web-Based Training (WBT) using Web Log,” Proc. International 
Conference on Computers in Education, 2002. 
[7] Areerat Songwattana, “Mining Web logs for Prediction in Prefetching 
and Caching,” IEEE International Conference on Convergence and 
Hybrid Information Technology, 2008, pp. 1006-1011. 
 
Figure 6. Neuro-Fuzzy Approach for Web Mining 
 
Figure 7. Reduction of Stages on Neuro-Fuzzy after ART implementation. 
 
[8] Francesco Bonchi, Fosca Giannotti, Giuseppe Manco, and Chiara 
Renso, “Data Mining for Intelligent Web Caching,” 2001, pp. 599-
603. 
[9] Zhang, Y., J.X. Yu, and J. Hou, “Web Communities: Analysis and 
Construction,” Berlin Heidelberg, 2006. 
[10] Zhenguo Chen, “Web Log Mining Based On Fuzzy Immunity Clonal 
Selection Neural Network,” IEEE 2007. 
[11] Sutheera Puntheeranurak, and Hidekazu Tsuji, “Mining Web logs for 
a Personalized Recommender System,” IEEE 2005, pp. 445-448. 
[12] Suozhu Wang, Chunjie Xu, and Rui Wu, “Clustering Method based 
on Fuzzy Multisets for Web Pages and Customer Segments,” Proc. 
International Seminar on Business and Information Management, 
2008, pp.125-128. 
[13] Robert F. Dell, Pablo E. Roman, and Juan D. Vel´asquez, “Web User 
Session Reconstruction Using Integer Programming,” Proc. 
IEEE/WIC/ACM International Conference on Web Intelligence and 
Intelligent Agent Technology, 2008, pp. 385-388. 
[14] J.D.Vel´asquez, and V. Palade, “Adaptive Web Sites: A Knowledge 
Extraction from Web Data Approach,” IOS Press, Amsterdam, NL, 
2008. 
[15] R. Cooley, B. Mobasher, and J. Srivastava, “Web Mining: 
Information and Pattern Discovery on the World Wide Web,” Proc. 
Ninth IEEE International Conference Tools with AI, 1997, pp. 558-
567. 
 
2010 International Conference on Education and Management Technology?ICEMT 2010?
199
