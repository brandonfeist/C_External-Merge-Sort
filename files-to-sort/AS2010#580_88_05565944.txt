   
Improved Algorithms Research for Association Rule Based on Matrix  
LUO XianWen, WANG WeiQing 
(Information Management Department , Southwest University, Rongchang Campus, Chongqing 402460, China ) 
 
 
Abstract 
In association rules, although Apriori algorithm uses 
cut-technology when it generates item sets of candidates, it 
has to scan the entire database while scanning the transaction 
database each time. The scanning speed is very slow for its 
large amount of data. The improved Apriori algorithm based 
on matrix is improved from the Apriori algorithm and the 
matrix algorithm. Its basic idea is transforming the event 
database into matrix database so as to get the matrix item set 
of maximum item set. When finding the frequent k-item set 
from the frequent k-1item set, only its matrix set is found. So 
only the corresponding data are calculated to get frequent k 
item set. Therefore the improved Apriori algorithm ’ s 
computing time is very fast. Simulation data are used in 
experiments to compare the speeds of the improved Apriori 
algorithm and the Apriori algorithm. The results of the 
experiments prove the efficiency of improved Apriori 
algorithm. 
Key words: Data mining; Apriori?Association rule, Market 
basket analysis?KDD 
Document code: A      TP311 clustering of web search 
results using link analysis: TP301   
  
1  Introduction 
Association rules mining finds some interesting 
associations or relations between the item sets among large 
amount of data. Apriori algorithm is an influential algorithm to 
mine association rules. Apriori applies iterative methods named 
Layer by Layer Search. To search frequent item sets fast, 
Apriori applies Anti-monotonicity of frequent item sets to 
compress search space. DHP algorithm applies Hash technique 
and Reduction technique of event database to increase the 
efficiency of Apriori algorithm. TreeProjection algorithm 
generates frequent item sets by determining item sets in a 
lexicographical order. Association rules mine AprioriTid 
optimization algorithm, AprioriTid optimization algorithm 
optimizes (1)event compression and item compression; (2) key 
words recognition of candidate item sets. The Association Rule 
Mining Algorithm on improved market basket analysis 
introduces interestingness weighting. The Association Mining 
Algorithm based on matrix constructs effective data matrix and 
effectively cut the data matrix to search frequent item sets, 
which reduces a great amount of search time of higher-frequent 
item sets. The Mining Association Rulebased on equivalence 
relation generates candidate frequent item sets based on 
equivalence and equivalence class, which reduces the expense 
of the system. Apriori algorithm mentioned in the literature is 
the most influential algorithm to mine Boolean frequent item 
sets. 
Apriori algorithm applies Reduction technique when it 
generates its candidate item sets, but it has to scan the entire 
database each time, which leads to the slow speed. Aiming at 
the disadvantages of Apriori algorithm and matrix algorithm 
and combining the advantages of the two algorithms, a new 
improved algorithm is proposed.   
1.1   Related Definition 
Definition 1 Events 
One transaction of commodity is an event. An event can be 
shown by a Boolean vector, that is, event I=[I1,I2,…,In] is an 
Item set of n different items.  
Definition 2 Event Database  D  
The item set of Event Ti(i=1,2,3,…,n), in event database D, 
event T can be shown as Ti, < I1, I2, I3 ? In > ?, Ti is the 
event sign in it, one event has a unique sign in the database D;  
I1 I2, ?  Ii ? Im ?I, 1?i?n?m, that is, every event T is an 
item set, then IT ? . Assume that A is an item set, event T 
includes A only when TA ? ?  
Table 1 is a simplified event database D. T001 is the first 
recorded label in the database, the corresponding transactions of 
T001 include I1?I2?I5. The items in the record are listed in the 
order of the labels.  
Definition 3 Association Rules 
Association rules are a logical implication type like A=>B. 
In it, IA ? , IB ? and ?=? BA  When the event 
with S(Support) in the database D includes A ? B , the 
association rule is shown as A=>B?   
Definition 4 S(Support)? 
Support(A=>B)=P(A ? B)=S, in it, S is Probability (the 
percentage of the event including A?B in database D)  
Definition 5 C ( Confidence)?   
Confidence 
(A=>B)=P(A|B )=Support(A=>B)/Support(A)=C, that is, C is 
the percentage of the event including both A and B at the same 
time, P (B |A ) is conditional probability.   
2010 International Conference on Intelligent Computing and Cognitive Informatics
978-0-7695-4014-6/10 $26.00 © 2010 IEEE
DOI 10.1109/ICICCI.2010.55
415
 Definition 6 Maximum item set P 
In an event database D, P is the maximum item set of 
Event Ti(i=1,2,3,… n), that is , P= {Pm|m=1,2,3,… and Pm?
Ti, i=1,2,3,…,n}  
Definition 7 Matrix Library of an Event  
Assume that the item set in the event database D is 
Ti(i=1,2,3,…,m)?and the maximum item set is P=[I1,I2, I3 , ?
In ]?assume that item aij?1?i?m, and 1?j?n?in the 
matrix Amxn is 1 when event Ti includes Ij in the maximum 
item set P, Otherwise 0, then matrix Amxn is the matrix 
library of the event database D. 
Picture 1 is the corresponding matrix library A9x5 
of the event database D in Table 1. 
Table 1 Event Database 
  
Picture 1 Matrix A9x5    
Definition 8 Mat of Items  
Assume that the event item set in event database D 
is Ti(i=1,2,3,…,m)?and the maximum item set P=[I1,I2, I3 , 
? In ]. Assume that in the event Matrix library of database D, 
the matrix is Amxn. ,  then the corresponding BOOL data item set 
of item Ij?1?j?n?in P in Matrix Amxn is the mat of Ij, Mati  is   
items in the mat.  
In picture 1, the mat of I2 is Mat(I2)=(111101111), 
Mat(I2)2=1?Mat(I2)5=0?v 
Definition 9 Moment of Delivery and Item Set Mat 
Assume that the event item set of event database D is 
Ti(i=1,2,3,…,m) , the maximum item set is P=[I1,I2, I3 , ?
In ], the event matrix library of event database D is Amxn, , then 
the mats of Ij?Ik?1?j?n?Ik?1?k?n ? j?k?in P are 
Mat(Ij) ? Mat(Ik). Assume that 
iii IkMatIjMatIkIjMat )(*)(),( = then the computing 
is moment of cross-operator, Mat?Ij?Ik?is the mat of item set 
IjIk, Mat?Ij?Ik?i is an item of the mat.  
In picture 1, the mat of item I2I5 is Mat(I2 ?
I5)=(111101111)*?100000010?=?100000010?, Mat(I2?I5)2=0?
Mat(I2?I5)8=1? .  
 Related Theorem 
Theorem 1 
Assume that the event item set of event database D is 
Ti(i=1,2,3,…,m)?and the maximum item set P=[I1,I2, I3 , ?
In ], in the event Matrix library of event database D, the matrix 
is Amxn.., the mat of any item set?IjIk? in P is Mat?IjIk??then  
the S(Support) of item set ? IjIk ? is 
mIkIjMatIkIjSupport
m
i
i /)),((),(
1
?
=
=  
Proof: From definition 7, the event item set of event 
database D is Ti(i=1,2,3,…,m), then the event total in event 
database D is   m                                 (1). 
From definition 7 in event matrix library, item aij?1?i?
m, and 1?j?n?in matrix Amm is 1 when event Ti in 
database D includes item Ij in the maximum item set P, 
otherwise 0. Then the total of event Ij is: ?
=
m
i
ija
1
     (2)          
The total of event Ik is:?
=
m
i
ika
1
               (3)       
From (2) and (3), the total of  item set IjIk is: 
?
=
m
i
ikij aa
0
*                                    ?4? 
 
From definition 8,?Mat?Ij?=?
=
m
i
ija
1
           (5) 
then         Mat?Ik?=?
=
m
i
ika
1
               (6) 
   
From definition 9, 
ii
m
i
m
i
ikij
m
i
IkMatIjMataaIkIjMat )(*)(*),(
101
???
===
==
                                             (7) 
From ?2?~(7), the total of item set IjIk of item Ij and item 
Ik are: Mat?Ij??Mat?Ik??Mat?Ij?Ik?          ?8? 
From ?????7?and definition 4, 
mIkIjMatIkIjSupport
m
i
i /)),((),(
1
?
=
=   
Example: From 1.1, the event number of event database D in 
picture 1 is 9, the mat of item set I2I5 is Mat(I2?
I5)=(111101111)*?100000010?=?100000010??then the total 
of the item set I2I5 is d 2)),(
9
1
=?
=i
iIkIjMat ?so the 
S(Support) is 
9/2/))5,2(()5,2(
1
== ?
=
mIIMatIISupport
m
i
i ? 
  
1.4 Principle of the Algorithm  
Apriori algorithm applies Reduction technique when it 
1 1 0 0 1 
0 1 0 1 0 
0 1 1 0 0 
1 1 0 1 0 
1 0 1 0 0 
0 1 1 0 0 
1 1 0 0 0 
1 1 1 0 1 
1 1 1 0 0 
416
     
 
generates its candidate item sets, but it has to scan the entire 
database each time, which leads to the slow speed. The 
improved Apriori algorithm based on matrix is improved from 
the Apriori algorithm. Its basic idea is transforming event 
database into event matrix library A, finds the maximum item 
set P while transforming , then finds items in the maximum item 
set P and the mat of the item set, then finds its S(Support), at 
last all the frequent item sets are found. In this way, scanning 
the database one time results in frequent item sets directly 
without the process of finding candidate item sets in Apriori 
algorithm. Therefore the data amount to be scanned is small and 
the speed is very fast. In an event database D with m data 
records, its any event Tk = [ Ik1 , Ik2, , Ik3 , ? Ikm ]
?k=1,2,…,m?, then Apriori-sort algorithm is dealt with in the 
following 4 steps:  
1) Find the maximum item set: scan all of the event database D, 
find the maximum item set P in event item set Ti(i=1,2,3,… n), 
that is, P= {Pm|m=1,2,3,…,and Pm?Ti, i=1,2,3,…,n}  
2)Find matrix library Amxn?Assume that the event item set in 
event database D is Ti(i=1,2,3,…,m)?and the maximum item set 
in D is P=[I1,I2, I3 , ?In ]?Assume that in matrix Amxn item aij
?1?i?m, and 1?j?n?is 1 when event Ti in database 
D includes item Ij in the maximum item set P, , otherwise 
0.  
3) Find Mat(Ij,Ik,Id) of any item set IjIkId: Assume that the 
event item set in event database D is P=[I1,I2, I3 , ?In ], and 
the maximum item set in D is P=[I1,I2, I3 , ?In ]?the matrix 
of event matrix library in event database D is Amxn, the mat of 
item set IjIk is Mat(Ij,Ik), the mat of item Id is Mat(Id)?then the 
mat of item set IjIkId is 
iii IdMatIkIjMatIdIkIjMat )(*),(),,( = ?  
4) Find frequent item sets: From Mat(Ij,Ik,Id) of item set 
IjIkId and Theorem 1, find its S(Support)  
mIdIkIjMatIdIkIjSupport
m
i
i /)),,((),,(
1
?
=
= ? if its 
S(Support) is less than its minimum S(Support), then the item 
set is frequent item set, otherwise delete the non-frequent item 
set.  
2. The improved Apriori algorithm based on 
Matrix 
  The basic principle of the improved Apriori algorithm 
based on Matrix is finding the mat of event database. In an 
event database D with m data records, its any event Tk = [ Ik1 , 
Ik2, , Ik3 , ?Ikn ]?k=1,2,…,m?, then the Apriori-sort algorithm 
is shown as follows:     
1)  MaxItemSet(D,P);// find the maximum item set P in event 
database D 
2)  SwapJuzhen(D,P,A);// from the maximum item P, transform 
transaction database D into the corresponding matrix library A 
3) for(i=0;i<n;i++)//n is the item number of the maximum item 
set 
{ 
  c1[i]=0?// / S(Support)of an item of initialization is 0 
for(j=0;j<m;j++)//m is the item number of the maximum 
database  
c1[i]= c1[i]+A?ij?;// find S(Support) of an item 
if (c1[i]>=minsup)// If S(Support) of an item is more than or 
equal to the minimum S(Support), then the item set is frequent 
item set 
l1=l1?{ c1[i]}//, add a frequent item set  
?// get a frequent item  
4?while(lk-1!=null)// As long as frequent item k-1 is not empty, 
keep finding frequent k item set 
 JuzhenGen(lk-1,A,minsump);// from frequent k-1item set, get 
frequent k item  
Function SwapJuzhen(D,P,A) in the algorithm are as follows: 
procedure  SwapJuzhen(D,P,A) 
for(i=0;i<m;i++)// m is the record number of the maximum 
database 
{ 
  for(j=0;j<n;j++)// n is the item number of the maximum 
item set 
 ? 
  if (Ik?P?j?)// If item Ik is the j item of the maximum 
item set, 
 A(ij)=1?    //the value of the matrix is 1 
else//otherwise  
A(ij)=0?    // the value of the matrix is 0 
? 
?//transform database D into matrix library A   
Function JuzhenGen(Lk-1,A,minsump) in the algorithm are as 
follows:  
procedure  JuzhenGen(Lk-1,A,minsump) 
for each I1?Lk-1;//l1 is an item set in frequent k-1 item 
set   
for each I2?Lk-1;//l2 is another item set in frequent k-1 
item set    
{ 
if(I1[1]=I2[1] ? I1[2]=I2[2] ? … ? I1[k-2]=I2[k-2] ?
I1[k-1]?I2[k-1])//the first k-2 items in frequent k-1 
item set are the same but the last item is different  
cl=0;// S(Support) of an item of initialization is 0 
for(i=0;i<m;i++) 
{ 
Mat(I1[1] ? I1[2] ?…? I1[k-2] ? I1[k-1] ? I2[k-1])i= 
Mat(I1[1]?I1[2]?…?I1[k-2]?I1[k-1])i* Mat(I2[k-1])i;//form 
k item set 
417
 Cl=cl+ Mat(I1[1]?I1[2]?…?I1[k-2]?I1[k-1]?I2[k-1])i;//find 
S(Support) of k item set 
} 
If (cl>=minsup)// S(Support) is more than or equal to the 
minimum S(Support)  
{ 
I1=I1?I2[k-1]);//get frequent k item set 
Lk=Lk?{I1};//add frequent item set to k item set 
? 
?  
3  Simulation Experiment and Analysis 
Qualitative analysis of complexity of time: The improved 
Apriori algorithm based on matrix scans the database D once 
without finding candidate item sets when searching frequent 
item sets. Therefore the improved Apriori algorithm based on 
matrix computes much faster than the traditional one does.  
To prove correctness and effectiveness of the improved Apriori 
algorithm based on matrix, about 500-5000 sample data are 
chosen (the sample data document is standard simulation 
datasets on association rules provided by the Almaden Center of 
IBM Company), under the same hardware configuration, the 
work efficiencies of Apriori algorithm and the improved Apriori 
algorithm based on matrix are tested 10 times. In these tests, the 
computing time of the two algorithms is compared under the 
same software and hardware configuration, that is, both with the 
hardware of Intel(R) Pentium(K) 2.80GHZ CPU?1GB memory?
80GB and Windows XP sp2 operating system. The authors find 
that the mined results of the two algorithms are the same in all 
the computing of the simulation data, but the computing time of 
the improved Apriori algorithm based on matrix is far less than 
that of Apriori algorithm. The results of the experiments are 
shown in table 2 and picture2.  
Table 2 Computing time of the two algorithms  
Record 
number 
Apriori 
Computing 
time?ms?
Improved 
Apriori 
Computing 
time?ms? 
500 1787 35 
1000 8187 108 
1500 44444 178 
2000 46288 214 
2500 97467 292 
3000 199253 407 
3500 226558 467 
4000 310379 569 
4500 155243 470 
5000 208685 572 
0
50000
100000
150000
200000
250000
300000
350000
1 2 3 4 5 6 7 8 9 10
Apriori??
??Apriori??
 
  
Picture 2 is the curve of the change of computing time of 
the two algorithms with the change of event amount when the 
tested record number is 500-5000.  The abscissa is the event 
data amount in event database, the ordinate is the computing 
time. From this picture, the computing time of the two 
algorithms becomes longer with the increase of the event data 
amount, but the computing time of the improved Apriori 
algorithm does not go up so fast, and the computing time of the 
improved Apriori algorithm based on matrix is far less than that 
of Apriori algorithm.  
4  Conclusion 
Mining the association rules are of great practical 
value, it is applied widely in the field of data mining. 
Because of the large scale of event database mined, the 
working efficiency of mining algorithm of association rules 
becomes extremely important. The authors have made a 
deep study on Apriori algorithm and design an improved 
Apriori algorithm based on matrix. This algorithm only 
scans the event database once, then transforms an event 
database into event matrix library shown in binary data and 
mines the matrix library. The experiments show: the 
efficiency of mining time of the improved Apriori 
algorithm based on matrix is higher. At the same time, the 
improved Apriori algorithm based on matrix can be applied 
on any occasion when Apriori algorithm is applicable. 
  
References 
[1] Jia Juan Qi Wenfa Hou Xiaohui Chen Kunqiu. Irregular Layout 
Model Based Region Dividing and Partition Sorting Algorithms [J]. 
Computer Engineering and Applications, 2003, 39(30): 51-53,61 
[2]  Gatos B, Mantzaris S, Perantonis S, et al. Automatic Page Analysis ofa 
Digital Library from Newspaper Archives[J]. International Journalof Digital 
Libraries, 2000, 3(1): 77-84 
[3]  Aiello M, Monz C, Todoran L, et al. Document Understanding for 
aBroad Class of Documents[J]. International Journal on DocumentAnalysis 
and Recognition, 2002, 5(1): 1-16 
[4] PENG Yipu; XIONG Yongjun. Study on Optimization of AprioriTid 
Algorithm for Mining Association Rules [J]. Computer 
Engineering,2006,32(5):55-57 
[5]  WANG De-xing; HU Xue-gang; LIU Xiao-ping; WANG Hao. 
Association Rule Mining Algorithm on Improved Market Basket 
418
     
 
Analysis [J]. Journal of Chongqing University(Natural Science Edition),. 
2006,29(4):105-141 
[6] WANG Hong-ming; SHEN Xia-jiong; LI Guo-yan; ZANG Guo-qing. 
An Association Mining Matrix Algorithm Based on Equivalence Class 
[J]. Computer Engineering,2006,32(2):45-47 
[7]Wang Yan. Algorithm Research for Mining Association Rule Based 
on Equivalence RelationJ]. Computer Engineering and Applications. 
Computer Engineering and Applications,2006(8):187-189. 
[8]  RASKESH AGRAWAL, TOMASZ IMIEL INSKI, ARUN 
SWA2MI. MiningAssociation Rules between Sets of Items in 
LargeDatabases [ Z ]. In: Proc of ACM SIGMOD Conference 
onManagement of Data, Washington DC, 1993. 207 - 216. 
    
Contact information of the author: 
Post code: 402460 
Address: Luo xianwen, Information management department, 
rongchang campus, Southwest University, 
Rongchang, Chongqing 
Email:  xianwenluo@tom.com?xianwenl@swu.edu.cn 
Tele: 023-46751463  13983636465 
  
 
419
