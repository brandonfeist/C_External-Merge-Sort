Discovering both Positive and Negative Co-location 
Rules from Spatial Data Sets* 
 
Yue Jiang 
Vocational and Technical College 
Yunnan University of Finance and Economics 
Kunming, 650101, P. R. China 
Lizhen Wang+, Ye Lu, Hongmei Chen 
School of Information Science and Engineering  
Yunnan University, Kunming, 650091, P. R. China 
+ Corresponding author: E-mail: lzhwang@ynu.edu.cn 
 
Abstract- With the explosive growth and extensive applications 
of spatial data sets, it is becoming more and more important to 
solve the problem how to discover knowledge automatically from 
spatial data sets. Co-location patterns discovery is an important 
branch in spatial data mining. Traditional algorithms for co-
location patterns mining can only find positive co-location 
patterns. However, negative co-location patterns, which are 
strong negative associated but whose participation index are less 
than a minimum prevalence threshold, sometimes would include 
great valuable information. In this paper, the concept of the 
negative co-location patterns is defined. Based on the analysis of 
the relationship between negative and positive participation 
index, methods for negative participation index calculation and 
negative patterns pruning strategies are given. The methods 
make it possible to discover both positive and negative co-
locations efficiently. The applications of the proposed algorithm 
are studied using the plant data sets of the “Three Parallel Rivers 
of Yunnan Protected Areas”. Finally, an extensive experimental 
analysis is done to show the effectiveness and efficiency of the 
algorithms.  
 
Key-words: Spatial data mining, Co-location patterns, Positive 
patterns, Negative patterns, Pruning 
 
I.    INTRODUCTION 
 
   Co-location patterns’ mining is a rising and promising field 
in spatial data mining. Yet the approaches to discovering co-
location patterns in the literatures can only find positive co-
location patterns that are prevalent and strong correlated. In 
fact, many interesting patterns have not been discovered from 
databases. One of them is a negative co-location pattern which 
is non-prevalent but strong negative correlated. 
Discovering negative co-location patterns would be 
significant in certain applications. One application is to mining 
plants’ growing information. Botanists are not only interested 
in symbiosis, but also mutually exclusive plants. Another 
application is to identify competing items in business data. 
Related Works: In previous works on co-location patterns 
discovery, the concept of negative co-location patterns has not 
been discussed yet. For mining positive co-location patterns, 
Morimoto [1] defined distance-based patterns as k-
neighboring class sets. In his work, the number of instances 
for each pattern was used as the prevalence measure, which 
                                                 
 * Supported by the National Natural Science Foundation of China under 
Grant No.60463004 and the Research Foundation of the Educational 
Department of Yunnan Province (No. 09Y0048) 
did not possess an anti-monotone property by nature. 
Nevertheless, Morimoto used a non-overlapping instance 
constraint to get the anti-monotone property for this measure. 
In contrast, Shekhar and Huang [2] developed an event centric 
model which abolishes the non-overlapping instance 
constraint, and a new prevalence measure that has the 
desirable anti-monotone property called the participation 
index was defined. At the same time, Huang, Shekhar and 
Xiong [3] proposed a general mining approach: Join-based 
approach mining co-location patterns, which established the 
basis of co-location patterns mining. Yoo and Shekhar 
developed the partial-join [4] and the join-less [5] algorithms 
to mining co-location patterns. Wang et al [6] presented a 
novel algorithm for co-location patterns mining. In their paper, 
a data structure called CPI-tree (Co-location Pattern Instance 
Tree) was introduced, which materializes spatial neighbor 
relationships. 
Huang, Pei and Xiong [7] addressed the problem of mining 
co-location patterns with rare spatial events. In their paper, a 
new measure called the maximal participation ratio (maxPR) 
was introduced and a weak monotonicity property of the 
maxPR measure was identified. Verhein and AI-Naymat [8] 
studied mining complex spatial co-location patterns from 
spatial datasets. They introduced the idea of a maximal clique 
and applied the GLIMIT item-set mining algorithm to their 
task [9]. Based on the concept of dynamic participation index, 
Celik et al. studied the zonal co-location patterns discovery 
problem [10]. Wang et al [11] discusses an order-clique-based 
method for mining maximal prevalence co-location patterns. 
The above approaches mainly focused on the discovery of 
positive co-location patterns in a spatial database. While in 
traditional association rules mining, there are some efficient 
negative rules mining approaches. One approach for mining 
negative association rules was presented in [12]. This 
approach needs a user-specified hierarchical structure, which 
is difficult to be put into practice. An approach based on 
interest value for both positive and negative association rules 
mining was proposed in [13]. It used Apriori-like algorithm 
for generating candidate item-sets, which may bring on 
missing non-prevalent item-sets that is useful. An approach 
based on support, confidence and association coefficient for 
both positive and negative association rules mining was 
proposed in [14]. Association coefficient need to be adjusted 
during implementing algorithms. Additionally, this algorithm 
can’t find all of the negative association rules. A novel 
effective algorithm for mining negative association rules 
398
called MNAR was proposed in [15]. MNAR can discover all 
of the negative association rules. In order to reduce the 
complexity of the support calculation in Apriori-like algorithm, 
MNAR provided a bit-based method, which introduced a 
logical operation “or” in support calculation. 
Our Contributions: First, the concepts of negative co-
location patterns and rules are defined. Some lemmas are 
proved, which are used to improve performance of our 
algorithm. Second, after analyzing the relationship between 
positive and negative co-location, an algorithm for discovering 
both positive and negative co-locations is developed. Third, 
the applications of mining both positive and negative co-
locations are studied in the plant data sets of “Three Parallel 
Rivers of Yunnan Protected Areas”. Finally, we conducted 
experimental evaluation using a real dataset. The results show 
that our algorithm is correct and efficient. 
Organization: Section 2 gives the basic concepts of 
negative co-location patterns and rules. Then, based on the 
analysis of the relationship between negative and positive 
participation index, some lemmas for negative participation 
index calculation and improving negative co-locations mining 
are given.  In Section 3, we present our proposed algorithm for 
discovering both positive and negative co-location rules. 
Section 4 is experimental evaluations. The conclusions and 
future works are discussed in Section 5. 
 
II.   Basic Concepts and Lemmas  
 
A.    Related Concepts of the Positive Co-locations  
Given a set of spatial features F, a set of their instances S, 
and a spatial neighbor relationship R over S. R could be 
topological relationships (e.g. linked, intersection), distance 
relationships (e.g. Euclidean distance metric) and mixed 
relationships (e.g. the shortest distance of two points on a 
map). As shown in Fig. 1, there are 4 spatial features A, B, C 
and D and their instances. A.1 stands for the first instance of 
feature A. If R is defined as a Euclidean distance metric and its 
threshold value is d, two spatial objects are neighbors if they 
satisfy the neighbor relationship: 
    ddistanceR  1.B,1.A1.B,1.A  
 
B.5 
B.4 
B.1 
B.3 
A.1 
A.2 
A.3 
A.4 C.1 
C.2 
C.3 
B.2 
? 
? 
D.1 ? 
D.2 
? 
? 
? 
? ? 
? 
? 
? 
? 
? 
? 
Fig. 1. An example data set  
Given a subset of spatial instances  miiiI ,...,, 21	 , 
SI 
 . I is called as an R-neighbor if I forms a clique under 
the neighbor relation R. 
A positive co-location c is a subset of spatial features, i.e., 
Fc 
 . An R-neighbor I is a row instance of a positive co-
location c if I contains instances of all the features in c and no 
proper subset of it does so. The table instance of a positive 
co-location c is the collection of all row instances of c. 
The interest degree of a positive co-location differs from the 
degree of support in traditional association rules mining. A 
new prevalence measure concept called the participation
index is introduced in [3]. Participation ratio will be presented 
before giving the concept of participation index. 
The participation ratio  ifcPR ,  for feature type if  in a 
size-k positive co-location c=  kff ...1  is the fraction of 
instances of feature if  which participate in any row instance 
of co-location c. The participation ratio can be computed as 
 ifcPR , =
 
 ifancetable_inst
cinstancetable
if
|| )(_
, where  is the 
relational projection operation with duplication elimination. 
The participation index of a positive co-location
c= kff ...1  is the minimum in all  ifcPR ,  of co-location c: 
 cPI =   iki fcPR ,min 1	 . 
Example 1 In Fig. 1, A has 4 instances, B has 5 instances, 
and C has 3 instances. Two instances are connected with a 
solid line if they are neighbors. Suppose positive co-location 
c={A, B, C}, the table instance of co-location c has 
{{A.2,B.4,C.2}, {A.3,B.3,C.1}, {A.3,B.3,C.2}}. PR(c, A)=2/4 
since there are only A.2 and A.3 in the table instance. Similarly, 
PR(c, B)=2/5, PR(c, C)=2/3. PI(C)=min(PR(c, A), PR(c, B), 
PR(c, C))=2/5. 
Given a minimum prevalence threshold min_prev, a 
positive co-location c is a prevalent co-location if 
PI(cmin_prev holds. 
Lemma 1 The participation ratio and the participation index 
are monotonically non-increasing with the size of the co-
location increasing. 
Proof Suppose a spatial instance is included in the table 
instances of co-location c. For co-location cc 
' , the spatial 
instance e must be included in the table instances of 'c . The 
opposite is not true. Therefore, the participation ratio is 
monotonically non-increasing. 
Suppose },,{ 1 keec 	 , 
)},({)( 1
1
1
1 min ik
k
i
k eecPRecPI 

	
 	  
)},({min 11 ik
k
i
eecPR 	  )()},({min1 cPIecPR i
k
i
	
	
 
Therefore, the participation index of co-location is also 
monotonically non-increasing.      
Lemma 1 ensures that the participation index can be used to 
effectively prune the search space of co-location pattern 
mining. 
 
B.    Definitions and Lemmas of the Negative Co-locations  
   Definition 1 (negative co-location patterns) A co-location 
pattern T is a negative co-location pattern, if 
__
YXT 	 , where 
399
X is a set of positive items (positive spatial features), 
__
Y  is a 
set of negative items (negative spatial features), and 1|| Y , 
	YX . 
Definition 2 (the PI of negative co-location patterns) the 
participation index of a negative co-location pattern 
__
YXT 	  
is defined as  TPI =   iki XTPR ,min 1	 , where PR (T, Xi) is the 
participation ratio of spatial feature iX in a negative co-
location patterns T. 
The participation ratio  iXTPR ,  of spatial feature iX in a 
negative co-location 
__
YXT 	  can be computed as  
 iXTPR , =
  
 iXancetable_inst
Tancetable_inst
iX
||                (1) 
where   is the relational projection operation with 
duplication elimination. 
Example 2 Take Fig. 1 as an example, for the negative co-
location },,{ DBAT 	 , its PI(T)=min{PR(T, A), PR(T,
B)}=0.75, because  PR(T, A) is 0.75 (there are three A’s 
instances appears in table instances of the negative co-location 
T) and PR(T, B)  is 0.8. 
Definition 3 (prevalence negative co-location patterns) 
given a minimum prevalence threshold (min_prev), a negative 
co-location pattern 
__
YXT 	 is a prevalence negative co-
location pattern if T meets the following conditions. 
(1) prevXPI min_)(  , prevYPI min_)(   and prevYXPI min_)(   
(2) prevTPI min_)(  . 
I.e., in the non-prevalent positive co-location patterns, the 
negative co-location patterns that we are interested in are of 
the form 
__
YX  , where FX 
 , FY 
 and they are prevalent. 
Example 3 In Fig. 1, if min_prev is set to 0.4, positive co-
location {A, B, D} is non-prevalent. According to Definition 3, 
negative co-location patterns { DBA ,, }, { DBA ,, }, { DBA ,, } 
and { DBA ,, } are prevalent. But the negative co-locations 
{ DBA ,, } and { DBA ,, } are non-prevalent since 
prevDAPI min_25.0}),({ 	 . 
Lemma 2 Let 
__
YX   be a candidate prevalence negative co-
location pattern, where },,,{ 21 kXXXX 	 . If kAAA ,, 21 are 
respectively the number of instances of spatial 
features
kXXX ,, 21  in the positive co-location YX  , the PI 
of negative co-location
__
YX   will be: 
},,,min{)(
2
22
1
11
__
k
kk
X
AX
X
AX
X
AX
YXPI

	         (2) 
where iX is the number of instances of spatial feature iX . 
Proof: Because the PR of each spatial feature in YX   
is
i
i
X
A , the PR of each positive spatial feature in 
__
YX   is 
i
ii
i
i
X
AX
X
A 
	1 . According to Definition 2, 
},,,min{)(
2
22
1
11
__
n
nn
X
AX
X
AX
X
AX
YXPI

	   holds. 
Example 3 Again Fig. 1, for the negative co-location 
},,{ DBAT 	 , there is only table instance {A.3, B.3, D.1} in 
the relevant positive co-location {A, B, D}. By using Lemma 1, 
PI(T)=min{PR(T, A), PR(T, B)}=min{(1-1/4), (1-1/5)}=0.75. 
Lemma 3 Let 
__
YX  and 
__
YX   be prevalence negative co-
location patterns. For prevalence positive co-location 
pattern XXX 	 , 
__
YX  must be a prevalence negative co-
location pattern. 
Proof: (1) According to conditions of Lemma 2, it is 
obviously satisfied that prevYXPIYXPI min_)()(  , 
prevXPI min_)(   and prevYPI min_)(  . 
(2) The number 
iA  of instances of each feature Xi in YX   
is no more than the number 
iB  of instances of each feature Xi 
in YX   or
__
YX  , 
i
ii
i
ii
X
BX
X
AX 

  holds. Then, 
prev
X
BX
X
AX
YXPI
i
ii
i
ii min_}
||
||
min{}min{)(
__




	   
Therefore, 
__
YX   is a prevalence negative co-location 
pattern. 
Lemma 4 Let 
__
YX   be a prevalence negative co-location 
pattern. For a prevalence co-location pattern Z, if ZY 
 holds, 
then
__
ZX  is also a prevalence negative co-location pattern. 
Proof: (1) Because 
__
YX   is a prevalence negative co-
location pattern and ZY 
  holds, 
prevYXPIZXPI min_)()(  , prevXPI min_)(   and 
prevZPI min_)(   hold. 
(2) The number 
iA  of instances of each spatial feature Xi in 
ZX   is no more than the number iB  of instances of each 
spatial feature Xi in YX  , then 
i
ii
i
ii
X
BX
X
AX 

  holds. Since 
__
YX   is a prevalence negative co-location, 
prevYXPI min_)(
__
 holds, then 
prevYXPI
X
BX
X
AX
ZXPI
i
ii
i
ii min_)(}min{}min{)(
____
	



	
 holds, i.e., 
prevZXPI min_)(
__
  holds. Therefore, 
__
ZX  is also a 
prevalence negative co-location pattern. 
A large number of candidate negative co-locations can be 
pruned by Lemma 3 and Lemma 4 (They will be sent to the 
prevalence negative co-location set directly.). 
Definition 4 (conditional probability) The conditional 
probability )(
__
YXCP  of a negative co-location rule 
__
YX   is 
the fraction of row instances of X which have not neighbor 
relationships with row instances of Y, i.e., 
400
)(1
})({instance
}))({instance(
1)(
__
YXcp
Xtable
YXtable
YXCP X 	


	
 , 
where  is the relational projection operation with duplication 
elimination. 
Definition 5 (negative co-location rules) 
__
YX  is a 
negative co-location rule (or called a strong negative co-
location rule) if 
__
YX  is a prevalence negative co-location 
pattern and the conditional probability of 
__
YX  is more than 
a conditional probability threshold (min_conf) defined by 
users. 
 
C.    Difficulties in Discovering Negative Co-location Patterns  
(1) The spatial computation is time-consuming 
Since the instances of spatial features are embedded in a 
continuous space and share complex spatial relationships, a 
large fraction of the spatial computation cost is devoted to 
identifying the spatial instances and relationships between 
spatial instances. 
(2) The existent algorithms can’t be reused 
First of all, the negative association rules mining algorithms 
can not be reused in mining negative co-location patterns since 
there are no traditional “transactions” in spatial data sets. Also, 
algorithms of positive co-location mining can not be used 
directly since some methods must be redesigned (such as 
calculating the PI). 
(3) Generating negative co-location patterns is time-
consuming  
The number of candidate negative co-location patterns 
increases exponentially with the size of data sets. 
 
III.   Mining both Positive and Negative Co-locations  
 
    First, the method of calculating the PI of a candidate 
negative co-location based on the relevant positive co-
location’s instances is given by Lemma 2.  Thus, the algorithm 
is designed to mining both positive and negative co-locations. 
Moreover, Lemma 3 and Lemma 4 are the guarantees of 
performing a large number of prunings. 
Second, all spatial features are size-1 prevalent co-locations 
according to the definition of the participation index measure. 
In order to make the candidate co-locations’ set closer to the 
prevalent co-locations’ set, size-(k-1) prevalent co-locations 
join with each other to generate candidate co-locations in 
positive co-location mining algorithms. However, negative co-
location patterns are generated by non-prevalent co-locations. 
In order to guarantee that all positive and negative prevalent 
co-locations could be discovered, the size-k candidate co-
locations are generated by joining the size-(k-1) and size-1 
prevalent co-locations. 
Finally, the new algorithm has four phases. The first phase 
computes neighborhood relationships between spatial 
instances, and finds neighborhood relationship set of each 
spatial instance (star neighborhoods).  The second phase 
generates size-k positive and negative candidate co-locations. 
The third phase uses the ideas of the Apriori-like and the join-
less algorithm to generate size-k positive prevalent co-
locations. The fourth phase generates size-k negative 
candidate co-locations, and then discovers prevalent negative 
co-locations and negative rules. 
Algorithm 1 is described as followings. 
Input: F= nfff ..., 21 : a set of spatial feature types; S: a set of spatial 
instances <feature type, feature instance id, location>; R: spatial neighbor 
relationship (e.g., Euclidean distance); min_prev: prevalence threshold; 
min_conf: conditional probability threshold; 
Output: PL: strong positive co-location rules; NL: strong negative co-
location rules; 
Variables: NT= 
nfff
NTNTNT ...,
21
: a set of spatial neighbor 
relationships where 
if
NT is the set of neighbor instances of the spatial 
feature if ; k: co-location size; kH : a set of size-k positive and negative 
candidate co-locations; kC : a set of size-k positive candidate co-locations; Tk: 
a set of table instances of co-locations in Ck; kP : a set of size-k positive 
prevalent co-locations; kQ : a set of size-k positive co-location rules; kL : a 
set of size-k negative candidate co-locations; 
kB : a set of size-k negative 
prevalent co-locations; kI : a set of size-k negative co-location rules; 
Steps: (1) PL ; NL ; FP 	1 ; 1B ; 
(2) NT ? near(F, S, R); // Spatial computations are performed in this procedure. 
In fact, the step converts a spatial data set S to a set of disjoint star neighborhoods 
NT. 
(3) for (k=2; 1kP ; k++) do 
(3.1) 
kH =gen_cand_co-location( 1kP , 1P ); 
(3.2) 
kC =gen_cand_positive(Hk,Pk-1); 
(3.3) Tk =gen_table_instance( kC ,NT); 
(3.4) kP =select_prev_positive( kC ,Tk,min_prev); 
(3.5) kQ =select_positive_rule( kP ,Tk, min_conf); 
(3.6) kkk PHL  ; 
(3.7) for each A in kL  do 
      (3.7.1)for each AYX 	 & prevXPI min_)(  & prevYPI min_)(   do 
       (3.7.2) if 
__
YX  & YX   cannot be pruned by Lemma 2 and 3 
       (3.7.3) then {gen_table_instance( YX  ,NT); 
       (3.7.4)       if prevYXPI min_)(   then YXBk  ; 
(3.7.5)       if prevYXPI min_)(   then YXBk  } 
(3.7.6) else YXBk  ; 
             endfor 
endfor 
(3.8) Ik =select_negative_rule(Bk,min_conf); 
(3.9) kQPLPL  ; 
(3.10) kINLNL  ; 
endfor 
Return PL, NL 
Several core steps in Algorithm 1: 
(1) Step (3.2) generates the set of candidate positive co-
locations Ck. In this step, we delete all candidate co-locations 
kHc  such that some size k-1 subset of c is not in Pk-1. In this 
procedure, the multiresolution pruning method proposed in [3] 
can be used for spatial datasets with strong autocorrelation, i.e. 
where instances tend to be located near each other. 
(2) Step (3.3) generates table instances set Tk of candidate 
co-locations set Ck based on the spatial neighbor relationships 
set NT.  In this step, first, generate coarse table instances of a 
401
candidate co-location by gathering from the ifNT  if the first 
feature of the candidate co-location is if . Second, filter co-
location instances by looking up all instances of the co-
location of features except the first feature of the candidate co-
location. For example, to check the coarse instance {A.1, B.1,
C.1} of co-location {A, B, C}, we examine whether the sub-
instance {B.1, C.1} except A.1 is in the table instances set of 
co-location {B, C}. 
(3) Step (3.7) generates all prevalent negative co-locations. 
It is time-consuming. The cause is that the negative items of 
each non-prevalent co-location will be combined to identify 
prevalent negative co-locations. For example, suppose the co-
location {A, B, D} is a non-prevalent co-location, then we 
have to combine negative co-locations },,{ DBA , },,{ DBA , 
},,{ DBA , },,{ DBA , },,{ DBA , …, and to identify sub-co-
locations AB, BD, AD are prevalent or not, and then to 
calculate the PI of them respectively. This process can be 
improved due to pruning based on Lemma 3 and Lemma 4. 
 
IV.   Experimental Evaluation  
 
  We evaluated the performance and application values of 
Algorithm 1 with a real-world plant distribution data set that 
contains distribution information of plant species in the “Three 
Parallel Rivers of Yunnan Protected Areas” area. All 
experiments were conducted on a 3-GHz Pentium PC 
computer with 2G megabytes main memory, running the 
Microsoft Windows XP operating system. All programs were 
implemented in Java. 
In the plant dataset, the number of plant species (spatial 
feature types) is 16. Three parameters, namely number of plant 
instances (n), prevalence threshold (min_prev), and spatial 
neighbor distance threshold (d), were varied during the 
experiments for verifying the effects of parameters and the 
performance of Algorithm 1. 
 
A.    Effect of the Number of Spatial Instances  
We examined the performance of Algorithm 1 with the 
number of spatial instances. First, we compared Algorithm 1 
with the algorithm which only mines the positive co-locations. 
As shown in Fig. 2(a), the algorithms execution time 
significantly increased with the increment of the number of 
spatial instances. At the same time, the gap between the two 
algorithms becomes wider. This is because the increments of 
table instances and star neighborhoods set NT. Notice the 
differences in the number of positive and negative co-
locations, and that of pruned co-locations by using Lemma 3 
and Lemma 4 in Fig. 2(b). As can be seen, the result of using 
Lemma 3 and Lemma 4 in Algorithm 1 is very obvious. In the 
experiments, the parameters d and min_prev is set to 25 and 
0.15 respectively. 
Because of a bigger d and a smaller min_prev, the number 
of negative co-locations is tremendous when the number of 
spatial instances is 11300. It is important to set reasonable 
parameters in both positive and negative co-locations mining. 
 






    
Q
QX
PE
HU
R
I
FR

OR
FD
WL
RQ
V
SRV QHJ SUXQLQJ




    
Q
7L
PH
?
VH
F
?
$OJRULWKPIRURQO\PLQLQJSRV $OJRULWKP
(a) (b)
Fig. 2. Effect of the number of spatial instances: (a) running time comparison, (b) the number of positive and negative co-locations 
 
B.    Effect of Parameters min_prev and d  
The following experiments examined the effect of the 
parameters min_prev and d. Fig. 3 illustrates the effect of the 
min_prev for the running time and the numbers of positive and 
negative co-locations, while Fig. 4 shows that of the neighbor 
distance d for the running time and the numbers of positive 
and negative co-locations. In the experiments, the number of 
plant instances is 6000. The parameter d is set to 20 in 
experiments of Fig. 3. The parameter min_prev is set to 0.3 in 
experiments of Fig. 4. According to the figures, it can be seen 
that the effect of two parameters in Algorithm 1 is much 
greater than that in only positive co-locations mining. This 
means that the reasonable parameter setting is more important 
in both positive and negative co-locations mining. At the same 
time, we can notice that the effect of pruning by Lemma 3 and 
4 is significant. 
 







     
PLQBSUHY
UX
QQ
LQ
J
WL
PH
?
VH
F
?
$OJRULWKPIRURQO\PLQLQJSRV $OJRULWKP






     
PLQBSUHY
QX
PE
HU
R
I
FR
O
RF
DW
LR
QV
SRV QHJ SUXQLQJ
Fig. 3. Effect of prevalence threshold min_prev  
402
 





    
G
UX
QQ
LQ
J
WL
PH

VH
F

$OJRULWKPIRURQO\PLQLQJSRV $OJRULWKP





    
G
QX
PE
HU
R
I
FR
O
RF
DW
LR
QV
SRV QHJ SUXQLQJ
Fig. 4. Effect of neighbor distance d  
C.    Analysis of the Application Values  
    (1) Discovery of the precious and rare plants by the 
negative rules  
We can discover precious and rare plants in the “Three 
Parallel Rivers of Yunnan Protected Areas” by the negative 
rules, because they appear in many negative rules in the form 
of negative-item. At the same time, if they appear in the 
positive rules in the form of rule’s left-item, we can find that 
their conditional probability values are almost 1 (100%). For 
example, from the negative rules, we notice that the plant R. 
sulphureum and the plant R. brachyanthum appear in many 
negative rules in the form of negative-item. In fact, these two 
Rhododendrons are very rare in this area. The positive rules 
contained them represent their growing community (or 
conditions). According to these positive rules, the rare plants’ 
growing conditions should be protected. 
 (2) Discovery of exotic species by the negative rules  
The discovery of exotic species sometimes is a dangerous 
signal. We find two exotic species appear in negative rules in 
the form of negative-item, but they are not in any of positive 
rules. This is another contribution of negative rules. 
 (3) The alarms coming from the negative rules  
From the mining results, we find that there are many 
Rhododendrons and Arethusas that appear in negative rules in 
the form of negative-item. In fact, the region where the 
Rhododendrons and the Arethusas grow is very beautiful and 
is a famous tourist resort. The discovery of these negative 
rules alarms to the traveling administration. 
 
V.   Conclusions and Future Work  
 
In this paper, we discussed concepts of negative co-location 
patterns and designed an algorithm for mining both positive 
and negative co-locations. In traditional algorithms for 
positive co-locations mining, some co-locations may be 
eliminated if they contain spatial features which have rare 
spatial instances. But using the algorithm proposed by this 
paper, the useful co-location rules are discovered as negative 
rules. 
In the future, more reasonable prevalence thresholds and 
conditional probability thresholds will be studied. In order to 
find more useful rules, the different thresholds of positive co-
locations and negative co-locations need to be set. For 
example, when generating higher-size negative rules, 
conditional probability threshold should be set higher, because 
it increases with the number of features. 
 
REFERENCES 
 
[1] Y. Morimoto, “Mining Frequent Neighboring Class Sets in Spatial 
Databases,” In: Proc. of the seventh ACM SIGKDD Int. Conf. on 
Knowledge Discovery and Data Mining, San Francisco, California 
pp.353-358, 2001. 
[2] S. Shekhar, and Y. Huang, “Co-location Rules Mining: A Summary of 
Results,” In: Proc. of International Symposium on Spatio and Temporal 
Database (SSTD’01), Springer-Verlag, Berlin Heidelberg New York, 
pp.236–240, 2001. 
[3] Y. Huang, S. Shekhar, and H. Xiong, “Discovering Colocation Patterns 
from Spatial Data Sets: A General Approach,” IEEE Transactions on 
Knowledge and Data Engineering, 16(12), pp.1472-1485, 2004. 
[4] J. Yoo, and S. Shekhar, “A Partial Join Approach for Mining Co-
location Patterns,” In: Proc. of ACM International Symposium on 
Advances in Geographic Information Systems (ACM-GIS), Washington 
DC USA, pp.241-249, 2004. 
[5] J. S. Yoo, S. Shekhar, M. Celik, “A Join-Less Approach for Co-Location 
Pattern Mining: A Summary of Results,” In: the fifth IEEE International 
Conference on Data Mining (ICDM’05), pp.813-816, 2005. 
[6] L. Wang, Y. Bao, J. Lu, J. Yip, “A New Join-less Approach for Co-
location Pattern Mining,” In: Proc. of the IEEE 8th International 
Conference on Computer and Information Technology (CIT2008), 
Syney, Australia, pp.197-202, 2008. 
[7] Y. Huang, J. Pei, H. Xiong, “Mining Co-Location Patterns with Rare 
Events from Spatial Data Sets,” GeoInformatica, 10 (3), pp.239-260, 
2006. 
[8] F. Verhein, G. Al-Naymat, “Fast Mining of Complex Spatial Co-
location Patterns using GLIMIT,” In: The 2007 International Workshop 
on Spatial and Spatio-temporal Data Mining (SSTDM'07) in cooperation 
with The 2007 IEEE International Conference on Data Mining 
(ICDM'07), Omaha, Nebraska, USA, pp.679-984, 2007. 
[9] F. Verhein, S. Chawla, “Geometrically inspired itemset mining,” In: 
Proc. of the 6th IEEE Int. Conf. on Data Mining (ICDM 2006), Hong 
Kong, China, pp.655-666, 2006. 
[10] M. Celik, J. M. Kang, S. Shekhar, “Zonal Co-location Pattern Discovery 
with Dynamic Parameters,” In: the Seventh IEEE International 
Conference on Data Mining (ICDM '07), pp.433-438, 2007. 
[11] L. Wang, L. Zhou, J. Lu, J. Yip, “An order-clique-based approach for 
mining maximal co-locations,” Information Sciences 179 (2009) 3370–
3382. 
[12] A. Savasere, E. Omiecinski, S. Navathe, “Mining for Strong Negative 
Rules for Statistically Dependent Items,” In: Proc. of ICDM’02, pp.442 
– 449, 2002. 
[13] X. Wu, C. Zhang, S. Zhang, “Mining both Positive and Negative 
Association Rules,” In: Proc. of the 19th International Conference on 
Machine Learning (ICML 2002), San Francisco: Morgan Kaufmann 
Publishers, pp.658 – 665, 2002. 
[14] M. L. Antonie, O. R. Zaiane, “Mining Positive and Negative Association 
Rules: An Approach for Confined Rules,” In: Proc of the 8th European 
Conference on Principles and Practice of Knowledge Discovery in 
Databases (PKDD 2004), Pisa, Italy, Springer-Verlag, LNCS 3202, 
pp.27-38, 2004. 
[15] Y. Zhu, G. Chen, H. Yang, “Research on Algorithms of Positive 
and Negative Association Rules Mining,” Computer Science, 36 
(3) (2006) 188-190. 
403
