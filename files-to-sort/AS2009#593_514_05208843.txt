  
Research on Mining Association Rules in Distributed System 
 
Ailing Wang  
Department of Mathematics 
Heze University 
 Heze, China 
e-mail: wangailing-heze@163.com 
  
Abstract—With the development of Intemet and the distributed 
database technology, a great deal of data is stored in the 
disrtibuted web nodes and it is impossible to be stored in one 
single node on account of communication, efficiency and 
security.So it's a very important research in the data mining 
domain.This paper makes a thorough research on mining 
association rules in the distributed database system.It extends 
the most classical algorithm Apriori based on distributed 
transactional database system.The system is realized based on 
the local global association rules mining solution. Finally the 
paper puts forward an efficient algorithm of getting association 
rules from frequent itemsets. This improved algorithm shows 
sound extension, short time complexity, small communication 
cost and simplicity. 
Keywords-association rules; data mining; distributed system; 
support 
I. I INTRODUCTION 
Automated acquisition of knowledge is most important in 
Artificial Intelligence.If-then rules are well-known 
techniques for representation of knowledge. Traditionally, 
classification methods of machine learning or data mining 
are always used for knowledge discovering. They commonly 
deal with attributes without considering ordinal information. 
However, we may come across many practical applications 
such as ranking of consumer products, ranking of 
universities and multi-criteria decision problem, etc.Data 
mining is the process of non-trivial extraction of implicit, 
previously unknown and potentially useful information from 
data [1]. Mining association rules is one of the most 
important aspects in data mining. Association rules are 
dependency rules which predict occurrence of an item based 
on occurrences of other items, it is simple but effective and 
can help the commercial decision making like the storage 
layout, appending sale etc. 
We usually use distributed system as a solution to mining 
association rules when mass data is being collected and 
warehoused. With the development of web and distributed 
techniques, we begin to store databases in distributed 
systems. Thus researches on the algorithm of mining 
association rules in distributed system are becoming more 
important and have a broad application foreground. 
Distributed algorithm has characters of high adaptability, 
high flexibility, low wearing performance, easy to be 
connected etc. 
II. RESEARCH METHODOLOGY 
Suppose I={I1,I2, I3, I4, I5, I6…Im}is the set of the goods, 
for given transaction database D, each transaction has an 
unique transaction mark TID and an itemset?itemset ? I?. 
Association rule is an implication expression of the form 
X ?Y, where X and Y are itemsets and X?Y=?. 
Rule evaluation metrics: 
Support-Fraction of transactions that contain both X and 
Y. 
Confidence-Measures how often items in Y appear in 
transactions that contain X. 
Frequent itemset-An itemset whose support is greater 
than or equal to a minsup threshold. 
Given a transaction database D which consists of a set of 
transactions T, the goal of association rule mining is to find 
all rules having support ?  minsup threshold and confidence 
?  minconf threshold. 
Two-step approach for mining association rules: 
• Frequent Itemset Generation. Generate all Itemsets 
whose support ? minsup. 
• Rule Generation. Generate high confidence rules 
from each frequent itemset, where each rule is a 
binary partitioning of a frequent itemset. 
Frequent itemset generation is still more computationally 
expensive. So we’ll concentrate on the first step in the 
following discussion. 
Suppose a transaction database D is stored distributed in 
n spots Si(1?i?n) , D={D1,D2?…?Dn},D is the global 
database and Di(1 ?i ?n) is the local database. |Di| is the 
number of transactions in local database and |D| is the 
number of transactions in global database. For some itemset 
I, I.sup(i) and I.sup is respectively the support of I in 
database Di and D. If I.sup(i) ? |Di|×minsup then I is local 
frequent itemset. If I.sup ? |D| × minsup then I is global 
frequent itemset. 
Theorem: Suppose LLi(k) is the local frequent K-itemset 
in Si, Li(k) is the global frequent K-itemset then 
Li(k) ? *n
i 1
LLi(k)
=
 [2]. 
The above theorem indicates that global frequent 
itemsets must can be derived from local frequent itemsets. In 
distributed database system, getting global candidate 
2009 International Conference on Business Intelligence and Financial Engineering
978-0-7695-3705-4/09 $25.00 © 2009 IEEE
DOI 10.1109/BIFE.2009.113
472
  
frequent itemsets from local frequent itemsets can greatly 
reduce the number of candidate frequent itemsets. 
III.  APRTIDREC ALGORITHM 
Main algorithms for mining association rules consist of 
Apriori[3], DHP[4], Partitionetc[5]. AprTidRec proposed is 
similar to Apriori in this paper,  the difference between them 
is that Apriori includes joint step and pruning step while 
ApriTidRec include only joint setp when generate frequent 
itemset. In AprTidRec,  a record structure called tidRec is 
defined for each candidate frequent itemset. The tidRec of 
itemset I consist of TID of the transactions who contain 
itemset I. I.tidRec is the tidRec of itemset I. The tidRec of 1-
itemset can be got by scanning the transaction database. The 
structure of the record in the algorithm is < I , tidRec, count 
>, I.count is the support of the itemset I, it is equal to the 
length of tidRec that is count=| tidRec |. When generating 
candidate frequent k-itemset from frequent k-1-itemset, the 
tidRec and support of the candidate frequent k-itemset can 
be derived from the intersection of the tidRec of the two k-
1-itemsets. 
AprTidRec-algorithm description:(Ck is candidate 
frequent k-itemset, Lk is frequent k-itemset) 
 Procedure get_association_rule: 
Begin 
a) K=1,Lk= ? 
b) for  all  itemsets  I1? Lk-1  do  begin 
c)  for all  itemsets  I2? Lk-1  do  begin 
d) If I1.iteml=I2.iteml ? I1.item2=I2.item2 ?? ? I1.item 
k-2=I2.item k-2 ? I1.item k-?I2 .itemk-1; 
e)  then 
f)  begin 
g)   Ck.itemsets = I1.item1.I1.item2…I1.itemk-1.I2.itemk-1 
h) Ck.tidRec = I1.tidRec ?  I2.tidRec 
i) Ck.count = | Ck.tidRec | 
j) end 
k) if( Ck.count ? | D  | * minsup )then 
l) Lk= Lk ?  { Ck } 
m) end 
n) end 
End 
From the above algorithm we see that when generate 
global frequent k-itemset we scan the local databases only 
once(during constructing the new storage structure) and 
prune step doesn’t need. So I/O spending is saved , time 
complexity of the algorithm is reduced and efficiency is 
improved. But reduction of time complexity is at the cost of 
increase of space complexity. Each candidate itemset need a 
tidRec structure in the algorithm so large of memory space 
is required if transaction database is huge. How to balance 
between the time and space complexity to get the best 
solution need yet further study. 
IV. SYSTEM REALIZATION 
By using global knowledge database and local global 
communication mode, construct distributed association rules 
mining system as following: 
 
  
 
Figure 1.  System structure 
Local websites generate frequent itemset from local 
database. Global website is responsible for generating the 
superset of all local frequent itemsets and computing the 
global support of each itemset then confirming the global 
frequent itemsets. Finally according to the global frequent 
itemsets and minsup given by the user, association rules 
based on the global database can be acquired and stored in 
the global knowledge database. Detail realization steps 
include: 
A. step1 
•  Generate global frequent 1-itemset by scanning all 
the local databases and exchanging support count 
between local websites. 
B. step2 
Generate frequent k-itemsets(k>1) by: 
• local websites generate lacal frequent itemsets based 
on local database by AprTidRec 
• ocal websites send local frequent itemsets and their 
support to global website 
• global website combine all the frequent itemsets 
from local websites then generate candidate global 
frequent itemsets 
• global website broadcast the candidate global 
frequent itemsets, local website determine the newly 
added itemsets (in candidate itemsets but not in local 
frequent itemsets) and their local support 
473
  
• local websites send newly added itemsets and their 
local support to global website, support is 
accumulated at global website thus the global 
support of each global frequent itemset is acquired 
• global website generate global frequent itemsets 
according to minsup given by the user. 
V. EXPERIMENT AND ANALYSIS 
A. Experiment 
Experiment is carried out on Pentium IV 1.6G?512M 
PC to improve the efficiency of AprTidRec algorithm. 
Database in the experiment is junk mail database get from 
http://www.ics.uci.edu/~mlearn. Name and corresponding 
parameters of two different test datasets is as table1 and 
table2. 
TABLE I.  PARAMETERS’ DEFINITION 
|D| Number of records in the dataset 
|I| Total number of itemsets 
|T| Average number of itemsets in each record 
 
TABLE II.  PARAMETERS’ SETTING 
dataset |D| |I| |T| 
T1 1805 20 8 
 
Run time of algorithms are shown as following Figure 2 
based on dataset T1. 









    
VXSSRUW
UX
Q
WL
PH
P
V
$SU7LG5HF
$SULRUL
 
Figure 2.  Run time based on T1 
 
B. Result 
From the above experiment, we can see that with the 
decreasing of support, run time of Apriori and AprTidRec 
algorithm both increasing. While run time of AprTidRec 
increase less than Apriori with the decreasing of support. 
Generally speaking ApriTidRec has less total run time than 
Apriori. 
VI. CONCLUSION 
We have demonstrated in this paper the new approach to 
mining ordering rules from ordinal distributed database 
system. Mining association rules in distributed database is an 
important aspect of data mining domain. A new algorithm 
based on AprTidRec for mining association rules is 
discussed in this paper. The efficiency of the algorithm is 
verified and the overall system realization is given based on 
the algorithm. There are plans to study how to improve run 
efficiency and how to deal with distributed non-isomorphic 
data sources. In the future, practical application and 
combination with other data mining method will be 
discussed. 
 REFERENCES  
[1] Lan H. Witten, Eibe Frank, Data Mining ,China Machine Press, 
Beijing, 2003. 
[2]  ShiZhongZhi , Knowledge Discovery, Tsinghua Press, Beijing, 2002. 
[3]  R. Agrawal, T. Imielinski,  and A. Swami, “Mining association rules 
between sets of items in large databases”, Proceedings of the ACM 
SIGMOD Conference on Management of data , Washington D C, 
1993, 207-216 
[4]  J.S. Park, M. Chen , and P.S Yu, “An effective hash-based algorithm 
for mining association rules”, Proc of the ACM SIGMOD Int'l Conf 
on Management of Data, Jose, CA,1995, 175-186 
[5] Ashok Savasere, Edward Omiecinski, and Shamkant Navathe?“An 
efficient algorithm for mining association rules in large database”, 
Proceeding of the VLDB conference, Zurich Switzerland, 1995, 432-
444 
[6] Agrawal R,Strikant R.Fast algorithms for mining association rules in 
large databases. Proceedings of the 20th international conference on 
very large databases. New York:Institute of Electrical and Electronics 
Engineers? 
[7] Park J S, Chen M, PS Yu.An effective hash-based algorithm for 
mining association rules>A@.Proc of the ACM SIGMOD Int'l Conf on 
Management of Data. Jose, CA,??? 
[8] Ashok Savasere, Edward Omiecinski, Shamkant NavatheAn 
efficient algorithm for mining association rules in large 
database>A@.Proceeding of the VLDB conference>C@ Zurich 
Switzerland,1995?? 
[9] KARGUPTA H,PARK B,HERSHBERGER D,et al. Collective 
datamining:a new perspective toward distributed data mining].Procof 
Advanced in distributed data mining. AAAI/MIT, 2000, :133-184 . 
[10] Chen L D, Frolick M N. Web-based Data Warehousing 
Fundamentals,Challenges, and Solutions .Information System 
Management, 2000,1, (1) .  
[11]  Symth P, Goodman R M. An information theoretic approach to rule 
induction from databases .IEEE Trans on Knowledge and Data 
Engineering, 1992,44, 4(4) :301-316 .  
[12] Wilson R, Marinez T. Improved heterogeneous distance functions 
.Journal of Artificial Intelligence Research, 1997,61, 6(1) :1~34 .  
[13]  Silberschatz A, Stonebraker M, Ullman J. What makes patterns 
interesting in knowledge discovery sysstems .IEEE Trans on 
Knowledge and Data Engineering, 1996,86, 8(6) :970974 .  
474
  
[14]  Fayyad U, Piatetsky-Shapiro G et al. From data mining to knowledge 
discovery in databases .AI Magazine, 1996,173, 17(3) :37~54 .  
[15] Eckerson W W. Scaling Web Warehouse .DB2 Magazine, 1999,2, (2) 
:12~15 .  
  
475
