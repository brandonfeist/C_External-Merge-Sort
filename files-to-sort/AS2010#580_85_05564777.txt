Research of AprioriHybird algorithm and application in Network Situational 
Awareness 
Wang Yanbo' Wang Huiqiang2 Jiang Xuefee 
College of Computer Science and Technology 
Harbin Engineering University 
Harbin, China 
wangyb@hrbeu.edu.cn 
Abstract-The article analyzes the advantages and 
disadvantages of Apriori, AprioriTid and AprioriHybrid 
simply. To solve the bottleneck of AprioriHybrid algorithm, a 
kind of Hash-based method to condense candidate itemset is 
presented, and providing the corresponding algorithm. Finally 
the experiment proves the efficiency of improved 
AprioriHybrid-H is better than AprioriHybrid Algorithm's, 
there is strong guiding significance to apply in the concrete 
network situational awareness systems so that excavating a 
large number of interesting association rules, understanding 
the current network status, judging and taking measures 
timely. 
Keywords-Network security situational; AprioriHybird 
algorithm; hash; itemset 
I. FOREWORD 
With the rapid development of global information and 
the increasing of people's reliance on the network, the 
network has become an indispensable part of life, economic, 
military and other areas. At present the traditional network 
security theory and technology has been unable to provide 
reliable protection for network security. To improve the 
kinds of mission-critical system security effectively in the 
complex network environment, it is urgent to explore new 
theories and methods. In this context, people propose to 
carry out the research of Network Security Situational 
Awareness System in the large-scale complex networks, 
which integrates the various methods in the traditional 
network security theory such as: Attack detection, 
positioning and tracking, and covers the network security 
assessment and forecasting techniques, and pays more 
attention to the security situation and future trends of the 
network system as a whole. 
Situation is a state, a trend, a whole concept. Network 
Security Situation Awareness refers to extract and 
understand the security elements which can cause the 
network security changed, then show and predict future trend 
in the large-scale network environment [I]. This calls for 
mining valuable information from lots of network security 
data in order to better analyze and forecast network situation. 
The Association Rule Theory can find relation among a mass 
of data, while the link can reflect some the potential rules, 
then help us make better analysis and judgment, which has 
978-1-4244-5540-9/10/$26.00 ©2010 IEEE 
170 
YUMing4 
Information and computer engineering college 
Northeast Forestry University 
Harbin, China 
yumingnefu@163.com 
been applied in the network security field, and showed 
advantage that other methods can't match. 
For this reason, this paper will suggest to apply 
association rule mining in network security situational 
awareness, and make the data which reflect network situation 
from the many aspects as network security elements, 
excavate, find the links and rules, and then analyze and 
predict current and future network state, in order to realize 
network security situation awareness, and help network 
managers better understand the network status. 
II. RESEARCH AND IMPROVEMENT OF APRIORIHYBIRD 
Agrawal et al proposed algorithm AIS and SETM in 
1993, and put forward an improved algorithm Apriori and 
AprioriTid in 1994[2]. However, the study discovers that so 
much time has been spent on solving large itemsets by 
Apriori algorithm (because of multiple scans to the 
database), while less space required; On the contrary when 
using AprioriTid algorithm, which takes less time, while 
more space required (since NCk need to be saved when the 
algorithm is running). 
2.5 
g 1. 5 
? 
E 
;= 
0.5 
--- AprioriTid 
--+- Apri ori 
O ?--?--?--?--?==??? 
1 
*n 
( MinSuppon;O.3) 
Figure 1 Execution time per step of Apriori and AprioriTid 
The efficiency map of algorithm Apriori and AprioriTid 
can be obtained by detecting the experimental data. From 
Figure 1, we can see that algorithm Apriori is much faster 
than algorithm AprioriTid on solving the frequent 2-itemsets, 
but a lot of the time also is consumed (relative to the time 
consumed on solving the K>2 frequent itemsets by the 
algorithm Apriori). However, AprioriTid algorithm shows its 
advantage on solving the K>3 frequent itemsets. 
AprioriHybird algorithm is the combination of Apriori 
and AprioriTid. Its main idea is to use Apriori algorithm at 
the initial traversal, and switch to AprioriTid algorithm when 
NCk is suitable for memory at the end of the traverse [31. 
Heuristic can be used to estimate in current traversal 
whether the NCk suit memory or not. At the end of current 
traversal, there are the candidate counts of Ck. From this 
point, if there is NCk, what is the size? It means that the size 
is L candidate CE Ck(SUpport) plus transaction quantity. If the 
size is small enough to be suitable for the memory, but also 
in the current traversal the large candidate less than the 
previous traversal, then converted to AprioriTid. 
However, whether Apriori or AprioriTid algorithm, the 
numbers of candidate k-itemsets which are examined are 
enormous. Hash-based technology can be a good solution to 
this problem. 
The idea of Hash-based technology: a kind of hash-based 
technology can be used to compress the candidate k-itemsets 
Ck (k>I). For example, when scanning everything in the 
database, and generating the frequent l-itemsets Ll from the 
candidate l-itemsets in C[, we can get all the 2-itemsets 
generated from each transaction, and then hash (or mapping) 
them into the buckets which have different hash table 
structure, and increase the bucket count. If the corresponding 
bucket count is lower than the support threshold, the 2-
itemsets can't be frequent 2-itemsets, therefore should be 
removed from the candidate sets. The hash-based technology 
can greatly compressed the examined k-itemsets. 
The specific algorithm Hash-condense 0 as follows: 
( 1 ) for all affairs tED do begin 
(2) for(int k = 2; k < t.size; k++) 
(3) S(t)k = {{i[, h, ... ik} I il E t, hE t, ... ik E t} 
(4) for cES(t) k do begin 
(5) h(c)?HIm; I/hO is Hash function, H is 
bucket , k is the number of itemset , n is 
bucket number 
(6) end 
(7) end 
(8) for( int k = 2; k < K; k++) 11K represents the 
total number of hash 
(9) for (n =O, n < Nk, n++) do begin liNk 
represents the number of bucket when 
hashing k itemsets 
( 10) if HIm.count < minsupport then do 
( 11 ) for c E the itemsets in Him do begin 
( 12 ) insert c into Sk II Sk is candidate 
itemset which is deleted from Ck 
(13) end 
(14) end 
We integrate Hash-condense ( ) into the algorithm 
AprioriHybird, and the improved algorithm is called 
AprioriHybird-H, the specific description as follows: 
(1) k = 0; II Flag variable, indicates the number of the 
current itemsets 
(2) Ll = {l-itemset in the large itemsets}, Sk = Hash­
condenseO; 
171 
(3) for(k=2; Lk.l,c null; k++) do begin 
(4) Ck = apriori-gen(Lk.l); Iinew candidate 
(5) delete Sk from Ck 
(6) for all affairs tED do begin 
(7) Ct = subnet(Ck, t); lithe candidate contained in t 
(8) for all candidate c E Ct do 
(9) c.count++; 
(10) end 
(11) Lk = {c E Ck I c.count :::: minsupport} ; 
(12) NCLsize = Lcandidate CE Ck support(C) + the total 
number of affairs; 
(13) if NCLsize < Memory capacity M /\ Ck 
amount< Ck-l amount then do 
(14) break; II jump out of the current cycle 
(15) end 
(16) for all affairs tED do begin 
(17) Ct = subnet(Ck, t); II the candidate contained in t 
(18) if (Ct,c null) then NCk += <t.TID, Ct>; 
(19) end 
(20) for ( k  = k + 1; Lk-l ,c null; k++ ) 
(21) Ck = apriori-gen(L k-l); 
(22) delete Sk from Ck 
(23) NCk = null; 
(24) for all entries tENCk_l do begin 
(25) Ct = { c E Ck I (c-c[k]) E t. the collection of 
itemsets/\(c-c[k-l])Et. the collection of itemsets 
}; 
(26) for all candidate c E Ct do 
(27) c.count++; 
(28) if (Ct,c null) then NCk += <t.TID, Ct>; 
(29) end 
(30) Lk = {c E Cklc.count :::: minsupp} ; 
(31) end 
(32) Answer = the union of Lk 
At the first line of the algorithm, k is designated as a 
mark variable which can use to indicate the current acquired 
item number; at the second line, in the process of acquiring 
Ll, while by Hash-condense( ) function finding all candidate 
k-itemsets that need to be removed. Doing so, scan the 
database at the first time will be spent more time, but there is 
great significance for compression of the follow-up 
candidate k-itemsets. Thus, overall performance of the 
algorithm will be improved significantly; the steps of Apriori 
algorithm is at (3)?(15) line, the difference is at the fifth line, 
that is, to delete the collection which acquired by hash and 
need to be remove from k-itemsets by using of algorithm 
Apriori, while (12)?(14) line used to detect whether NCk is 
suitable for memory in order to make the algorithm jump out 
of loop, turn to line (16); algorithm line (16)?(19) is to 
establish NCk in memory; the steps of AprioriTid algorithm 
is at (20?(31) line, the difference is the initial value of k, the 
current value of k plus one, that is, starting from k + 1 step to 
turn into the algorithm AprioriTid, and the 22nd step is the 
same to the fifth step; to acquire union of all Lk is at the 32nd 
line, and then get the ultimate collection of all the large 
itemsets. 
III. ALGORITHM PERFORMANCE Ev ALUA TION 
We use the same data to do simulation experiments, set 
all kinds of support, and the results shown in Figure 2. 
14 
-+-AprlorIHvbird-H 
0.5 0.4 0.3 0.2 0.1 0.05 
MinSupp 
Figure 2 AprioriHybird-H and AprioriHybird Performance Comparison 
As can be seen, nearly in all cases, the performance of 
algorithm AprioriHybird-H is better than AprioriHybrid's. 
AprioriHybird-H algorithm uses hash-based technology to 
solve the problems of candidate itemset compression, while 
reduce the times of database scans [4]. Moreover, with the 
support increasing, the performance is very stable, and the 
time did not increase suddenly during this process. The 
experimental results show AprioriHybird-H algorithm is 
faster 2 to 3 times than Algorithm. 
IV. APPLIED IN NETWORK SITUATIONAL AWARENESS 
SYSTEM 
The algorithm is applied in the Network Security 
Situation System, and host log, Snort (IDS) log, SNMP 
information and Netflow related information are collected, 
and then make the information integrated and reduced 
simply, we can get a numeric association rules table, as 
shown in Table 1. 
Serial number CPU. 
1. 5-10?? 
2. 1O-15?? 
3. 40-6()o/", 
4e 85·?., 
Table 1 Numeric Association Rules Table" 
MemOf)' Snort·tP. IP-Receive.' tP·Send.> 
5-10%., 12000·18000. 1200 -19000. 0·900. 
10·m., 12000·18000. 49000·56000. 0 ·900. 
50?., 240oo·NaN. 49000·56000. 0·900. 
80·9?., 24ooo·NaN. 49000·56000. 900·42000. 
The meanings of some fields in the table: 
flow (Kb)  Net·Stat .. 
10240·26OOOe Low .. 
10240·26OOOe Low", 
26000·33000. Elevated .. 
51240-68000. High. 
CPU, Memory: indicate in the network host CPU and 
Memory usage rates; 
172 
Snort-IP: The length of IP packet that Snort collects; 
IP-Receive and IP-Send: sent and received IP data 
packets information which is collected by SNMP group; 
Flow: network traffic information which is collected by 
NetFlow group; 
Net-State: the assessment of the overall monitoring 
network state, which includes five grades,: Low, Guarded, 
Elevate, High, Severe. 
The algorithm AprioriHybird-H is applied in Network 
Security Situation Awareness System, we can acquire the 
valuable information from mass of multi-source 
heterogeneous data, then analyze and judge the impact of 
certain network attacks on network security, which helps to 
show clearly and intuitively Network security situation, and 
the network administrators conveniently grasp network 
security situation and make a rational decision. 
V. CONCLUSION 
AprioriHybird-H algorithm is an improved algorithm 
based on AprioriHybrid algorithm, which integrates the 
advantages of Apriori algorithm and AprioriTid algorithm, 
and uses hash-based techniques so as to further reduce and 
compress the examined itemset, and obtains good 
performance. The algorithm has been successfully integrated 
into "Eleventh Five-year" pre-research project which is 
applied by Harbin Engineering University, School of 
Computer Science and Technology 605 Research office, and 
achieved better results. 
ACKNOWLEDGMENT 
This paper is supported by the National Defense 
Advanced Foundation, the National Natural Science 
Foundation of China (90718003, 60973027), the National 
High Technology Research and Development Program of 
China (863) (2007AAOIZ401) and the Specialized Research 
Fund for the Doctoral Program of Higher Education of China 
(20050217007). 
REFERENCES 
[I] [I] Wang huiqiang, Lai jibao, Zhu liang, Liang ying. Survey of 
Network Siluation Awareness System. Computer Science. vo!.33, 
pp.5-IO, Octorber 2006 
[2] [2] Shao jingfeng, Yu zhongqing. Principle and Algorithm of Data 
Mining. China WaterPower Press. 2003. 
[3] [3] Qin jisheng, Song hantao. Sludy and Improvement of 
AprioriHybrid Algorithm in Mining Association Rules. Computer 
Engineering. vo1.30, pp.7-8, September 2004 
[4] [4] Huang jin, Yin zhiben. Improvement of Apriori Algorithmfor M 
ining Association Rules. Journal of UEST of China. Vo1.32, pp.76-79, 
Februaty 2003 
